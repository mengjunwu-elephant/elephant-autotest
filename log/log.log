INFO 2025-03-04 17:42:54,534 [test_get_modified_version.py-->line:23]:接口测试开始
INFO 2025-03-04 17:42:54,536 [test_get_modified_version.py-->line:31]:》》》》》用例【正确获取修正版本号】开始测试《《《《《
DEBUG 2025-03-04 17:42:54,536 [test_get_modified_version.py-->line:33]:test_api:get_modified_verssion
INFO 2025-03-04 17:42:54,548 [test_get_modified_version.py-->line:27]:接口测试结束
INFO 2025-03-04 17:44:23,332 [test_get_modified_version.py-->line:23]:接口测试开始
INFO 2025-03-04 17:44:23,333 [test_get_modified_version.py-->line:31]:》》》》》用例【正确获取修正版本号】开始测试《《《《《
DEBUG 2025-03-04 17:44:23,333 [test_get_modified_version.py-->line:33]:test_api:get_modified_verssion
DEBUG 2025-03-04 17:44:23,335 [test_get_modified_version.py-->line:34]:test_parameters:None
INFO 2025-03-04 17:44:23,337 [test_get_modified_version.py-->line:27]:接口测试结束
INFO 2025-03-04 17:44:44,983 [test_get_modified_version.py-->line:23]:接口测试开始
INFO 2025-03-04 17:44:44,983 [test_get_modified_version.py-->line:31]:》》》》》用例【正确获取修正版本号】开始测试《《《《《
DEBUG 2025-03-04 17:44:44,983 [test_get_modified_version.py-->line:33]:test_api:get_modified_verssion
DEBUG 2025-03-04 17:44:44,983 [test_get_modified_version.py-->line:34]:test_parameters:None
INFO 2025-03-04 17:44:44,984 [test_get_modified_version.py-->line:27]:接口测试结束
INFO 2025-03-04 17:44:56,171 [test_get_modified_version.py-->line:23]:接口测试开始
INFO 2025-03-04 17:44:56,171 [test_get_modified_version.py-->line:31]:》》》》》用例【正确获取修正版本号】开始测试《《《《《
DEBUG 2025-03-04 17:44:56,171 [test_get_modified_version.py-->line:33]:test_api:get_modified_verssion
DEBUG 2025-03-04 17:44:56,171 [test_get_modified_version.py-->line:34]:test_parameters:None
INFO 2025-03-04 17:44:56,172 [test_get_modified_version.py-->line:27]:接口测试结束
INFO 2025-03-12 18:20:04,688 [test_get_atom_version.py-->line:19]:接口测试开始
INFO 2025-03-12 18:20:04,688 [test_get_atom_version.py-->line:27]:》》》》》用例【正确获取atom版本号】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,688 [test_get_atom_version.py-->line:29]:test_api:get_atom_version
DEBUG 2025-03-12 18:20:04,689 [test_get_atom_version.py-->line:30]:test_parameters:None
INFO 2025-03-12 18:20:04,716 [test_get_atom_version.py-->line:23]:接口测试结束
INFO 2025-03-12 18:20:04,716 [test_get_limit_switch.py-->line:19]:接口测试开始
INFO 2025-03-12 18:20:04,717 [test_get_limit_switch.py-->line:27]:》》》》》用例【获取限制开关】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,717 [test_get_limit_switch.py-->line:29]:test_api:get_limit_switch
DEBUG 2025-03-12 18:20:04,717 [test_get_limit_switch.py-->line:30]:test_parameters:None
INFO 2025-03-12 18:20:04,718 [test_get_limit_switch.py-->line:23]:接口测试结束
INFO 2025-03-12 18:20:04,718 [test_get_modified_version.py-->line:20]:接口测试开始
INFO 2025-03-12 18:20:04,718 [test_get_modified_version.py-->line:28]:》》》》》用例【正确获取修正版本号】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,718 [test_get_modified_version.py-->line:30]:test_api:get_modified_verssion
DEBUG 2025-03-12 18:20:04,718 [test_get_modified_version.py-->line:31]:test_parameters:None
INFO 2025-03-12 18:20:04,719 [test_get_modified_version.py-->line:24]:接口测试结束
INFO 2025-03-12 18:20:04,719 [test_get_robot_type.py-->line:19]:接口测试开始
INFO 2025-03-12 18:20:04,719 [test_get_robot_type.py-->line:27]:》》》》》用例【正确获取机械臂型号】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,719 [test_get_robot_type.py-->line:29]:test_api:get_robot_type
DEBUG 2025-03-12 18:20:04,719 [test_get_robot_type.py-->line:30]:test_parameters:None
INFO 2025-03-12 18:20:04,720 [test_get_robot_type.py-->line:23]:接口测试结束
INFO 2025-03-12 18:20:04,720 [test_get_system_version.py-->line:19]:接口测试开始
INFO 2025-03-12 18:20:04,720 [test_get_system_version.py-->line:27]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,720 [test_get_system_version.py-->line:29]:test_api:get_system_version
DEBUG 2025-03-12 18:20:04,720 [test_get_system_version.py-->line:30]:test_parameters:None
INFO 2025-03-12 18:20:04,720 [test_get_system_version.py-->line:23]:接口测试结束
INFO 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:20]:接口测试开始
INFO 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:74]:》》》》》用例【关闭位置超差，到位反馈】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:76]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:77]:test_parameter_1:1
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:78]:test_parameter_2:0
INFO 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:74]:》》》》》用例【开启位置超差，到位反馈】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:76]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:77]:test_parameter_1:2
DEBUG 2025-03-12 18:20:04,721 [test_set_limit_switch.py-->line:78]:test_parameter_2:0
INFO 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:74]:》》》》》用例【关闭到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:76]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:77]:test_parameter_1:None
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:78]:test_parameter_2:None
INFO 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:74]:》》》》》用例【打开到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:76]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:77]:test_parameter_1:None
DEBUG 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:78]:test_parameter_2:None
INFO 2025-03-12 18:20:04,722 [test_set_limit_switch.py-->line:119]:》》》》》用例【关闭位置超差，到位反馈】开始测试《《《《《
INFO 2025-03-12 18:20:04,723 [test_set_limit_switch.py-->line:119]:》》》》》用例【开启位置超差，到位反馈】开始测试《《《《《
INFO 2025-03-12 18:20:04,723 [test_set_limit_switch.py-->line:119]:》》》》》用例【关闭到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
INFO 2025-03-12 18:20:04,723 [test_set_limit_switch.py-->line:119]:》》》》》用例【打开到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
INFO 2025-03-12 18:20:04,724 [test_set_limit_switch.py-->line:144]:》》》》》用例【关闭位置超差，到位反馈】开始测试《《《《《
INFO 2025-03-12 18:20:04,724 [test_set_limit_switch.py-->line:144]:》》》》》用例【开启位置超差，到位反馈】开始测试《《《《《
INFO 2025-03-12 18:20:04,724 [test_set_limit_switch.py-->line:144]:》》》》》用例【关闭到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
INFO 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:144]:》》》》》用例【打开到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
INFO 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:28]:》》》》》用例【关闭位置超差，到位反馈】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:30]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:31]:test_parameter_1:1
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:32]:test_parameter_2:0
INFO 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:28]:》》》》》用例【开启位置超差，到位反馈】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:30]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:31]:test_parameter_1:2
DEBUG 2025-03-12 18:20:04,725 [test_set_limit_switch.py-->line:32]:test_parameter_2:0
INFO 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:28]:》》》》》用例【关闭到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:30]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:31]:test_parameter_1:None
DEBUG 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:32]:test_parameter_2:None
INFO 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:28]:》》》》》用例【打开到位反馈，查看运动接口机接口是否生效】开始测试《《《《《
DEBUG 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:30]:test_api:set_limit_switch
DEBUG 2025-03-12 18:20:04,726 [test_set_limit_switch.py-->line:31]:test_parameter_1:None
DEBUG 2025-03-12 18:20:04,727 [test_set_limit_switch.py-->line:32]:test_parameter_2:None
INFO 2025-03-12 18:20:04,727 [test_set_limit_switch.py-->line:24]:接口测试结束
INFO 2025-03-12 18:31:25,162 [test_get_atom_version.py-->line:19]:接口测试开始
INFO 2025-03-12 18:31:25,165 [test_get_atom_version.py-->line:27]:》》》》》用例【正确获取atom版本号】开始测试《《《《《
DEBUG 2025-03-12 18:31:25,165 [test_get_atom_version.py-->line:29]:test_api:get_atom_version
DEBUG 2025-03-12 18:31:25,165 [test_get_atom_version.py-->line:30]:test_parameters:None
INFO 2025-03-12 18:31:25,167 [test_get_atom_version.py-->line:23]:接口测试结束
INFO 2025-03-13 16:20:27,159 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:20:27,161 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:20:27,161 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:20:27,161 [test_get_firmware_version.py-->line:34]:test_parameters:None
INFO 2025-03-13 16:20:32,256 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:21:45,020 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:21:45,021 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:21:45,021 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:21:45,021 [test_get_firmware_version.py-->line:34]:test_parameters:None
INFO 2025-03-13 16:21:50,080 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:24:09,175 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:24:09,176 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:24:09,176 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:24:09,176 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 16:24:09,226 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 16:24:09,226 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 16:24:09,226 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 16:24:09,226 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:36:57,114 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:36:57,115 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:36:57,115 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:36:57,115 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 16:36:57,163 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 16:36:57,163 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 16:36:57,163 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 16:36:57,163 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:47:51,518 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:47:51,518 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:47:51,518 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:47:51,518 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 16:47:51,571 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 16:47:51,571 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 16:47:51,571 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 16:47:51,571 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:48:09,751 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:48:09,752 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:48:09,752 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:48:09,752 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 16:48:09,807 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 16:48:09,807 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 16:48:09,807 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 16:48:09,808 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 16:48:20,790 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 16:48:20,790 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 16:48:20,790 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 16:48:20,790 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 16:48:20,833 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 16:48:20,833 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 16:48:20,833 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 16:48:20,833 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 17:07:04,593 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:07:04,593 [test_get_firmware_version.py-->line:31]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 17:07:04,593 [test_get_firmware_version.py-->line:33]:test_api:get_firmware_version
DEBUG 2025-03-13 17:07:04,593 [test_get_firmware_version.py-->line:34]:test_parameters:None
DEBUG 2025-03-13 17:07:04,648 [test_get_firmware_version.py-->line:40]:请求类型断言成功
INFO 2025-03-13 17:07:04,648 [test_get_firmware_version.py-->line:53]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 17:07:04,648 [test_get_firmware_version.py-->line:55]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 17:07:04,648 [test_get_firmware_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 17:07:04,648 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:07:04,648 [test_get_modified_version.py-->line:31]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 17:07:04,648 [test_get_modified_version.py-->line:33]:test_api:get_modified_version
DEBUG 2025-03-13 17:07:04,649 [test_get_modified_version.py-->line:34]:test_parameters:None
INFO 2025-03-13 17:07:04,652 [test_get_modified_version.py-->line:27]:环境清理完成，接口测试结束
INFO 2025-03-13 17:16:20,230 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:16:20,230 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 17:16:20,230 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 17:16:20,230 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:16:20,276 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:16:20,276 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 17:16:20,276 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 17:16:20,277 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:16:20,280 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:16:20,281 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 17:16:20,281 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 17:16:20,281 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:16:20,323 [test_get_modified_version.py-->line:41]:请求类型断言成功
ERROR 2025-03-13 17:16:20,323 [test_get_modified_version.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_modified_version.py", line 47, in test_get_modified_version
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-13 17:16:20,324 [test_get_modified_version.py-->line:50]:期望数据：0
DEBUG 2025-03-13 17:16:20,324 [test_get_modified_version.py-->line:51]:实际结果：1
INFO 2025-03-13 17:16:20,324 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 17:16:20,324 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:17:09,241 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:17:09,241 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 17:17:09,242 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 17:17:09,242 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:17:09,294 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:17:09,294 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 17:17:09,294 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 17:17:09,295 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:17:09,296 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:17:09,297 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 17:17:09,297 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 17:17:09,297 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:17:09,341 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:17:09,341 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 17:17:09,341 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 17:17:09,341 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:21:59,069 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:21:59,070 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 17:21:59,070 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 17:21:59,070 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:21:59,113 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:21:59,113 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 17:21:59,113 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 17:21:59,114 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:21:59,115 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:21:59,116 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 17:21:59,116 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 17:21:59,116 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:21:59,159 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:21:59,159 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 17:21:59,159 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 17:21:59,160 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 17:21:59,162 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 17:21:59,162 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 17:21:59,162 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 17:21:59,162 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 17:21:59,206 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 17:21:59,206 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 17:21:59,206 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 17:21:59,207 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:44:50,748 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:44:50,749 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 18:44:50,749 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 18:44:50,749 [test_get_firmware_version.py-->line:35]:test_parameters:None
INFO 2025-03-13 18:44:55,800 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:44:55,801 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:44:55,801 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:44:55,801 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 18:44:55,801 [test_get_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 18:45:00,869 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:45:00,870 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:45:00,870 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 18:45:00,871 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 18:45:00,871 [test_get_modified_version.py-->line:35]:test_parameters:None
INFO 2025-03-13 18:45:05,928 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:46:12,016 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:46:12,017 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 18:46:12,017 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 18:46:12,017 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:46:12,066 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:46:12,066 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 18:46:12,066 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 18:46:12,067 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:46:12,069 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:46:12,069 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:46:12,069 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 18:46:12,069 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:46:12,113 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:46:12,113 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 18:46:12,113 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 18:46:12,113 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:46:12,115 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:46:12,115 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 18:46:12,115 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 18:46:12,115 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:46:12,160 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:46:12,160 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 18:46:12,160 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 18:46:12,160 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:47:17,801 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:47:17,801 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,801 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 18:47:17,801 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:47:17,852 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:47:17,852 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 18:47:17,852 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 18:47:17,853 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:47:17,856 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:47:17,856 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,856 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 18:47:17,856 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:47:17,899 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:47:17,899 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 18:47:17,899 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 18:47:17,900 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:47:17,901 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:47:17,901 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,901 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 18:47:17,901 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:47:17,946 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:47:17,946 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 18:47:17,946 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 18:47:17,946 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:47:17,949 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:47:17,949 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,949 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,950 [test_set_gripper_id.py-->line:62]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,950 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,950 [test_set_gripper_id.py-->line:62]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,950 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,951 [test_set_gripper_id.py-->line:91]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,951 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,962 [test_set_gripper_id.py-->line:91]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,962 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:91]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,963 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
INFO 2025-03-13 18:47:17,978 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:47:17,978 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
INFO 2025-03-13 18:47:18,024 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 18:48:37,358 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:48:37,358 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,358 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 18:48:37,358 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:48:37,401 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:48:37,401 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 18:48:37,401 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 18:48:37,402 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:48:37,403 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:48:37,403 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,404 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 18:48:37,404 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:48:37,448 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:48:37,448 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 18:48:37,448 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 18:48:37,449 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:48:37,450 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:48:37,451 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,451 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 18:48:37,451 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 18:48:37,495 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 18:48:37,495 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 18:48:37,495 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 18:48:37,497 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 18:48:37,498 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 18:48:37,498 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,498 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,498 [test_set_gripper_id.py-->line:65]:test_parameters:10
DEBUG 2025-03-13 18:48:37,542 [test_set_gripper_id.py-->line:71]:请求类型断言成功
ERROR 2025-03-13 18:48:37,542 [test_set_gripper_id.py-->line:79]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 77, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 18:48:37,543 [test_set_gripper_id.py-->line:80]:期望数据：1
DEBUG 2025-03-13 18:48:37,544 [test_set_gripper_id.py-->line:81]:实际结果：14
INFO 2025-03-13 18:48:37,544 [test_set_gripper_id.py-->line:86]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 18:48:37,545 [test_set_gripper_id.py-->line:62]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,545 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,545 [test_set_gripper_id.py-->line:65]:test_parameters:None
DEBUG 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:71]:请求类型断言成功
ERROR 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:79]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 77, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:80]:期望数据：10
DEBUG 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:81]:实际结果：14
INFO 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:86]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 18:48:37,590 [test_set_gripper_id.py-->line:62]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,591 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,591 [test_set_gripper_id.py-->line:65]:test_parameters:256
DEBUG 2025-03-13 18:48:37,636 [test_set_gripper_id.py-->line:71]:请求类型断言成功
ERROR 2025-03-13 18:48:37,636 [test_set_gripper_id.py-->line:79]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 77, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 18:48:37,637 [test_set_gripper_id.py-->line:80]:期望数据：None
DEBUG 2025-03-13 18:48:37,637 [test_set_gripper_id.py-->line:81]:实际结果：14
INFO 2025-03-13 18:48:37,637 [test_set_gripper_id.py-->line:86]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 18:48:37,638 [test_set_gripper_id.py-->line:91]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,638 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,638 [test_set_gripper_id.py-->line:94]:test_parameters:10
DEBUG 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:102]:请求类型断言失败，实际类型为<class 'int'>
INFO 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:113]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:115]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:91]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,682 [test_set_gripper_id.py-->line:94]:test_parameters:None
INFO 2025-03-13 18:48:37,684 [test_set_gripper_id.py-->line:91]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,684 [test_set_gripper_id.py-->line:93]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,684 [test_set_gripper_id.py-->line:94]:test_parameters:256
DEBUG 2025-03-13 18:48:37,729 [test_set_gripper_id.py-->line:102]:请求类型断言失败，实际类型为<class 'int'>
ERROR 2025-03-13 18:48:37,729 [test_set_gripper_id.py-->line:108]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 106, in test_gripper_id_out_limit
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 0
DEBUG 2025-03-13 18:48:37,730 [test_set_gripper_id.py-->line:109]:期望数据：None
DEBUG 2025-03-13 18:48:37,730 [test_set_gripper_id.py-->line:110]:实际结果：0
INFO 2025-03-13 18:48:37,730 [test_set_gripper_id.py-->line:115]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 18:48:37,731 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,731 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,731 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-13 18:48:37,732 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,732 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,732 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 18:48:37,732 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 18:48:37,732 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 18:48:37,744 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-13 19:00:27,523 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:00:27,523 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,523 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 19:00:27,523 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:00:27,565 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:00:27,565 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 19:00:27,565 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 19:00:27,566 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:00:27,568 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:00:27,568 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,568 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 19:00:27,568 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:00:27,612 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:00:27,612 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 19:00:27,612 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:00:27,613 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:00:27,614 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:00:27,614 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,615 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 19:00:27,615 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:00:27,659 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:00:27,659 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 19:00:27,659 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 19:00:27,659 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:00:27,662 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:00:27,662 [test_set_gripper_id.py-->line:60]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,662 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,662 [test_set_gripper_id.py-->line:63]:test_parameters:10
DEBUG 2025-03-13 19:00:27,706 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:00:27,706 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:00:27,708 [test_set_gripper_id.py-->line:78]:期望数据：1
DEBUG 2025-03-13 19:00:27,708 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:00:27,708 [test_set_gripper_id.py-->line:84]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:00:27,709 [test_set_gripper_id.py-->line:60]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,709 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,709 [test_set_gripper_id.py-->line:63]:test_parameters:None
DEBUG 2025-03-13 19:00:27,752 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:00:27,752 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:00:27,752 [test_set_gripper_id.py-->line:78]:期望数据：10
DEBUG 2025-03-13 19:00:27,752 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:00:27,752 [test_set_gripper_id.py-->line:84]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:00:27,754 [test_set_gripper_id.py-->line:60]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,754 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,754 [test_set_gripper_id.py-->line:63]:test_parameters:256
DEBUG 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:78]:期望数据：None
DEBUG 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:84]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:88]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,799 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,800 [test_set_gripper_id.py-->line:91]:test_parameters:10
INFO 2025-03-13 19:00:27,846 [test_set_gripper_id.py-->line:100]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:00:27,846 [test_set_gripper_id.py-->line:88]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,846 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,846 [test_set_gripper_id.py-->line:91]:test_parameters:None
INFO 2025-03-13 19:00:27,846 [test_set_gripper_id.py-->line:100]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:00:27,848 [test_set_gripper_id.py-->line:88]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,848 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,848 [test_set_gripper_id.py-->line:91]:test_parameters:256
INFO 2025-03-13 19:00:27,893 [test_set_gripper_id.py-->line:100]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:00:27,893 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,893 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,893 [test_set_gripper_id.py-->line:35]:test_parameters:10
INFO 2025-03-13 19:00:27,895 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,895 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,895 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:00:27,896 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:00:27,896 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:00:27,896 [test_set_gripper_id.py-->line:35]:test_parameters:256
INFO 2025-03-13 19:03:14,277 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:14,277 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 19:03:14,277 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 19:03:14,277 [test_get_firmware_version.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:03:19,338 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:19,339 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:19,340 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:19,340 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 19:03:19,340 [test_get_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:03:24,388 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:24,390 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:24,390 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 19:03:24,390 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 19:03:24,390 [test_get_modified_version.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:03:29,444 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:29,446 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:29,447 [test_set_gripper_id.py-->line:55]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:29,447 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:29,447 [test_set_gripper_id.py-->line:58]:test_parameters:10
INFO 2025-03-13 19:03:34,502 [test_set_gripper_id.py-->line:55]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:03:34,502 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:34,502 [test_set_gripper_id.py-->line:58]:test_parameters:None
INFO 2025-03-13 19:03:39,553 [test_set_gripper_id.py-->line:55]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:03:39,553 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:39,553 [test_set_gripper_id.py-->line:58]:test_parameters:256
INFO 2025-03-13 19:03:44,599 [test_set_gripper_id.py-->line:83]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:44,601 [test_set_gripper_id.py-->line:85]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:44,601 [test_set_gripper_id.py-->line:86]:test_parameters:10
INFO 2025-03-13 19:03:49,654 [test_set_gripper_id.py-->line:95]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:03:58,652 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:58,652 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,652 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 19:03:58,652 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:03:58,697 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:03:58,697 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 19:03:58,697 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 19:03:58,698 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:58,700 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:58,700 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,700 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 19:03:58,700 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:03:58,744 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:03:58,744 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 19:03:58,744 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:03:58,745 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:58,747 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:58,748 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,748 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 19:03:58,748 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:03:58,790 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:03:58,790 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 19:03:58,790 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 19:03:58,791 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:03:58,792 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:03:58,794 [test_set_gripper_id.py-->line:55]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,794 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,794 [test_set_gripper_id.py-->line:58]:test_parameters:10
DEBUG 2025-03-13 19:03:58,837 [test_set_gripper_id.py-->line:64]:请求类型断言成功
ERROR 2025-03-13 19:03:58,838 [test_set_gripper_id.py-->line:72]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 70, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:03:58,839 [test_set_gripper_id.py-->line:73]:期望数据：1
DEBUG 2025-03-13 19:03:58,839 [test_set_gripper_id.py-->line:74]:实际结果：14
INFO 2025-03-13 19:03:58,839 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:03:58,840 [test_set_gripper_id.py-->line:55]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,840 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,840 [test_set_gripper_id.py-->line:58]:test_parameters:None
DEBUG 2025-03-13 19:03:58,885 [test_set_gripper_id.py-->line:64]:请求类型断言成功
ERROR 2025-03-13 19:03:58,885 [test_set_gripper_id.py-->line:72]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 70, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:03:58,886 [test_set_gripper_id.py-->line:73]:期望数据：10
DEBUG 2025-03-13 19:03:58,886 [test_set_gripper_id.py-->line:74]:实际结果：14
INFO 2025-03-13 19:03:58,886 [test_set_gripper_id.py-->line:79]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:03:58,887 [test_set_gripper_id.py-->line:55]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,887 [test_set_gripper_id.py-->line:57]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,887 [test_set_gripper_id.py-->line:58]:test_parameters:256
DEBUG 2025-03-13 19:03:58,931 [test_set_gripper_id.py-->line:64]:请求类型断言成功
ERROR 2025-03-13 19:03:58,931 [test_set_gripper_id.py-->line:72]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 70, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:73]:期望数据：None
DEBUG 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:74]:实际结果：14
INFO 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:79]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:83]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:85]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,932 [test_set_gripper_id.py-->line:86]:test_parameters:10
INFO 2025-03-13 19:03:58,978 [test_set_gripper_id.py-->line:95]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:03:58,979 [test_set_gripper_id.py-->line:83]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,979 [test_set_gripper_id.py-->line:85]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,979 [test_set_gripper_id.py-->line:86]:test_parameters:None
INFO 2025-03-13 19:03:58,979 [test_set_gripper_id.py-->line:95]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:03:58,980 [test_set_gripper_id.py-->line:83]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:03:58,980 [test_set_gripper_id.py-->line:85]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:58,980 [test_set_gripper_id.py-->line:86]:test_parameters:256
INFO 2025-03-13 19:03:59,025 [test_set_gripper_id.py-->line:95]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:03:59,025 [test_set_gripper_id.py-->line:27]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:03:59,025 [test_set_gripper_id.py-->line:29]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:59,025 [test_set_gripper_id.py-->line:30]:test_parameters:10
INFO 2025-03-13 19:03:59,026 [test_set_gripper_id.py-->line:27]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:03:59,027 [test_set_gripper_id.py-->line:29]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:59,027 [test_set_gripper_id.py-->line:30]:test_parameters:None
INFO 2025-03-13 19:03:59,027 [test_set_gripper_id.py-->line:27]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:03:59,028 [test_set_gripper_id.py-->line:29]:test_api:set_gripper_id
DEBUG 2025-03-13 19:03:59,028 [test_set_gripper_id.py-->line:30]:test_parameters:256
INFO 2025-03-13 19:06:45,937 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:06:45,938 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-13 19:06:45,938 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-13 19:06:45,938 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:06:45,981 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:06:45,981 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-13 19:06:45,981 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-13 19:06:45,981 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:06:45,983 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:06:45,984 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:06:45,984 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-13 19:06:45,984 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:06:46,028 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:06:46,028 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-13 19:06:46,028 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:06:46,028 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:06:46,030 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:06:46,030 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,030 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-13 19:06:46,030 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-13 19:06:46,075 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:06:46,075 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-13 19:06:46,075 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-13 19:06:46,077 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:06:46,078 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:06:46,078 [test_set_gripper_id.py-->line:60]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,078 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,078 [test_set_gripper_id.py-->line:63]:test_parameters:10
DEBUG 2025-03-13 19:06:46,122 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:06:46,122 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:06:46,124 [test_set_gripper_id.py-->line:78]:期望数据：1
DEBUG 2025-03-13 19:06:46,124 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:06:46,124 [test_set_gripper_id.py-->line:84]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:06:46,125 [test_set_gripper_id.py-->line:60]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,125 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,125 [test_set_gripper_id.py-->line:63]:test_parameters:None
DEBUG 2025-03-13 19:06:46,169 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:06:46,169 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:06:46,169 [test_set_gripper_id.py-->line:78]:期望数据：10
DEBUG 2025-03-13 19:06:46,170 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:06:46,170 [test_set_gripper_id.py-->line:84]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:06:46,170 [test_set_gripper_id.py-->line:60]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,170 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,170 [test_set_gripper_id.py-->line:63]:test_parameters:256
DEBUG 2025-03-13 19:06:46,216 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:06:46,216 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:06:46,216 [test_set_gripper_id.py-->line:78]:期望数据：None
DEBUG 2025-03-13 19:06:46,217 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:06:46,217 [test_set_gripper_id.py-->line:84]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:06:46,217 [test_set_gripper_id.py-->line:88]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,217 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,217 [test_set_gripper_id.py-->line:91]:test_parameters:10
INFO 2025-03-13 19:06:46,263 [test_set_gripper_id.py-->line:100]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:06:46,263 [test_set_gripper_id.py-->line:88]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,263 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,263 [test_set_gripper_id.py-->line:91]:test_parameters:None
INFO 2025-03-13 19:06:46,263 [test_set_gripper_id.py-->line:100]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:06:46,264 [test_set_gripper_id.py-->line:88]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,264 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,264 [test_set_gripper_id.py-->line:91]:test_parameters:256
INFO 2025-03-13 19:06:46,310 [test_set_gripper_id.py-->line:100]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:06:46,310 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,310 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,310 [test_set_gripper_id.py-->line:35]:test_parameters:10
INFO 2025-03-13 19:06:46,311 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,311 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,311 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:06:46,312 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:06:46,312 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:06:46,312 [test_set_gripper_id.py-->line:35]:test_parameters:256
INFO 2025-03-13 19:08:11,104 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:08:11,107 [test_set_gripper_id.py-->line:60]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,107 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,107 [test_set_gripper_id.py-->line:63]:test_parameters:10
DEBUG 2025-03-13 19:08:11,163 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:08:11,166 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:78]:期望数据：1
DEBUG 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:84]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:60]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,180 [test_set_gripper_id.py-->line:63]:test_parameters:None
DEBUG 2025-03-13 19:08:11,225 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:08:11,225 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:08:11,225 [test_set_gripper_id.py-->line:78]:期望数据：10
DEBUG 2025-03-13 19:08:11,225 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:08:11,225 [test_set_gripper_id.py-->line:84]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:08:11,226 [test_set_gripper_id.py-->line:60]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,226 [test_set_gripper_id.py-->line:62]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,226 [test_set_gripper_id.py-->line:63]:test_parameters:256
DEBUG 2025-03-13 19:08:11,272 [test_set_gripper_id.py-->line:69]:请求类型断言成功
ERROR 2025-03-13 19:08:11,272 [test_set_gripper_id.py-->line:77]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 75, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:08:11,272 [test_set_gripper_id.py-->line:78]:期望数据：None
DEBUG 2025-03-13 19:08:11,272 [test_set_gripper_id.py-->line:79]:实际结果：14
INFO 2025-03-13 19:08:11,272 [test_set_gripper_id.py-->line:84]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:08:11,274 [test_set_gripper_id.py-->line:88]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,274 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,274 [test_set_gripper_id.py-->line:91]:test_parameters:10
INFO 2025-03-13 19:08:11,320 [test_set_gripper_id.py-->line:100]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:08:11,320 [test_set_gripper_id.py-->line:88]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,320 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,320 [test_set_gripper_id.py-->line:91]:test_parameters:None
INFO 2025-03-13 19:08:11,320 [test_set_gripper_id.py-->line:100]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:08:11,322 [test_set_gripper_id.py-->line:88]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,322 [test_set_gripper_id.py-->line:90]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,322 [test_set_gripper_id.py-->line:91]:test_parameters:256
INFO 2025-03-13 19:08:11,366 [test_set_gripper_id.py-->line:100]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:08:11,366 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,367 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,367 [test_set_gripper_id.py-->line:35]:test_parameters:10
INFO 2025-03-13 19:08:11,367 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,367 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,367 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:08:11,368 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:08:11,368 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:08:11,368 [test_set_gripper_id.py-->line:35]:test_parameters:256
INFO 2025-03-13 19:09:50,155 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:09:50,156 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:09:50,157 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:09:50,157 [test_set_gripper_id.py-->line:35]:test_parameters:10
DEBUG 2025-03-13 19:09:50,204 [test_set_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:09:50,204 [test_set_gripper_id.py-->line:54]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:09:50,204 [test_set_gripper_id.py-->line:56]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:09:50,205 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:09:50,205 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:09:50,205 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:09:50,208 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:09:50,208 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:09:50,208 [test_set_gripper_id.py-->line:35]:test_parameters:256
DEBUG 2025-03-13 19:09:50,251 [test_set_gripper_id.py-->line:41]:请求类型断言成功
ERROR 2025-03-13 19:09:50,251 [test_set_gripper_id.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 47, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 0
DEBUG 2025-03-13 19:09:50,251 [test_set_gripper_id.py-->line:50]:期望数据：None
DEBUG 2025-03-13 19:09:50,251 [test_set_gripper_id.py-->line:51]:实际结果：0
INFO 2025-03-13 19:09:50,251 [test_set_gripper_id.py-->line:56]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:12:11,098 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:12:11,099 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:12:11,099 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:11,099 [test_set_gripper_id.py-->line:35]:test_parameters:10
INFO 2025-03-13 19:12:16,153 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:12:16,153 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:16,153 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:12:16,154 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:12:16,154 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:16,154 [test_set_gripper_id.py-->line:35]:test_parameters:256
DEBUG 2025-03-13 19:12:16,196 [test_set_gripper_id.py-->line:41]:请求类型断言成功
ERROR 2025-03-13 19:12:16,196 [test_set_gripper_id.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 47, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 0
DEBUG 2025-03-13 19:12:16,197 [test_set_gripper_id.py-->line:50]:期望数据：None
DEBUG 2025-03-13 19:12:16,197 [test_set_gripper_id.py-->line:51]:实际结果：0
INFO 2025-03-13 19:12:16,197 [test_set_gripper_id.py-->line:56]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:12:36,049 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:12:36,050 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:12:36,050 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:36,050 [test_set_gripper_id.py-->line:35]:test_parameters:10
DEBUG 2025-03-13 19:12:36,090 [test_set_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:12:36,090 [test_set_gripper_id.py-->line:54]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:12:36,090 [test_set_gripper_id.py-->line:56]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:12:36,091 [test_set_gripper_id.py-->line:32]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:12:36,091 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:36,091 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:12:36,094 [test_set_gripper_id.py-->line:32]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:12:36,094 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:12:36,094 [test_set_gripper_id.py-->line:35]:test_parameters:256
DEBUG 2025-03-13 19:12:36,138 [test_set_gripper_id.py-->line:41]:请求类型断言成功
ERROR 2025-03-13 19:12:36,138 [test_set_gripper_id.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 47, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 0
DEBUG 2025-03-13 19:12:36,138 [test_set_gripper_id.py-->line:50]:期望数据：None
DEBUG 2025-03-13 19:12:36,138 [test_set_gripper_id.py-->line:51]:实际结果：0
INFO 2025-03-13 19:12:36,138 [test_set_gripper_id.py-->line:56]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:13:49,795 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-13 19:13:49,797 [test_set_gripper_id.py-->line:32]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:13:49,797 [test_set_gripper_id.py-->line:34]:test_api:set_gripper_id
DEBUG 2025-03-13 19:13:49,797 [test_set_gripper_id.py-->line:35]:test_parameters:10
DEBUG 2025-03-13 19:13:49,852 [test_set_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-13 19:13:49,852 [test_set_gripper_id.py-->line:54]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:13:49,852 [test_set_gripper_id.py-->line:56]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:13:49,853 [test_set_gripper_id.py-->line:32]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:13:49,853 [test_set_gripper_id.py-->line:34]:test_api:None
DEBUG 2025-03-13 19:13:49,853 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:13:49,856 [test_set_gripper_id.py-->line:32]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:13:49,856 [test_set_gripper_id.py-->line:34]:test_api:None
DEBUG 2025-03-13 19:13:49,856 [test_set_gripper_id.py-->line:35]:test_parameters:None
INFO 2025-03-13 19:13:49,898 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-13 19:20:39,315 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:20:39,317 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:20:39,317 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:20:39,317 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:20:39,357 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-13 19:20:39,357 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:20:39,357 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:20:39,358 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:20:39,358 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:20:39,358 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:20:39,361 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:20:39,361 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:20:39,361 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:20:39,404 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:24:10,059 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:24:10,061 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:24:10,061 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:24:10,061 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:24:10,109 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-13 19:24:10,109 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:24:10,109 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:24:10,109 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:24:10,109 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:24:10,110 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:24:10,113 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:24:10,113 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:24:10,114 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:24:10,155 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:24:46,786 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:24:46,787 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:24:46,787 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:24:46,787 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:24:46,832 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-13 19:24:46,832 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:24:46,833 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:24:46,833 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:24:46,833 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:24:46,833 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:24:46,836 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:24:46,836 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:24:46,836 [test_set_gripper_id.py-->line:36]:test_parameters:256
DEBUG 2025-03-13 19:24:46,878 [test_set_gripper_id.py-->line:42]:请求类型断言成功
ERROR 2025-03-13 19:24:46,878 [test_set_gripper_id.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 0
DEBUG 2025-03-13 19:24:46,879 [test_set_gripper_id.py-->line:51]:期望数据：None
DEBUG 2025-03-13 19:24:46,879 [test_set_gripper_id.py-->line:52]:实际结果：0
INFO 2025-03-13 19:24:46,879 [test_set_gripper_id.py-->line:57]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:26:03,928 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:26:03,931 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:26:03,931 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:03,931 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-13 19:26:03,975 [test_set_gripper_id.py-->line:70]:请求类型断言成功
INFO 2025-03-13 19:26:03,975 [test_set_gripper_id.py-->line:83]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:26:03,975 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:26:03,976 [test_set_gripper_id.py-->line:61]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:26:03,976 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:03,976 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-13 19:26:04,022 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:26:04,023 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:26:04,024 [test_set_gripper_id.py-->line:79]:期望数据：10
DEBUG 2025-03-13 19:26:04,024 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:26:04,024 [test_set_gripper_id.py-->line:85]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:26:04,025 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,025 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,025 [test_set_gripper_id.py-->line:64]:test_parameters:256
DEBUG 2025-03-13 19:26:04,068 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:26:04,068 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 14
DEBUG 2025-03-13 19:26:04,070 [test_set_gripper_id.py-->line:79]:期望数据：0
DEBUG 2025-03-13 19:26:04,070 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:26:04,070 [test_set_gripper_id.py-->line:85]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:26:04,071 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,071 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,071 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-13 19:26:04,115 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:26:04,115 [test_set_gripper_id.py-->line:89]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,115 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,115 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-13 19:26:04,115 [test_set_gripper_id.py-->line:101]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:26:04,116 [test_set_gripper_id.py-->line:89]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,116 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,116 [test_set_gripper_id.py-->line:92]:test_parameters:256
INFO 2025-03-13 19:26:04,162 [test_set_gripper_id.py-->line:101]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:26:04,162 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,162 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,162 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-13 19:26:04,163 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,163 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,163 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:26:04,164 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:26:04,164 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:26:04,164 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-13 19:28:08,298 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:28:08,299 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,299 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,299 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-13 19:28:08,353 [test_set_gripper_id.py-->line:70]:请求类型断言成功
INFO 2025-03-13 19:28:08,353 [test_set_gripper_id.py-->line:83]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:28:08,353 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:28:08,355 [test_set_gripper_id.py-->line:61]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,355 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,355 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-13 19:28:08,400 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:28:08,401 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:28:08,403 [test_set_gripper_id.py-->line:79]:期望数据：10
DEBUG 2025-03-13 19:28:08,403 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:28:08,403 [test_set_gripper_id.py-->line:85]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:28:08,404 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,404 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,404 [test_set_gripper_id.py-->line:64]:test_parameters:256
DEBUG 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 14
DEBUG 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:79]:期望数据：0
DEBUG 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:85]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,447 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-13 19:28:08,492 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:28:08,492 [test_set_gripper_id.py-->line:89]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,493 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,493 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-13 19:28:08,493 [test_set_gripper_id.py-->line:101]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:28:08,495 [test_set_gripper_id.py-->line:89]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,495 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,495 [test_set_gripper_id.py-->line:92]:test_parameters:256
INFO 2025-03-13 19:28:08,537 [test_set_gripper_id.py-->line:101]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,538 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:28:08,539 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:28:08,539 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:28:08,539 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-13 19:29:59,547 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:29:59,549 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:29:59,549 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:29:59,549 [test_set_gripper_id1.py-->line:36]:test_parameters:10
INFO 2025-03-13 19:30:13,873 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:30:13,875 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:30:13,875 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:30:13,875 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:30:13,924 [test_set_gripper_id1.py-->line:42]:请求类型断言成功
ERROR 2025-03-13 19:30:13,925 [test_set_gripper_id1.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id1.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-13 19:30:13,926 [test_set_gripper_id1.py-->line:51]:期望数据：14
DEBUG 2025-03-13 19:30:13,927 [test_set_gripper_id1.py-->line:52]:实际结果：1
INFO 2025-03-13 19:30:13,927 [test_set_gripper_id1.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:30:13,928 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:30:13,928 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:30:13,928 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:30:13,929 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:30:13,929 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:30:13,929 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:30:13,985 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:34:00,983 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:34:00,985 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:34:00,985 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:34:00,985 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:34:01,038 [test_set_gripper_id1.py-->line:42]:请求类型断言成功
ERROR 2025-03-13 19:34:01,039 [test_set_gripper_id1.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id1.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-13 19:34:01,040 [test_set_gripper_id1.py-->line:51]:期望数据：14
DEBUG 2025-03-13 19:34:01,040 [test_set_gripper_id1.py-->line:52]:实际结果：1
INFO 2025-03-13 19:34:01,040 [test_set_gripper_id1.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:34:01,041 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:34:01,041 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:34:01,041 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:34:01,042 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:34:01,042 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:34:01,042 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:34:01,101 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:34:22,299 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:34:22,300 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:34:22,300 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:34:22,300 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:34:22,349 [test_set_gripper_id1.py-->line:42]:请求类型断言成功
ERROR 2025-03-13 19:34:22,351 [test_set_gripper_id1.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id1.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:51]:期望数据：14
DEBUG 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:52]:实际结果：1
INFO 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:34:22,353 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:34:22,354 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:34:22,354 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:34:22,354 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:34:22,410 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:36:54,007 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:36:54,009 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:36:54,009 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:36:54,009 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:36:54,056 [test_set_gripper_id1.py-->line:42]:请求类型断言成功
ERROR 2025-03-13 19:36:54,057 [test_set_gripper_id1.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id1.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-13 19:36:54,059 [test_set_gripper_id1.py-->line:51]:期望数据：14
DEBUG 2025-03-13 19:36:54,059 [test_set_gripper_id1.py-->line:52]:实际结果：1
INFO 2025-03-13 19:36:54,059 [test_set_gripper_id1.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:36:54,060 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:36:54,060 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:36:54,060 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:36:54,061 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:36:54,061 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:36:54,061 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:36:54,119 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:38:09,340 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:38:09,342 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:38:09,343 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:38:09,343 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:38:09,435 [test_set_gripper_id1.py-->line:43]:请求类型断言成功
ERROR 2025-03-13 19:38:09,437 [test_set_gripper_id1.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id1.py", line 49, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-13 19:38:09,437 [test_set_gripper_id1.py-->line:52]:期望数据：14
DEBUG 2025-03-13 19:38:09,437 [test_set_gripper_id1.py-->line:53]:实际结果：1
INFO 2025-03-13 19:38:09,437 [test_set_gripper_id1.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:38:09,438 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:38:09,438 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:38:09,438 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:38:09,484 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:38:09,485 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:38:09,485 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:38:09,559 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:38:56,087 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:38:56,089 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:38:56,089 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:38:56,089 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:38:56,207 [test_set_gripper_id1.py-->line:43]:请求类型断言成功
INFO 2025-03-13 19:38:56,207 [test_set_gripper_id1.py-->line:56]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:38:56,207 [test_set_gripper_id1.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:38:56,208 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:38:56,208 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:38:56,208 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:38:56,273 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:38:56,274 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:38:56,274 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:38:56,349 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:39:35,197 [test_set_gripper_id1.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:39:35,199 [test_set_gripper_id1.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:39:35,199 [test_set_gripper_id1.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:39:35,199 [test_set_gripper_id1.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:39:35,255 [test_set_gripper_id1.py-->line:42]:请求类型断言成功
INFO 2025-03-13 19:39:35,255 [test_set_gripper_id1.py-->line:55]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:39:35,255 [test_set_gripper_id1.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:39:35,256 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:35,256 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:39:35,256 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:39:35,260 [test_set_gripper_id1.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:35,260 [test_set_gripper_id1.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:39:35,260 [test_set_gripper_id1.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:39:35,301 [test_set_gripper_id1.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:39:52,598 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:39:52,599 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,599 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:39:52,599 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-13 19:39:52,643 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:39:52,644 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:39:52,645 [test_set_gripper_id.py-->line:79]:期望数据：1
DEBUG 2025-03-13 19:39:52,645 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:39:52,645 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:39:52,647 [test_set_gripper_id.py-->line:61]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,647 [test_set_gripper_id.py-->line:63]:test_api:None
DEBUG 2025-03-13 19:39:52,647 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-13 19:39:52,690 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:39:52,690 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:39:52,690 [test_set_gripper_id.py-->line:79]:期望数据：None
DEBUG 2025-03-13 19:39:52,690 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:39:52,690 [test_set_gripper_id.py-->line:85]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-13 19:39:52,691 [test_set_gripper_id.py-->line:61]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,691 [test_set_gripper_id.py-->line:63]:test_api:None
DEBUG 2025-03-13 19:39:52,691 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-13 19:39:52,736 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:39:52,736 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != 14
DEBUG 2025-03-13 19:39:52,737 [test_set_gripper_id.py-->line:79]:期望数据：None
DEBUG 2025-03-13 19:39:52,737 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:39:52,738 [test_set_gripper_id.py-->line:85]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-13 19:39:52,739 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,739 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:39:52,739 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-13 19:39:52,783 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:39:52,784 [test_set_gripper_id.py-->line:89]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,784 [test_set_gripper_id.py-->line:91]:test_api:None
DEBUG 2025-03-13 19:39:52,784 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-13 19:39:52,785 [test_set_gripper_id.py-->line:101]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-13 19:39:52,786 [test_set_gripper_id.py-->line:89]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,786 [test_set_gripper_id.py-->line:91]:test_api:None
DEBUG 2025-03-13 19:39:52,786 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-13 19:39:52,787 [test_set_gripper_id.py-->line:101]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-13 19:39:52,787 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,787 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:39:52,787 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:39:52,857 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:39:52,858 [test_set_gripper_id.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-13 19:39:52,858 [test_set_gripper_id.py-->line:35]:test_api:None
DEBUG 2025-03-13 19:39:52,858 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:39:52,908 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-13 19:42:44,379 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-13 19:42:44,382 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,383 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,383 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-13 19:42:44,426 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:42:44,427 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-13 19:42:44,429 [test_set_gripper_id.py-->line:79]:期望数据：1
DEBUG 2025-03-13 19:42:44,429 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:42:44,429 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:42:44,430 [test_set_gripper_id.py-->line:61]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,430 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,430 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-13 19:42:44,473 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-13 19:42:44,473 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-13 19:42:44,474 [test_set_gripper_id.py-->line:79]:期望数据：10
DEBUG 2025-03-13 19:42:44,474 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-13 19:42:44,474 [test_set_gripper_id.py-->line:85]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:42:44,475 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,475 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,475 [test_set_gripper_id.py-->line:64]:test_parameters:256
DEBUG 2025-03-13 19:42:44,521 [test_set_gripper_id.py-->line:70]:请求类型断言成功
INFO 2025-03-13 19:42:44,521 [test_set_gripper_id.py-->line:83]:请求结果断言成功，用例【ID设置超限值】测试成功
INFO 2025-03-13 19:42:44,521 [test_set_gripper_id.py-->line:85]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:42:44,522 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,522 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,522 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-13 19:42:44,566 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-13 19:42:44,567 [test_set_gripper_id.py-->line:89]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,567 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,567 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-13 19:42:44,567 [test_set_gripper_id.py-->line:101]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-13 19:42:44,570 [test_set_gripper_id.py-->line:89]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,570 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,570 [test_set_gripper_id.py-->line:92]:test_parameters:256
INFO 2025-03-13 19:42:44,612 [test_set_gripper_id.py-->line:101]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-13 19:42:44,613 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,613 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,613 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-13 19:42:44,614 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,614 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,614 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-13 19:42:44,615 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-13 19:42:44,615 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-13 19:42:44,615 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 09:54:48,256 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:54:48,303 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,303 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 09:54:48,303 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:54:48,356 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:54:48,356 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 09:54:48,356 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 09:54:48,357 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:54:48,360 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:54:48,361 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,361 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 09:54:48,361 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:54:48,403 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:54:48,403 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 09:54:48,403 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:54:48,404 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:54:48,407 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:54:48,407 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,407 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 09:54:48,407 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:54:48,450 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:54:48,450 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 09:54:48,450 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 09:54:48,451 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:54:48,456 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 09:54:48,456 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,456 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,456 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-14 09:54:48,497 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-14 09:54:48,497 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-14 09:54:48,621 [test_set_gripper_id.py-->line:79]:期望数据：1
DEBUG 2025-03-14 09:54:48,621 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-14 09:54:48,621 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:54:48,623 [test_set_gripper_id.py-->line:61]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,624 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,624 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-14 09:54:48,668 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-14 09:54:48,668 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-14 09:54:48,668 [test_set_gripper_id.py-->line:79]:期望数据：10
DEBUG 2025-03-14 09:54:48,668 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-14 09:54:48,668 [test_set_gripper_id.py-->line:85]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-14 09:54:48,669 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,669 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,669 [test_set_gripper_id.py-->line:64]:test_parameters:256
DEBUG 2025-03-14 09:54:48,715 [test_set_gripper_id.py-->line:70]:请求类型断言成功
INFO 2025-03-14 09:54:48,715 [test_set_gripper_id.py-->line:83]:请求结果断言成功，用例【ID设置超限值】测试成功
INFO 2025-03-14 09:54:48,715 [test_set_gripper_id.py-->line:85]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 09:54:48,715 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,715 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,716 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-14 09:54:48,761 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:54:48,761 [test_set_gripper_id.py-->line:89]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,761 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,761 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-14 09:54:48,761 [test_set_gripper_id.py-->line:101]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-14 09:54:48,861 [test_set_gripper_id.py-->line:89]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,861 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,861 [test_set_gripper_id.py-->line:92]:test_parameters:256
INFO 2025-03-14 09:54:48,916 [test_set_gripper_id.py-->line:101]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 09:54:48,916 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,916 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,916 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:54:48,917 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 09:57:03,728 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:57:03,728 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,728 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 09:57:03,728 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:57:03,779 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:57:03,779 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 09:57:03,779 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 09:57:03,780 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:57:03,782 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:57:03,782 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,782 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 09:57:03,782 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:57:03,826 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:57:03,827 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 09:57:03,827 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:57:03,828 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:57:03,830 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 09:57:03,830 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,830 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 09:57:03,830 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 09:57:03,873 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 09:57:03,873 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 09:57:03,873 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 09:57:03,874 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 09:57:03,876 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 09:57:03,876 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,876 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:03,876 [test_set_gripper_id.py-->line:64]:test_parameters:10
DEBUG 2025-03-14 09:57:03,919 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-14 09:57:03,919 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 14
DEBUG 2025-03-14 09:57:03,921 [test_set_gripper_id.py-->line:79]:期望数据：1
DEBUG 2025-03-14 09:57:03,921 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-14 09:57:03,921 [test_set_gripper_id.py-->line:85]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:57:03,922 [test_set_gripper_id.py-->line:61]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,922 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:03,922 [test_set_gripper_id.py-->line:64]:test_parameters:None
DEBUG 2025-03-14 09:57:03,967 [test_set_gripper_id.py-->line:70]:请求类型断言成功
ERROR 2025-03-14 09:57:03,967 [test_set_gripper_id.py-->line:78]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 76, in test_check_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 10 != 14
DEBUG 2025-03-14 09:57:03,967 [test_set_gripper_id.py-->line:79]:期望数据：10
DEBUG 2025-03-14 09:57:03,967 [test_set_gripper_id.py-->line:80]:实际结果：14
INFO 2025-03-14 09:57:03,967 [test_set_gripper_id.py-->line:85]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-14 09:57:03,968 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:57:03,968 [test_set_gripper_id.py-->line:63]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:03,968 [test_set_gripper_id.py-->line:64]:test_parameters:256
DEBUG 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:70]:请求类型断言成功
INFO 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:83]:请求结果断言成功，用例【ID设置超限值】测试成功
INFO 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:85]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:89]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,013 [test_set_gripper_id.py-->line:92]:test_parameters:10
INFO 2025-03-14 09:57:04,059 [test_set_gripper_id.py-->line:101]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 09:57:04,059 [test_set_gripper_id.py-->line:89]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,059 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,059 [test_set_gripper_id.py-->line:92]:test_parameters:None
INFO 2025-03-14 09:57:04,059 [test_set_gripper_id.py-->line:101]:》》》》》用例【读取ID是否设置成功】测试完成《《《《《
INFO 2025-03-14 09:57:04,060 [test_set_gripper_id.py-->line:89]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,060 [test_set_gripper_id.py-->line:91]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,060 [test_set_gripper_id.py-->line:92]:test_parameters:256
INFO 2025-03-14 09:57:04,107 [test_set_gripper_id.py-->line:101]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 09:57:04,107 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,107 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,107 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 09:57:04,109 [test_set_gripper_id.py-->line:33]:》》》》》用例【读取ID是否设置成功】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,109 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,109 [test_set_gripper_id.py-->line:36]:test_parameters:None
INFO 2025-03-14 09:57:04,110 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 09:57:04,110 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 09:57:04,110 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 10:09:51,908 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:09:51,910 [test_set_gripper_id.py-->line:63]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:09:51,910 [test_set_gripper_id.py-->line:65]:test_api:set_gripper_id
DEBUG 2025-03-14 10:09:51,910 [test_set_gripper_id.py-->line:66]:test_parameters:10
INFO 2025-03-14 10:09:56,966 [test_set_gripper_id.py-->line:75]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:09:57,006 [test_set_gripper_id.py-->line:63]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:09:57,006 [test_set_gripper_id.py-->line:65]:test_api:set_gripper_id
DEBUG 2025-03-14 10:09:57,006 [test_set_gripper_id.py-->line:66]:test_parameters:256
INFO 2025-03-14 10:09:57,060 [test_set_gripper_id.py-->line:75]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:09:57,060 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:09:57,060 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:09:57,061 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 10:09:57,063 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:09:57,063 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:09:57,063 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 10:14:54,729 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:14:54,730 [test_set_gripper_id.py-->line:63]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:14:54,730 [test_set_gripper_id.py-->line:65]:test_api:set_gripper_id
DEBUG 2025-03-14 10:14:54,730 [test_set_gripper_id.py-->line:66]:test_parameters:10
INFO 2025-03-14 10:14:59,788 [test_set_gripper_id.py-->line:75]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:14:59,792 [test_set_gripper_id.py-->line:63]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:14:59,792 [test_set_gripper_id.py-->line:65]:test_api:set_gripper_id
DEBUG 2025-03-14 10:14:59,792 [test_set_gripper_id.py-->line:66]:test_parameters:256
INFO 2025-03-14 10:14:59,834 [test_set_gripper_id.py-->line:75]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:14:59,835 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:14:59,836 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:14:59,836 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 10:14:59,836 [test_set_gripper_id.py-->line:33]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:14:59,837 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:14:59,837 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 10:25:05,146 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:25:05,149 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:25:05,149 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:25:05,149 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 10:25:05,193 [test_set_gripper_id.py-->line:80]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:25:05,243 [test_set_gripper_id.py-->line:68]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:25:05,244 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:25:05,244 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 10:25:05,295 [test_set_gripper_id.py-->line:80]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:25:05,297 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:25:05,297 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:25:05,298 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 10:25:05,300 [test_set_gripper_id.py-->line:36]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:25:05,300 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:25:05,300 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 10:27:59,038 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:27:59,040 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:27:59,040 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:27:59,040 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 10:27:59,089 [test_set_gripper_id.py-->line:80]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:27:59,140 [test_set_gripper_id.py-->line:68]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:27:59,140 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:27:59,140 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 10:27:59,184 [test_set_gripper_id.py-->line:80]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:27:59,186 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:27:59,186 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:27:59,186 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 10:27:59,187 [test_set_gripper_id.py-->line:36]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:27:59,187 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:27:59,187 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 10:30:27,016 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:30:27,017 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:30:27,017 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:30:27,017 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 10:30:27,063 [test_set_gripper_id.py-->line:80]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:30:27,112 [test_set_gripper_id.py-->line:68]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:30:27,113 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:30:27,113 [test_set_gripper_id.py-->line:71]:test_parameters:14
INFO 2025-03-14 10:30:27,160 [test_set_gripper_id.py-->line:80]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:30:27,204 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:30:27,204 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:30:27,204 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-14 10:30:27,297 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-14 10:30:27,297 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:30:27,297 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:30:27,343 [test_set_gripper_id.py-->line:36]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:30:27,344 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:30:27,344 [test_set_gripper_id.py-->line:39]:test_parameters:14
DEBUG 2025-03-14 10:30:27,438 [test_set_gripper_id.py-->line:45]:请求类型断言成功
ERROR 2025-03-14 10:30:27,438 [test_set_gripper_id.py-->line:54]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_id.py", line 51, in test_set_gripper_id
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 1
DEBUG 2025-03-14 10:30:27,451 [test_set_gripper_id.py-->line:55]:期望数据：14,14
DEBUG 2025-03-14 10:30:27,451 [test_set_gripper_id.py-->line:56]:实际结果：1,14
INFO 2025-03-14 10:30:27,451 [test_set_gripper_id.py-->line:61]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:30:27,548 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:33:08,864 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:33:08,865 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:33:08,866 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:33:08,866 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 10:33:08,907 [test_set_gripper_id.py-->line:80]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:33:08,956 [test_set_gripper_id.py-->line:68]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:33:08,956 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 10:33:08,956 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 10:33:09,008 [test_set_gripper_id.py-->line:80]:》》》》》用例【ID设置超限值】测试完成《《《《《
INFO 2025-03-14 10:33:09,009 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:33:09,009 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:33:09,009 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 10:33:09,012 [test_set_gripper_id.py-->line:36]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:33:09,012 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 10:33:09,012 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 10:34:24,202 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:34:24,203 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:34:24,203 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:34:24,203 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:34]:》》》》》用例【ID设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:34:24,322 [test_set_gripper_id.py-->line:37]:test_parameters:256
INFO 2025-03-14 10:35:00,760 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:35:00,765 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:35:00,765 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:35:00,765 [test_set_gripper_id.py-->line:37]:test_parameters:10
INFO 2025-03-14 10:35:05,834 [test_set_gripper_id.py-->line:34]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-14 10:35:05,834 [test_set_gripper_id.py-->line:36]:test_api:None
DEBUG 2025-03-14 10:35:05,834 [test_set_gripper_id.py-->line:37]:test_parameters:None
INFO 2025-03-14 10:35:05,876 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:35:30,449 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:35:30,451 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:35:30,451 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:35:30,451 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:34]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:36]:test_api:None
DEBUG 2025-03-14 10:35:30,552 [test_set_gripper_id.py-->line:37]:test_parameters:None
INFO 2025-03-14 10:35:30,598 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:36:12,008 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:36:12,008 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 10:36:12,008 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 10:36:12,008 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 10:36:12,050 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 10:36:12,050 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 10:36:12,050 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 10:36:12,051 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:36:12,053 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:36:12,054 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:36:12,054 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 10:36:12,054 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 10:36:12,097 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 10:36:12,097 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 10:36:12,097 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:36:12,098 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:36:12,099 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:36:12,099 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 10:36:12,100 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 10:36:12,100 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 10:36:12,145 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 10:36:12,145 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 10:36:12,145 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 10:36:12,146 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:36:12,147 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:36:12,147 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:36:12,148 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:36:12,148 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:34]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:36]:test_api:None
DEBUG 2025-03-14 10:36:12,239 [test_set_gripper_id.py-->line:37]:test_parameters:None
INFO 2025-03-14 10:36:12,287 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:36:47,348 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:36:47,350 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:36:47,350 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:36:47,350 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:36:47,446 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:36:47,446 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:36:47,446 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:36:47,494 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:19,372 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:19,374 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:19,374 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:19,374 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:37:19,466 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:37:19,466 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:19,466 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:19,512 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:21,815 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:21,817 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:21,817 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:21,817 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:37:21,918 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:37:21,918 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:21,918 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:21,966 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:23,507 [test_set_gripper_id.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:23,509 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:23,509 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:23,509 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-14 10:37:23,608 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-14 10:37:23,608 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:23,608 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:23,655 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:35,833 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:35,835 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:35,835 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:35,835 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-14 10:37:35,938 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-14 10:37:35,938 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:35,938 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:35,985 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:38,072 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:38,073 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:38,073 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:38,073 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-14 10:37:38,170 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-14 10:37:38,170 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:38,170 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:38,216 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:41,645 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:41,647 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:41,647 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:41,647 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-14 10:37:41,739 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-14 10:37:41,739 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:41,739 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:41,786 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:37:55,883 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:37:55,885 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:37:55,885 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:37:55,885 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-14 10:37:55,976 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-14 10:37:55,976 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 10:37:55,976 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:37:56,024 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 10:59:16,197 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 10:59:16,197 [test_set_gripper_id.py-->line:65]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:59:16,198 [test_set_gripper_id.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-14 10:59:16,198 [test_set_gripper_id.py-->line:68]:test_parameters:10
INFO 2025-03-14 10:59:16,241 [test_set_gripper_id.py-->line:76]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 10:59:16,241 [test_set_gripper_id.py-->line:65]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:59:16,241 [test_set_gripper_id.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-14 10:59:16,241 [test_set_gripper_id.py-->line:68]:test_parameters:256
INFO 2025-03-14 10:59:16,288 [test_set_gripper_id.py-->line:76]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 10:59:16,288 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 10:59:16,288 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:59:16,288 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 10:59:16,291 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 10:59:16,291 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 10:59:16,291 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 11:01:45,579 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:01:45,581 [test_set_gripper_id.py-->line:65]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:01:45,581 [test_set_gripper_id.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-14 11:01:45,581 [test_set_gripper_id.py-->line:68]:test_parameters:10
INFO 2025-03-14 11:01:45,630 [test_set_gripper_id.py-->line:78]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:01:45,631 [test_set_gripper_id.py-->line:65]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:01:45,631 [test_set_gripper_id.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-14 11:01:45,631 [test_set_gripper_id.py-->line:68]:test_parameters:256
INFO 2025-03-14 11:01:45,678 [test_set_gripper_id.py-->line:78]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:01:45,679 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:01:45,679 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 11:01:45,679 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-14 11:01:45,683 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:01:45,683 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-14 11:01:45,683 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-14 11:06:22,227 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:06:22,228 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,228 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 11:06:22,228 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:06:22,272 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:06:22,272 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 11:06:22,272 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 11:06:22,273 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:06:22,275 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:06:22,275 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,275 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 11:06:22,275 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:06:22,319 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:06:22,319 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 11:06:22,319 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:06:22,320 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:06:22,322 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:06:22,322 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,322 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 11:06:22,322 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:06:22,365 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:06:22,365 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 11:06:22,365 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 11:06:22,366 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:06:22,367 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:06:22,368 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,368 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:06:22,368 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 11:06:22,412 [test_set_gripper_id.py-->line:81]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:06:22,458 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,458 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:06:22,458 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 11:06:22,509 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:06:22,511 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,511 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:06:22,511 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:06:22,512 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:06:22,512 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:06:22,512 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:30:27,686 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:30:27,688 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:30:27,688 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:30:27,688 [test_set_gripper_id.py-->line:71]:test_parameters:10
ERROR 2025-03-14 11:30:27,736 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
NoneType: None
INFO 2025-03-14 11:30:27,736 [test_set_gripper_id.py-->line:81]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:30:27,783 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:30:27,783 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:30:27,783 [test_set_gripper_id.py-->line:71]:test_parameters:256
ERROR 2025-03-14 11:30:27,831 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置超限值】测试成功
NoneType: None
INFO 2025-03-14 11:30:27,832 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:30:27,861 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:30:27,861 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:30:27,861 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:30:27,872 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:30:27,872 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:30:27,872 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:32:21,181 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:32:21,181 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,181 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 11:32:21,181 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:32:21,233 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:32:21,233 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 11:32:21,233 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 11:32:21,234 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:32:21,235 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:32:21,236 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,236 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 11:32:21,236 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:32:21,280 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:32:21,280 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 11:32:21,280 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:32:21,281 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:32:21,282 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:32:21,282 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,282 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 11:32:21,282 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:32:21,328 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:32:21,328 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 11:32:21,328 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 11:32:21,329 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:32:21,330 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:32:21,331 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,331 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:32:21,331 [test_set_gripper_id.py-->line:71]:test_parameters:10
ERROR 2025-03-14 11:32:21,376 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
NoneType: None
INFO 2025-03-14 11:32:21,376 [test_set_gripper_id.py-->line:81]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:32:21,422 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,422 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:32:21,422 [test_set_gripper_id.py-->line:71]:test_parameters:256
ERROR 2025-03-14 11:32:21,473 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置超限值】测试成功
NoneType: None
INFO 2025-03-14 11:32:21,473 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:32:21,475 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,475 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:32:21,475 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:32:21,476 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:32:21,476 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:32:21,476 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:36:41,387 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:36:41,388 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:36:41,388 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:36:41,388 [test_set_gripper_id.py-->line:71]:test_parameters:10
ERROR 2025-03-14 11:36:41,439 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
NoneType: None
INFO 2025-03-14 11:36:41,439 [test_set_gripper_id.py-->line:81]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:36:41,486 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:36:41,487 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:36:41,487 [test_set_gripper_id.py-->line:71]:test_parameters:256
ERROR 2025-03-14 11:36:41,533 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置超限值】测试成功
NoneType: None
INFO 2025-03-14 11:36:41,533 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:36:41,536 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:36:41,536 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:36:41,536 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:36:41,537 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:36:41,537 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:36:41,537 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:38:29,245 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:38:29,245 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,245 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-14 11:38:29,246 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:38:29,298 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:38:29,298 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-14 11:38:29,298 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-14 11:38:29,298 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:38:29,300 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:38:29,300 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,300 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-14 11:38:29,300 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:38:29,344 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:38:29,344 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-14 11:38:29,344 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:38:29,345 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:38:29,347 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:38:29,347 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,347 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-14 11:38:29,347 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-14 11:38:29,391 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-14 11:38:29,391 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-14 11:38:29,391 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-14 11:38:29,391 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:38:29,393 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:38:29,394 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,394 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:38:29,394 [test_set_gripper_id.py-->line:71]:test_parameters:10
ERROR 2025-03-14 11:38:29,438 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
NoneType: None
INFO 2025-03-14 11:38:29,438 [test_set_gripper_id.py-->line:81]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:38:29,485 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,485 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:38:29,485 [test_set_gripper_id.py-->line:71]:test_parameters:256
ERROR 2025-03-14 11:38:29,538 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置超限值】测试成功
NoneType: None
INFO 2025-03-14 11:38:29,539 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置超限值】测试完成《《《《《
INFO 2025-03-14 11:38:29,540 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,540 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:38:29,540 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:38:29,541 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:38:29,541 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:38:29,541 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:45:21,285 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:45:21,286 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:45:21,286 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:45:21,286 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 11:45:21,390 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:45:21,390 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:45:21,390 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 11:45:21,434 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:45:21,434 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:45:21,434 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:45:21,435 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:45:21,435 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:45:21,435 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:57:14,130 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:57:14,131 [test_set_gripper_id.py-->line:68]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:57:14,132 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:57:14,132 [test_set_gripper_id.py-->line:71]:test_parameters:10
INFO 2025-03-14 11:57:14,254 [test_set_gripper_id.py-->line:68]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:57:14,255 [test_set_gripper_id.py-->line:70]:test_api:set_gripper_id
DEBUG 2025-03-14 11:57:14,255 [test_set_gripper_id.py-->line:71]:test_parameters:256
INFO 2025-03-14 11:57:14,323 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:57:14,323 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:57:14,323 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-14 11:57:14,324 [test_set_gripper_id.py-->line:36]:》》》》》用例【设置超限值】开始测试《《《《《
DEBUG 2025-03-14 11:57:14,324 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:57:14,324 [test_set_gripper_id.py-->line:39]:test_parameters:256
INFO 2025-03-14 11:58:43,051 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:58:43,054 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:58:43,054 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:58:43,054 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-14 11:58:43,151 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-14 11:58:43,151 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 11:58:43,151 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:58:43,245 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-14 11:58:53,900 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-14 11:58:53,902 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-14 11:58:53,902 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-14 11:58:53,902 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-14 11:58:54,019 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-14 11:58:54,019 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-14 11:58:54,019 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-14 11:58:54,108 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,554 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,555 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,555 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 18:35:09,555 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,604 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:09,605 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 18:35:09,605 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:35:09,606 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,607 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,609 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,609 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 18:35:09,609 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,650 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:09,650 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 18:35:09,650 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 18:35:09,651 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,654 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,654 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,654 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:35:09,654 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,697 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:09,697 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 18:35:09,697 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:35:09,698 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,700 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,701 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,701 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:35:09,701 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,744 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:09,744 [test_get_gripper_cw.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_cw.py", line 47, in test_get_gripper_baud
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-18 18:35:09,762 [test_get_gripper_cw.py-->line:50]:期望数据：3
DEBUG 2025-03-18 18:35:09,762 [test_get_gripper_cw.py-->line:51]:实际结果：1
INFO 2025-03-18 18:35:09,763 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:35:09,775 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,778 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,778 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,778 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:35:09,778 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,822 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:09,822 [test_get_gripper_cww.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_cww.py", line 47, in test_get_gripper_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-18 18:35:09,823 [test_get_gripper_cww.py-->line:50]:期望数据：3
DEBUG 2025-03-18 18:35:09,823 [test_get_gripper_cww.py-->line:51]:实际结果：1
INFO 2025-03-18 18:35:09,823 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:35:09,824 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,826 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,826 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,826 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 18:35:09,826 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,869 [test_get_gripper_i.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:09,869 [test_get_gripper_i.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_i.py", line 47, in test_get_gripper_baud
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:35:09,869 [test_get_gripper_i.py-->line:50]:期望数据：0
DEBUG 2025-03-18 18:35:09,869 [test_get_gripper_i.py-->line:51]:实际结果：1
INFO 2025-03-18 18:35:09,870 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 18:35:09,870 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,871 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,871 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,873 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 18:35:09,873 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,916 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:09,916 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 18:35:09,916 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 18:35:09,917 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,919 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,919 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,919 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 18:35:09,919 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:09,963 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:09,963 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:35:09,964 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 18:35:09,964 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 18:35:09,964 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 18:35:09,965 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:09,967 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:09,967 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 18:35:09,969 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 18:35:09,969 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:35:10,009 [test_get_gripper_p.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:35:10,009 [test_get_gripper_p.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_p.py", line 49, in test_set_gripper_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 150
DEBUG 2025-03-18 18:35:10,010 [test_get_gripper_p.py-->line:52]:期望数据：100
DEBUG 2025-03-18 18:35:10,010 [test_get_gripper_p.py-->line:53]:实际结果：150
INFO 2025-03-18 18:35:10,010 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 18:35:10,012 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,012 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,014 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,014 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 18:35:10,014 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:35:10,055 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:35:10,055 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:35:10,056 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 18:35:10,056 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-18 18:35:10,056 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 18:35:10,057 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,060 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,060 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,060 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 18:35:10,060 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,102 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:10,102 [test_get_gripper_torque.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_torque.py", line 47, in test_get_gripper_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-18 18:35:10,103 [test_get_gripper_torque.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:35:10,103 [test_get_gripper_torque.py-->line:51]:实际结果：50
INFO 2025-03-18 18:35:10,103 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 18:35:10,104 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,106 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,106 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,106 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 18:35:10,106 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,150 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,150 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 18:35:10,150 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 18:35:10,151 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,153 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,153 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,153 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 18:35:10,153 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,197 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,197 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 18:35:10,197 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 18:35:10,198 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,200 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,200 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,201 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 18:35:10,201 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,243 [test_get_protection_current.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:10,243 [test_get_protection_current.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_protection_current.py", line 47, in test_get_protection_current
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 197
DEBUG 2025-03-18 18:35:10,244 [test_get_protection_current.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:35:10,244 [test_get_protection_current.py-->line:51]:实际结果：197
INFO 2025-03-18 18:35:10,244 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 18:35:10,245 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,247 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,247 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,247 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 18:35:10,247 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,290 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,290 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 18:35:10,290 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 18:35:10,291 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,293 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,293 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,293 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 18:35:10,293 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,338 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:35:10,338 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 18:35:10,339 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:35:10,339 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 18:35:10,339 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 18:35:10,340 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,342 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,342 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,342 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 18:35:10,342 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,385 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,385 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 18:35:10,385 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 18:35:10,386 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,388 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,388 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,388 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 18:35:10,388 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,432 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,432 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 18:35:10,432 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 18:35:10,433 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,435 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,435 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,435 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 18:35:10,435 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:35:10,480 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:35:10,480 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 18:35:10,480 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 18:35:10,480 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:10,483 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:10,483 [test_set_abs_gripper_angle.py-->line:37]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 18:35:10,483 [test_set_abs_gripper_angle.py-->line:39]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 18:35:10,483 [test_set_abs_gripper_angle.py-->line:40]:test_parameters:50
DEBUG 2025-03-18 18:35:11,020 [test_set_abs_gripper_angle.py-->line:46]:请求类型断言成功
INFO 2025-03-18 18:35:11,021 [test_set_abs_gripper_angle.py-->line:59]:请求结果断言成功，用例【正确设置夹爪绝对运动】测试成功
INFO 2025-03-18 18:35:11,021 [test_set_abs_gripper_angle.py-->line:61]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 18:35:11,577 [test_set_abs_gripper_angle.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:11,579 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:11,579 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:35:11,579 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 18:35:11,579 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 18:35:11,628 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:35:11,628 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 18:35:11,628 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:35:11,629 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:11,631 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:11,631 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:35:11,631 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:35:11,631 [test_set_gripper_baud.py-->line:39]:test_parameters:1
DEBUG 2025-03-18 18:35:11,675 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:35:11,675 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 18:35:11,675 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:35:11,676 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:11,678 [test_set_gripper_calibrate.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:11,678 [test_set_gripper_calibrate.py-->line:34]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 18:35:11,678 [test_set_gripper_calibrate.py-->line:36]:test_api:set_gripper_calibration
DEBUG 2025-03-18 18:35:11,678 [test_set_gripper_calibrate.py-->line:37]:test_parameters:None
INFO 2025-03-18 18:35:16,726 [test_set_gripper_calibrate.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:16,727 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:16,727 [test_set_gripper_cw.py-->line:34]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:35:16,729 [test_set_gripper_cw.py-->line:36]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:35:16,729 [test_set_gripper_cw.py-->line:37]:test_parameters:3
INFO 2025-03-18 18:35:21,780 [test_set_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:21,781 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:21,782 [test_set_gripper_cww.py-->line:34]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:35:21,782 [test_set_gripper_cww.py-->line:36]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:35:21,782 [test_set_gripper_cww.py-->line:37]:test_parameters:3
INFO 2025-03-18 18:35:26,833 [test_set_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:26,836 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:26,836 [test_set_gripper_d.py-->line:34]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 18:35:26,836 [test_set_gripper_d.py-->line:36]:test_api:set_gripper_D
DEBUG 2025-03-18 18:35:26,836 [test_set_gripper_d.py-->line:37]:test_parameters:20
INFO 2025-03-18 18:35:31,884 [test_set_gripper_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:31,886 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:31,886 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 18:35:31,886 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:35:31,886 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
INFO 2025-03-18 18:35:36,945 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 18:35:36,945 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:35:36,946 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
INFO 2025-03-18 18:35:41,996 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:41,999 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:42,000 [test_set_gripper_i.py-->line:34]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:35:42,000 [test_set_gripper_i.py-->line:36]:test_api:set_gripper_I
DEBUG 2025-03-18 18:35:42,000 [test_set_gripper_i.py-->line:37]:test_parameters:0
INFO 2025-03-18 18:35:47,061 [test_set_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:35:47,064 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:35:47,064 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:35:47,065 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 18:35:47,065 [test_set_gripper_id.py-->line:39]:test_parameters:10
INFO 2025-03-18 18:55:00,310 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:00,311 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:55:00,311 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 18:55:00,311 [test_get_close_angle.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:55:05,360 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:55:05,362 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:05,362 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 18:55:05,362 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 18:55:05,362 [test_get_firmware_version.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:55:10,439 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:55:10,443 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:10,443 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:55:10,443 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:55:10,443 [test_get_gripper_baud.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:55:15,491 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:55:15,494 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:15,494 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:55:15,494 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:55:15,494 [test_get_gripper_cw.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:55:20,557 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:55:20,560 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:20,560 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:55:20,560 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:55:20,560 [test_get_gripper_cww.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:55:25,624 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:55:25,626 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:55:25,626 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:55:25,626 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 18:55:25,626 [test_get_gripper_i.py-->line:35]:test_parameters:None
INFO 2025-03-18 18:57:08,582 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,582 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,582 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 18:57:08,582 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,633 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:08,633 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 18:57:08,633 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:57:08,634 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,637 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,637 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,637 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 18:57:08,637 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,683 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:08,683 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 18:57:08,683 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 18:57:08,684 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,686 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,686 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,686 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:57:08,686 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,734 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:08,734 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 18:57:08,734 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:57:08,736 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,738 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,738 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,738 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:57:08,738 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,784 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:08,784 [test_get_gripper_cw.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_cw.py", line 47, in test_get_gripper_baud
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-18 18:57:08,786 [test_get_gripper_cw.py-->line:50]:期望数据：3
DEBUG 2025-03-18 18:57:08,786 [test_get_gripper_cw.py-->line:51]:实际结果：1
INFO 2025-03-18 18:57:08,786 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:57:08,788 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,790 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,790 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,790 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:57:08,790 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,834 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:08,834 [test_get_gripper_cww.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_cww.py", line 47, in test_get_gripper_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-18 18:57:08,836 [test_get_gripper_cww.py-->line:50]:期望数据：3
DEBUG 2025-03-18 18:57:08,836 [test_get_gripper_cww.py-->line:51]:实际结果：1
INFO 2025-03-18 18:57:08,836 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:57:08,837 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,839 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,839 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,839 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 18:57:08,840 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,883 [test_get_gripper_i.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:08,883 [test_get_gripper_i.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_i.py", line 47, in test_get_gripper_baud
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:57:08,884 [test_get_gripper_i.py-->line:50]:期望数据：0
DEBUG 2025-03-18 18:57:08,884 [test_get_gripper_i.py-->line:51]:实际结果：1
INFO 2025-03-18 18:57:08,884 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 18:57:08,886 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,887 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,887 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,887 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 18:57:08,887 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,933 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:08,933 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 18:57:08,933 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 18:57:08,934 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,936 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,936 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,936 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 18:57:08,936 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:08,985 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:08,986 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:57:08,986 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 18:57:08,986 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 18:57:08,986 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 18:57:08,987 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:08,988 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:08,988 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 18:57:08,988 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 18:57:08,988 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:57:09,032 [test_get_gripper_p.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:57:09,032 [test_get_gripper_p.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_p.py", line 49, in test_set_gripper_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 150
DEBUG 2025-03-18 18:57:09,033 [test_get_gripper_p.py-->line:52]:期望数据：100
DEBUG 2025-03-18 18:57:09,033 [test_get_gripper_p.py-->line:53]:实际结果：150
INFO 2025-03-18 18:57:09,033 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 18:57:09,035 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,037 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,037 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,037 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 18:57:09,037 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:57:09,082 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:57:09,083 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:57:09,083 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 18:57:09,083 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-18 18:57:09,083 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 18:57:09,084 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,086 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,086 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,086 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 18:57:09,086 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,133 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:09,133 [test_get_gripper_torque.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_torque.py", line 47, in test_get_gripper_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-18 18:57:09,134 [test_get_gripper_torque.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:57:09,134 [test_get_gripper_torque.py-->line:51]:实际结果：50
INFO 2025-03-18 18:57:09,134 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 18:57:09,135 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,137 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,137 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,137 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 18:57:09,137 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,184 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,184 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 18:57:09,184 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 18:57:09,185 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,187 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,187 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,187 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 18:57:09,187 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,233 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,233 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 18:57:09,233 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 18:57:09,233 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,236 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,236 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,236 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 18:57:09,236 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,283 [test_get_protection_current.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:09,283 [test_get_protection_current.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_protection_current.py", line 47, in test_get_protection_current
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 197
DEBUG 2025-03-18 18:57:09,284 [test_get_protection_current.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:57:09,284 [test_get_protection_current.py-->line:51]:实际结果：197
INFO 2025-03-18 18:57:09,284 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 18:57:09,285 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,287 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,287 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,287 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 18:57:09,287 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,334 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,334 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 18:57:09,334 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 18:57:09,335 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,336 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,336 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,336 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 18:57:09,336 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,384 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:57:09,384 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 18:57:09,386 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:57:09,386 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 18:57:09,386 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 18:57:09,387 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,388 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,388 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,388 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 18:57:09,388 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,431 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,431 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 18:57:09,431 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 18:57:09,432 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,434 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,434 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,434 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 18:57:09,434 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,484 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,484 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 18:57:09,484 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 18:57:09,486 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,487 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,487 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,487 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 18:57:09,487 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:57:09,535 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:57:09,535 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 18:57:09,536 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 18:57:09,536 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:09,538 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:09,538 [test_set_abs_gripper_angle.py-->line:37]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 18:57:09,538 [test_set_abs_gripper_angle.py-->line:39]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 18:57:09,538 [test_set_abs_gripper_angle.py-->line:40]:test_parameters:50
DEBUG 2025-03-18 18:57:10,092 [test_set_abs_gripper_angle.py-->line:46]:请求类型断言成功
INFO 2025-03-18 18:57:10,092 [test_set_abs_gripper_angle.py-->line:59]:请求结果断言成功，用例【正确设置夹爪绝对运动】测试成功
INFO 2025-03-18 18:57:10,092 [test_set_abs_gripper_angle.py-->line:61]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 18:57:10,640 [test_set_abs_gripper_angle.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:10,642 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:10,642 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:57:10,642 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 18:57:10,642 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 18:57:10,683 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:57:10,683 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 18:57:10,683 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:57:10,683 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:10,686 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:10,686 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:57:10,687 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:57:10,687 [test_set_gripper_baud.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 18:57:10,733 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:57:10,733 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 18:57:10,733 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:57:10,734 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:10,736 [test_set_gripper_calibrate.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:10,736 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 18:57:10,737 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_calibration
DEBUG 2025-03-18 18:57:10,737 [test_set_gripper_calibrate.py-->line:38]:test_parameters:None
DEBUG 2025-03-18 18:57:15,785 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-18 18:57:15,786 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_calibrate.py", line 50, in test_set_gripper_calibrate
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 18:57:15,787 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-18 18:57:15,787 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-18 18:57:15,787 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【正确设置夹爪零位】测试完成《《《《《
INFO 2025-03-18 18:57:15,788 [test_set_gripper_calibrate.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:15,790 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:15,791 [test_set_gripper_cw.py-->line:35]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:57:15,791 [test_set_gripper_cw.py-->line:37]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:57:15,791 [test_set_gripper_cw.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 18:57:15,833 [test_set_gripper_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:15,834 [test_set_gripper_cw.py-->line:57]:请求结果断言成功，用例【正确设置夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 18:57:15,834 [test_set_gripper_cw.py-->line:59]:》》》》》用例【正确设置夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:57:15,884 [test_set_gripper_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:15,887 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:15,888 [test_set_gripper_cww.py-->line:35]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:57:15,888 [test_set_gripper_cww.py-->line:37]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:57:15,888 [test_set_gripper_cww.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 18:57:15,933 [test_set_gripper_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:15,933 [test_set_gripper_cww.py-->line:57]:请求结果断言成功，用例【正确设置夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 18:57:15,934 [test_set_gripper_cww.py-->line:59]:》》》》》用例【正确设置夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:57:15,984 [test_set_gripper_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:15,987 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:15,987 [test_set_gripper_d.py-->line:35]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 18:57:15,987 [test_set_gripper_d.py-->line:37]:test_api:set_gripper_D
DEBUG 2025-03-18 18:57:15,987 [test_set_gripper_d.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 18:57:16,034 [test_set_gripper_d.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:16,035 [test_set_gripper_d.py-->line:57]:请求结果断言成功，用例【正确设置夹爪D值】测试成功
INFO 2025-03-18 18:57:16,035 [test_set_gripper_d.py-->line:59]:》》》》》用例【正确设置夹爪D值】测试完成《《《《《
INFO 2025-03-18 18:57:16,084 [test_set_gripper_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:16,087 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:16,087 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 18:57:16,087 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:57:16,088 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-18 18:57:16,133 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:57:16,133 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(上使能)】测试成功
INFO 2025-03-18 18:57:16,133 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(上使能)】测试完成《《《《《
INFO 2025-03-18 18:57:16,134 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 18:57:16,134 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:57:16,134 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-18 18:57:16,182 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:57:16,183 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(下使能)】测试成功
INFO 2025-03-18 18:57:16,183 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(下使能)】测试完成《《《《《
INFO 2025-03-18 18:57:16,184 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:16,186 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:16,187 [test_set_gripper_i.py-->line:35]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:57:16,187 [test_set_gripper_i.py-->line:37]:test_api:set_gripper_I
DEBUG 2025-03-18 18:57:16,187 [test_set_gripper_i.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 18:57:16,233 [test_set_gripper_i.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:16,233 [test_set_gripper_i.py-->line:57]:请求结果断言成功，用例【正确设置夹爪I值】测试成功
INFO 2025-03-18 18:57:16,233 [test_set_gripper_i.py-->line:59]:》》》》》用例【正确设置夹爪I值】测试完成《《《《《
INFO 2025-03-18 18:57:16,286 [test_set_gripper_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:16,287 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:16,287 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:57:16,287 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 18:57:16,287 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-18 18:57:16,383 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:57:16,383 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-18 18:57:16,384 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-18 18:57:16,483 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:16,487 [test_set_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:16,487 [test_set_gripper_p.py-->line:35]:》》》》》用例【正确设置夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 18:57:16,487 [test_set_gripper_p.py-->line:37]:test_api:set_gripper_P
DEBUG 2025-03-18 18:57:16,487 [test_set_gripper_p.py-->line:38]:test_parameters:20
INFO 2025-03-18 18:57:21,584 [test_set_gripper_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:21,587 [test_set_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:21,587 [test_set_gripper_torque.py-->line:35]:》》》》》用例【正确设置夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 18:57:21,587 [test_set_gripper_torque.py-->line:37]:test_api:set_gripper_torque
DEBUG 2025-03-18 18:57:21,587 [test_set_gripper_torque.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:57:21,633 [test_set_gripper_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:21,633 [test_set_gripper_torque.py-->line:57]:请求结果断言成功，用例【正确设置夹爪扭矩】测试成功
INFO 2025-03-18 18:57:21,633 [test_set_gripper_torque.py-->line:59]:》》》》》用例【正确设置夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 18:57:21,692 [test_set_gripper_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:21,694 [test_set_gripper_value.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:21,694 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(100度)】开始测试《《《《《
DEBUG 2025-03-18 18:57:21,694 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 18:57:21,694 [test_set_gripper_value.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:57:21,783 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:21,783 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(100度)】测试成功
INFO 2025-03-18 18:57:21,783 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(100度)】测试完成《《《《《
INFO 2025-03-18 18:57:21,784 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(0度)】开始测试《《《《《
DEBUG 2025-03-18 18:57:21,785 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 18:57:21,785 [test_set_gripper_value.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 18:57:21,884 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:21,885 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(0度)】测试成功
INFO 2025-03-18 18:57:21,885 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(0度)】测试完成《《《《《
INFO 2025-03-18 18:57:21,984 [test_set_gripper_value.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:21,986 [test_set_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:21,986 [test_set_open_angle.py-->line:34]:》》》》》用例【正确设置夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 18:57:21,986 [test_set_open_angle.py-->line:36]:test_api:set_open_angle
DEBUG 2025-03-18 18:57:21,986 [test_set_open_angle.py-->line:37]:test_parameters:100
DEBUG 2025-03-18 18:57:22,032 [test_set_open_angle.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:57:22,032 [test_set_open_angle.py-->line:56]:请求结果断言成功，用例【正确设置夹爪张开角度】测试成功
INFO 2025-03-18 18:57:22,032 [test_set_open_angle.py-->line:58]:》》》》》用例【正确设置夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 18:57:22,034 [test_set_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:22,037 [test_set_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:22,037 [test_set_protection_current.py-->line:35]:》》》》》用例【正确设置夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 18:57:22,037 [test_set_protection_current.py-->line:37]:test_api:set_protection_current
DEBUG 2025-03-18 18:57:22,037 [test_set_protection_current.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:57:22,084 [test_set_protection_current.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:22,085 [test_set_protection_current.py-->line:57]:请求结果断言成功，用例【正确设置夹爪夹持电流】测试成功
INFO 2025-03-18 18:57:22,085 [test_set_protection_current.py-->line:59]:》》》》》用例【正确设置夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 18:57:22,132 [test_set_protection_current.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:22,135 [test_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:22,135 [test_set_speed.py-->line:35]:》》》》》用例【正确设置夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 18:57:22,135 [test_set_speed.py-->line:37]:test_api:set_speed
DEBUG 2025-03-18 18:57:22,135 [test_set_speed.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:57:22,184 [test_set_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:22,185 [test_set_speed.py-->line:57]:请求结果断言成功，用例【正确设置夹爪速度】测试成功
INFO 2025-03-18 18:57:22,185 [test_set_speed.py-->line:59]:》》》》》用例【正确设置夹爪速度】测试完成《《《《《
INFO 2025-03-18 18:57:22,233 [test_set_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:22,237 [test_set_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:22,237 [test_set_vir_pos.py-->line:35]:》》》》》用例【正确设置夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 18:57:22,237 [test_set_vir_pos.py-->line:37]:test_api:set_vir_pos
DEBUG 2025-03-18 18:57:22,238 [test_set_vir_pos.py-->line:38]:test_parameters:8
DEBUG 2025-03-18 18:57:22,285 [test_set_vir_pos.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:57:22,285 [test_set_vir_pos.py-->line:57]:请求结果断言成功，用例【正确设置夹爪虚位数值】测试成功
INFO 2025-03-18 18:57:22,285 [test_set_vir_pos.py-->line:59]:》》》》》用例【正确设置夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 18:57:22,332 [test_set_vir_pos.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:57:22,335 [test_stop.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:57:22,335 [test_stop.py-->line:34]:》》》》》用例【正确设置夹爪停止运动】开始测试《《《《《
DEBUG 2025-03-18 18:57:22,335 [test_stop.py-->line:36]:test_api:stop
DEBUG 2025-03-18 18:57:22,335 [test_stop.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:57:22,382 [test_stop.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:57:22,382 [test_stop.py-->line:56]:请求结果断言成功，用例【正确设置夹爪停止运动】测试成功
INFO 2025-03-18 18:57:22,382 [test_stop.py-->line:58]:》》》》》用例【正确设置夹爪停止运动】测试完成《《《《《
INFO 2025-03-18 18:57:22,383 [test_stop.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,340 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,341 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,341 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 18:59:46,341 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,386 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,386 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 18:59:46,386 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:59:46,388 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,389 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,389 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,389 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 18:59:46,389 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,432 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,432 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 18:59:46,432 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 18:59:46,432 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,435 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,435 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,435 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:59:46,436 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,479 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,479 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 18:59:46,479 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:59:46,480 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,482 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,482 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,482 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:59:46,482 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,526 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,526 [test_get_gripper_cw.py-->line:54]:请求结果断言成功，用例【正确获取夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 18:59:46,526 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:59:46,526 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,529 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,529 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,529 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:59:46,529 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,572 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,572 [test_get_gripper_cww.py-->line:54]:请求结果断言成功，用例【正确获取夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 18:59:46,572 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:59:46,572 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,574 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,574 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,574 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 18:59:46,574 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,619 [test_get_gripper_i.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,619 [test_get_gripper_i.py-->line:54]:请求结果断言成功，用例【正确读取夹爪I值】测试成功
INFO 2025-03-18 18:59:46,619 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 18:59:46,620 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,622 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,622 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,623 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 18:59:46,623 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,664 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,664 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 18:59:46,664 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 18:59:46,665 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,667 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,667 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,667 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 18:59:46,667 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,711 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:59:46,711 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 18:59:46,713 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 18:59:46,713 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 18:59:46,713 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 18:59:46,715 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,717 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,717 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,717 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 18:59:46,717 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:59:46,758 [test_get_gripper_p.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:59:46,759 [test_get_gripper_p.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_p.py", line 49, in test_set_gripper_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 120
DEBUG 2025-03-18 18:59:46,760 [test_get_gripper_p.py-->line:52]:期望数据：100
DEBUG 2025-03-18 18:59:46,760 [test_get_gripper_p.py-->line:53]:实际结果：120
INFO 2025-03-18 18:59:46,760 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 18:59:46,761 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,763 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,763 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,763 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 18:59:46,763 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:59:46,806 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 18:59:46,806 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-18 18:59:46,807 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 18:59:46,807 [test_get_gripper_status.py-->line:53]:实际结果：3
INFO 2025-03-18 18:59:46,807 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 18:59:46,808 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,809 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,809 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,810 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 18:59:46,810 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,852 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,852 [test_get_gripper_torque.py-->line:54]:请求结果断言成功，用例【正确获取夹爪扭矩】测试成功
INFO 2025-03-18 18:59:46,852 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 18:59:46,854 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,855 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,856 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,856 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 18:59:46,856 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,899 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,899 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 18:59:46,899 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 18:59:46,901 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,902 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,904 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,904 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 18:59:46,904 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,946 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,946 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 18:59:46,946 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 18:59:46,947 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,948 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,948 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,948 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 18:59:46,948 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:46,994 [test_get_protection_current.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:46,995 [test_get_protection_current.py-->line:54]:请求结果断言成功，用例【正确获取夹爪夹持电流】测试成功
INFO 2025-03-18 18:59:46,995 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 18:59:46,996 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:46,998 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:46,998 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 18:59:46,998 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 18:59:46,998 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:47,042 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:47,042 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 18:59:47,042 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 18:59:47,043 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:47,044 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:47,045 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 18:59:47,045 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 18:59:47,045 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:47,088 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 18:59:47,088 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 18:59:47,089 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 18:59:47,089 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 18:59:47,089 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 18:59:47,091 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:47,093 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:47,093 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 18:59:47,093 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 18:59:47,093 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:47,135 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:47,135 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 18:59:47,135 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 18:59:47,135 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:47,137 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:47,137 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 18:59:47,137 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 18:59:47,137 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:47,182 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:47,182 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 18:59:47,182 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 18:59:47,183 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:47,185 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:47,185 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 18:59:47,185 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 18:59:47,185 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 18:59:47,228 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 18:59:47,228 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 18:59:47,228 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 18:59:47,229 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:47,231 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:47,231 [test_set_abs_gripper_angle.py-->line:37]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 18:59:47,231 [test_set_abs_gripper_angle.py-->line:39]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 18:59:47,231 [test_set_abs_gripper_angle.py-->line:40]:test_parameters:50
DEBUG 2025-03-18 18:59:47,756 [test_set_abs_gripper_angle.py-->line:46]:请求类型断言成功
ERROR 2025-03-18 18:59:47,756 [test_set_abs_gripper_angle.py-->line:54]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_abs_gripper_angle.py", line 52, in test_set_abs_gripper_angle
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 18:59:47,757 [test_set_abs_gripper_angle.py-->line:55]:期望数据：1
DEBUG 2025-03-18 18:59:47,757 [test_set_abs_gripper_angle.py-->line:56]:实际结果：0
INFO 2025-03-18 18:59:47,757 [test_set_abs_gripper_angle.py-->line:61]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 18:59:48,326 [test_set_abs_gripper_angle.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:48,328 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:48,328 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 18:59:48,328 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 18:59:48,328 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 18:59:48,379 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:59:48,379 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 18:59:48,379 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 18:59:48,381 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:48,382 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:48,382 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 18:59:48,382 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 18:59:48,382 [test_set_gripper_baud.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 18:59:48,427 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:59:48,427 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 18:59:48,427 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 18:59:48,428 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:48,430 [test_set_gripper_calibrate.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:48,430 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 18:59:48,430 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_calibration
DEBUG 2025-03-18 18:59:48,430 [test_set_gripper_calibrate.py-->line:38]:test_parameters:None
DEBUG 2025-03-18 18:59:53,479 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-18 18:59:53,479 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_calibrate.py", line 50, in test_set_gripper_calibrate
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 18:59:53,479 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-18 18:59:53,479 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-18 18:59:53,479 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【正确设置夹爪零位】测试完成《《《《《
INFO 2025-03-18 18:59:53,481 [test_set_gripper_calibrate.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,483 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,483 [test_set_gripper_cw.py-->line:35]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,483 [test_set_gripper_cw.py-->line:37]:test_api:set_gripper_cw
DEBUG 2025-03-18 18:59:53,483 [test_set_gripper_cw.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 18:59:53,526 [test_set_gripper_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:53,526 [test_set_gripper_cw.py-->line:57]:请求结果断言成功，用例【正确设置夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 18:59:53,526 [test_set_gripper_cw.py-->line:59]:》》》》》用例【正确设置夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:59:53,572 [test_set_gripper_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,574 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,574 [test_set_gripper_cww.py-->line:35]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,574 [test_set_gripper_cww.py-->line:37]:test_api:set_gripper_cww
DEBUG 2025-03-18 18:59:53,574 [test_set_gripper_cww.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 18:59:53,620 [test_set_gripper_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:53,620 [test_set_gripper_cww.py-->line:57]:请求结果断言成功，用例【正确设置夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 18:59:53,620 [test_set_gripper_cww.py-->line:59]:》》》》》用例【正确设置夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 18:59:53,666 [test_set_gripper_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,668 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,670 [test_set_gripper_d.py-->line:35]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,670 [test_set_gripper_d.py-->line:37]:test_api:set_gripper_D
DEBUG 2025-03-18 18:59:53,670 [test_set_gripper_d.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 18:59:53,714 [test_set_gripper_d.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:53,714 [test_set_gripper_d.py-->line:57]:请求结果断言成功，用例【正确设置夹爪D值】测试成功
INFO 2025-03-18 18:59:53,714 [test_set_gripper_d.py-->line:59]:》》》》》用例【正确设置夹爪D值】测试完成《《《《《
INFO 2025-03-18 18:59:53,762 [test_set_gripper_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,764 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,764 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,764 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:59:53,764 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-18 18:59:53,807 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:59:53,807 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(上使能)】测试成功
INFO 2025-03-18 18:59:53,807 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(上使能)】测试完成《《《《《
INFO 2025-03-18 18:59:53,807 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,819 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 18:59:53,820 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-18 18:59:53,869 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:59:53,869 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(下使能)】测试成功
INFO 2025-03-18 18:59:53,869 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(下使能)】测试完成《《《《《
INFO 2025-03-18 18:59:53,870 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,872 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,872 [test_set_gripper_i.py-->line:35]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,872 [test_set_gripper_i.py-->line:37]:test_api:set_gripper_I
DEBUG 2025-03-18 18:59:53,872 [test_set_gripper_i.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 18:59:53,916 [test_set_gripper_i.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:53,916 [test_set_gripper_i.py-->line:57]:请求结果断言成功，用例【正确设置夹爪I值】测试成功
INFO 2025-03-18 18:59:53,916 [test_set_gripper_i.py-->line:59]:》》》》》用例【正确设置夹爪I值】测试完成《《《《《
INFO 2025-03-18 18:59:53,963 [test_set_gripper_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:53,966 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:53,966 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 18:59:53,966 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 18:59:53,966 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-18 18:59:54,055 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-18 18:59:54,055 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-18 18:59:54,055 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-18 18:59:54,149 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,151 [test_set_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,151 [test_set_gripper_p.py-->line:35]:》》》》》用例【正确设置夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,151 [test_set_gripper_p.py-->line:37]:test_api:set_gripper_P
DEBUG 2025-03-18 18:59:54,151 [test_set_gripper_p.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 18:59:54,195 [test_set_gripper_p.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,195 [test_set_gripper_p.py-->line:57]:请求结果断言成功，用例【正确设置夹爪P值】测试成功
INFO 2025-03-18 18:59:54,195 [test_set_gripper_p.py-->line:59]:》》》》》用例【正确设置夹爪P值】测试完成《《《《《
INFO 2025-03-18 18:59:54,242 [test_set_gripper_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,244 [test_set_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,244 [test_set_gripper_torque.py-->line:35]:》》》》》用例【正确设置夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,244 [test_set_gripper_torque.py-->line:37]:test_api:set_gripper_torque
DEBUG 2025-03-18 18:59:54,245 [test_set_gripper_torque.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:59:54,289 [test_set_gripper_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,289 [test_set_gripper_torque.py-->line:57]:请求结果断言成功，用例【正确设置夹爪扭矩】测试成功
INFO 2025-03-18 18:59:54,289 [test_set_gripper_torque.py-->line:59]:》》》》》用例【正确设置夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 18:59:54,336 [test_set_gripper_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,338 [test_set_gripper_value.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,338 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(100度)】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,339 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 18:59:54,339 [test_set_gripper_value.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:59:54,429 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,429 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(100度)】测试成功
INFO 2025-03-18 18:59:54,429 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(100度)】测试完成《《《《《
INFO 2025-03-18 18:59:54,431 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(0度)】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,431 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 18:59:54,431 [test_set_gripper_value.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 18:59:54,523 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,523 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(0度)】测试成功
INFO 2025-03-18 18:59:54,523 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(0度)】测试完成《《《《《
INFO 2025-03-18 18:59:54,616 [test_set_gripper_value.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,619 [test_set_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,620 [test_set_open_angle.py-->line:34]:》》》》》用例【正确设置夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,620 [test_set_open_angle.py-->line:36]:test_api:set_open_angle
DEBUG 2025-03-18 18:59:54,620 [test_set_open_angle.py-->line:37]:test_parameters:100
DEBUG 2025-03-18 18:59:54,663 [test_set_open_angle.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:59:54,663 [test_set_open_angle.py-->line:56]:请求结果断言成功，用例【正确设置夹爪张开角度】测试成功
INFO 2025-03-18 18:59:54,663 [test_set_open_angle.py-->line:58]:》》》》》用例【正确设置夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 18:59:54,664 [test_set_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,666 [test_set_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,667 [test_set_protection_current.py-->line:35]:》》》》》用例【正确设置夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,667 [test_set_protection_current.py-->line:37]:test_api:set_protection_current
DEBUG 2025-03-18 18:59:54,667 [test_set_protection_current.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:59:54,710 [test_set_protection_current.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,710 [test_set_protection_current.py-->line:57]:请求结果断言成功，用例【正确设置夹爪夹持电流】测试成功
INFO 2025-03-18 18:59:54,710 [test_set_protection_current.py-->line:59]:》》》》》用例【正确设置夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 18:59:54,757 [test_set_protection_current.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,760 [test_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,760 [test_set_speed.py-->line:35]:》》》》》用例【正确设置夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,760 [test_set_speed.py-->line:37]:test_api:set_speed
DEBUG 2025-03-18 18:59:54,760 [test_set_speed.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 18:59:54,804 [test_set_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,804 [test_set_speed.py-->line:57]:请求结果断言成功，用例【正确设置夹爪速度】测试成功
INFO 2025-03-18 18:59:54,804 [test_set_speed.py-->line:59]:》》》》》用例【正确设置夹爪速度】测试完成《《《《《
INFO 2025-03-18 18:59:54,851 [test_set_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,854 [test_set_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,854 [test_set_vir_pos.py-->line:35]:》》》》》用例【正确设置夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,854 [test_set_vir_pos.py-->line:37]:test_api:set_vir_pos
DEBUG 2025-03-18 18:59:54,854 [test_set_vir_pos.py-->line:38]:test_parameters:8
DEBUG 2025-03-18 18:59:54,898 [test_set_vir_pos.py-->line:44]:请求类型断言成功
INFO 2025-03-18 18:59:54,898 [test_set_vir_pos.py-->line:57]:请求结果断言成功，用例【正确设置夹爪虚位数值】测试成功
INFO 2025-03-18 18:59:54,898 [test_set_vir_pos.py-->line:59]:》》》》》用例【正确设置夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 18:59:54,945 [test_set_vir_pos.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 18:59:54,947 [test_stop.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 18:59:54,947 [test_stop.py-->line:34]:》》》》》用例【正确设置夹爪停止运动】开始测试《《《《《
DEBUG 2025-03-18 18:59:54,949 [test_stop.py-->line:36]:test_api:stop
DEBUG 2025-03-18 18:59:54,949 [test_stop.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 18:59:54,991 [test_stop.py-->line:43]:请求类型断言成功
INFO 2025-03-18 18:59:54,991 [test_stop.py-->line:56]:请求结果断言成功，用例【正确设置夹爪停止运动】测试成功
INFO 2025-03-18 18:59:54,991 [test_stop.py-->line:58]:》》》》》用例【正确设置夹爪停止运动】测试完成《《《《《
INFO 2025-03-18 18:59:54,992 [test_stop.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:55,782 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:55,782 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:03:55,782 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 19:03:55,782 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:55,836 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:55,836 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 19:03:55,836 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:03:55,838 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:55,839 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:55,840 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 19:03:55,840 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 19:03:55,840 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:55,885 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:55,885 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 19:03:55,885 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 19:03:55,886 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:55,889 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:55,889 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:03:55,889 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:03:55,889 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:55,936 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:55,936 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 19:03:55,936 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:03:55,937 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:55,939 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:55,939 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:03:55,939 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:03:55,939 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:55,986 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:55,986 [test_get_gripper_cw.py-->line:54]:请求结果断言成功，用例【正确获取夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:03:55,986 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:03:55,988 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:55,990 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:55,990 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:03:55,990 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:03:55,990 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,036 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,036 [test_get_gripper_cww.py-->line:54]:请求结果断言成功，用例【正确获取夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:03:56,037 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:03:56,038 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,040 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,041 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,041 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 19:03:56,041 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,087 [test_get_gripper_i.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,087 [test_get_gripper_i.py-->line:54]:请求结果断言成功，用例【正确读取夹爪I值】测试成功
INFO 2025-03-18 19:03:56,087 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:03:56,088 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,090 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,090 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,090 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 19:03:56,090 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,137 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,137 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 19:03:56,137 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:03:56,138 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,140 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,140 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,140 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 19:03:56,140 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,185 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:03:56,185 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:03:56,187 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 19:03:56,188 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 19:03:56,188 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 19:03:56,188 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,190 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,190 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,191 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 19:03:56,191 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:03:56,235 [test_get_gripper_p.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:03:56,235 [test_get_gripper_p.py-->line:56]:请求结果断言成功，用例【正确获取夹爪P值】测试成功
INFO 2025-03-18 19:03:56,235 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:03:56,236 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,239 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,239 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,239 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 19:03:56,239 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:03:56,285 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 19:03:56,286 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:03:56,286 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 19:03:56,286 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-18 19:03:56,287 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 19:03:56,289 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,290 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,291 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,291 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 19:03:56,291 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,336 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,336 [test_get_gripper_torque.py-->line:54]:请求结果断言成功，用例【正确获取夹爪扭矩】测试成功
INFO 2025-03-18 19:03:56,336 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:03:56,338 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,339 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,340 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,340 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 19:03:56,340 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,386 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,386 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 19:03:56,386 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 19:03:56,388 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,389 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,390 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,390 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 19:03:56,390 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,436 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,436 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 19:03:56,436 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:03:56,437 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,439 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,439 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,440 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 19:03:56,440 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,486 [test_get_protection_current.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,486 [test_get_protection_current.py-->line:54]:请求结果断言成功，用例【正确获取夹爪夹持电流】测试成功
INFO 2025-03-18 19:03:56,486 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:03:56,487 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,489 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,489 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,489 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 19:03:56,489 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,550 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,550 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 19:03:56,551 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 19:03:56,554 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,569 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,570 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,570 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 19:03:56,571 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,619 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:03:56,619 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 19:03:56,620 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 19:03:56,620 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 19:03:56,620 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:03:56,621 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,622 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,622 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,622 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 19:03:56,622 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,669 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,669 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 19:03:56,669 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:03:56,671 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,673 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,673 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,673 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 19:03:56,673 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,720 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,720 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 19:03:56,720 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 19:03:56,721 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,723 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,723 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,723 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 19:03:56,723 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:03:56,769 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:03:56,769 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 19:03:56,769 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 19:03:56,770 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:56,772 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:56,772 [test_set_abs_gripper_angle.py-->line:37]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 19:03:56,773 [test_set_abs_gripper_angle.py-->line:39]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 19:03:56,773 [test_set_abs_gripper_angle.py-->line:40]:test_parameters:50
DEBUG 2025-03-18 19:03:57,334 [test_set_abs_gripper_angle.py-->line:46]:请求类型断言成功
INFO 2025-03-18 19:03:57,334 [test_set_abs_gripper_angle.py-->line:59]:请求结果断言成功，用例【正确设置夹爪绝对运动】测试成功
INFO 2025-03-18 19:03:57,334 [test_set_abs_gripper_angle.py-->line:61]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 19:03:57,886 [test_set_abs_gripper_angle.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:57,889 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:57,890 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:03:57,890 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 19:03:57,890 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:03:57,935 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:03:57,935 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 19:03:57,935 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:03:57,937 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:57,939 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:57,939 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:03:57,939 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:03:57,939 [test_set_gripper_baud.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:03:57,986 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:03:57,986 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 19:03:57,986 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:03:57,988 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:03:57,990 [test_set_gripper_calibrate.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-18 19:03:57,991 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 19:03:57,991 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_calibration
DEBUG 2025-03-18 19:03:57,991 [test_set_gripper_calibrate.py-->line:38]:test_parameters:None
DEBUG 2025-03-18 19:04:03,037 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-18 19:04:03,037 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_calibrate.py", line 50, in test_set_gripper_calibrate
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 19:04:03,038 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-18 19:04:03,038 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-18 19:04:03,038 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【正确设置夹爪零位】测试完成《《《《《
INFO 2025-03-18 19:04:03,041 [test_set_gripper_calibrate.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,043 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,043 [test_set_gripper_cw.py-->line:35]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,043 [test_set_gripper_cw.py-->line:37]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:04:03,043 [test_set_gripper_cw.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:04:03,085 [test_set_gripper_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,085 [test_set_gripper_cw.py-->line:57]:请求结果断言成功，用例【正确设置夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:04:03,085 [test_set_gripper_cw.py-->line:59]:》》》》》用例【正确设置夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:04:03,136 [test_set_gripper_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,139 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,140 [test_set_gripper_cww.py-->line:35]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,140 [test_set_gripper_cww.py-->line:37]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:04:03,140 [test_set_gripper_cww.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:04:03,186 [test_set_gripper_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,186 [test_set_gripper_cww.py-->line:57]:请求结果断言成功，用例【正确设置夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:04:03,186 [test_set_gripper_cww.py-->line:59]:》》》》》用例【正确设置夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:04:03,236 [test_set_gripper_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,239 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,239 [test_set_gripper_d.py-->line:35]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,239 [test_set_gripper_d.py-->line:37]:test_api:set_gripper_D
DEBUG 2025-03-18 19:04:03,239 [test_set_gripper_d.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:04:03,287 [test_set_gripper_d.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,287 [test_set_gripper_d.py-->line:57]:请求结果断言成功，用例【正确设置夹爪D值】测试成功
INFO 2025-03-18 19:04:03,287 [test_set_gripper_d.py-->line:59]:》》》》》用例【正确设置夹爪D值】测试完成《《《《《
INFO 2025-03-18 19:04:03,336 [test_set_gripper_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,339 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,339 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,339 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:04:03,339 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-18 19:04:03,386 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:04:03,387 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(上使能)】测试成功
INFO 2025-03-18 19:04:03,387 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(上使能)】测试完成《《《《《
INFO 2025-03-18 19:04:03,387 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,387 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:04:03,387 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-18 19:04:03,436 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:04:03,436 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(下使能)】测试成功
INFO 2025-03-18 19:04:03,437 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(下使能)】测试完成《《《《《
INFO 2025-03-18 19:04:03,439 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,441 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,441 [test_set_gripper_i.py-->line:35]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,441 [test_set_gripper_i.py-->line:37]:test_api:set_gripper_I
DEBUG 2025-03-18 19:04:03,441 [test_set_gripper_i.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:04:03,486 [test_set_gripper_i.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,486 [test_set_gripper_i.py-->line:57]:请求结果断言成功，用例【正确设置夹爪I值】测试成功
INFO 2025-03-18 19:04:03,486 [test_set_gripper_i.py-->line:59]:》》》》》用例【正确设置夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:04:03,538 [test_set_gripper_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,540 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,541 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,541 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 19:04:03,541 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-18 19:04:03,636 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:04:03,636 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-18 19:04:03,636 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:04:03,737 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,740 [test_set_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,740 [test_set_gripper_p.py-->line:35]:》》》》》用例【正确设置夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,740 [test_set_gripper_p.py-->line:37]:test_api:set_gripper_P
DEBUG 2025-03-18 19:04:03,740 [test_set_gripper_p.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:04:03,786 [test_set_gripper_p.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,787 [test_set_gripper_p.py-->line:57]:请求结果断言成功，用例【正确设置夹爪P值】测试成功
INFO 2025-03-18 19:04:03,787 [test_set_gripper_p.py-->line:59]:》》》》》用例【正确设置夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:04:03,836 [test_set_gripper_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,837 [test_set_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,839 [test_set_gripper_torque.py-->line:35]:》》》》》用例【正确设置夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,839 [test_set_gripper_torque.py-->line:37]:test_api:set_gripper_torque
DEBUG 2025-03-18 19:04:03,839 [test_set_gripper_torque.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:04:03,886 [test_set_gripper_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:03,886 [test_set_gripper_torque.py-->line:57]:请求结果断言成功，用例【正确设置夹爪扭矩】测试成功
INFO 2025-03-18 19:04:03,886 [test_set_gripper_torque.py-->line:59]:》》》》》用例【正确设置夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:04:03,937 [test_set_gripper_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:03,939 [test_set_gripper_value.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:03,939 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(100度)】开始测试《《《《《
DEBUG 2025-03-18 19:04:03,940 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:04:03,940 [test_set_gripper_value.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:04:04,036 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:04,036 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(100度)】测试成功
INFO 2025-03-18 19:04:04,036 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(100度)】测试完成《《《《《
INFO 2025-03-18 19:04:04,036 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(0度)】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,037 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:04:04,037 [test_set_gripper_value.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:04:04,137 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:04,137 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(0度)】测试成功
INFO 2025-03-18 19:04:04,137 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(0度)】测试完成《《《《《
INFO 2025-03-18 19:04:04,238 [test_set_gripper_value.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:04,241 [test_set_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:04,241 [test_set_open_angle.py-->line:34]:》》》》》用例【正确设置夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,241 [test_set_open_angle.py-->line:36]:test_api:set_open_angle
DEBUG 2025-03-18 19:04:04,241 [test_set_open_angle.py-->line:37]:test_parameters:100
DEBUG 2025-03-18 19:04:04,285 [test_set_open_angle.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:04:04,285 [test_set_open_angle.py-->line:56]:请求结果断言成功，用例【正确设置夹爪张开角度】测试成功
INFO 2025-03-18 19:04:04,285 [test_set_open_angle.py-->line:58]:》》》》》用例【正确设置夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:04:04,287 [test_set_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:04,290 [test_set_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:04,290 [test_set_protection_current.py-->line:35]:》》》》》用例【正确设置夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,290 [test_set_protection_current.py-->line:37]:test_api:set_protection_current
DEBUG 2025-03-18 19:04:04,290 [test_set_protection_current.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:04:04,336 [test_set_protection_current.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:04,336 [test_set_protection_current.py-->line:57]:请求结果断言成功，用例【正确设置夹爪夹持电流】测试成功
INFO 2025-03-18 19:04:04,336 [test_set_protection_current.py-->line:59]:》》》》》用例【正确设置夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:04:04,387 [test_set_protection_current.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:04,390 [test_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:04,390 [test_set_speed.py-->line:35]:》》》》》用例【正确设置夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,391 [test_set_speed.py-->line:37]:test_api:set_speed
DEBUG 2025-03-18 19:04:04,391 [test_set_speed.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:04:04,436 [test_set_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:04,436 [test_set_speed.py-->line:57]:请求结果断言成功，用例【正确设置夹爪速度】测试成功
INFO 2025-03-18 19:04:04,437 [test_set_speed.py-->line:59]:》》》》》用例【正确设置夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:04:04,488 [test_set_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:04,490 [test_set_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:04,490 [test_set_vir_pos.py-->line:35]:》》》》》用例【正确设置夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,490 [test_set_vir_pos.py-->line:37]:test_api:set_vir_pos
DEBUG 2025-03-18 19:04:04,490 [test_set_vir_pos.py-->line:38]:test_parameters:8
DEBUG 2025-03-18 19:04:04,536 [test_set_vir_pos.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:04:04,537 [test_set_vir_pos.py-->line:57]:请求结果断言成功，用例【正确设置夹爪虚位数值】测试成功
INFO 2025-03-18 19:04:04,537 [test_set_vir_pos.py-->line:59]:》》》》》用例【正确设置夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:04:04,586 [test_set_vir_pos.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:04:04,589 [test_stop.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:04:04,589 [test_stop.py-->line:34]:》》》》》用例【正确设置夹爪停止运动】开始测试《《《《《
DEBUG 2025-03-18 19:04:04,589 [test_stop.py-->line:36]:test_api:stop
DEBUG 2025-03-18 19:04:04,589 [test_stop.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:04:04,637 [test_stop.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:04:04,637 [test_stop.py-->line:56]:请求结果断言成功，用例【正确设置夹爪停止运动】测试成功
INFO 2025-03-18 19:04:04,637 [test_stop.py-->line:58]:》》》》》用例【正确设置夹爪停止运动】测试完成《《《《《
INFO 2025-03-18 19:04:04,638 [test_stop.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,592 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,592 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,592 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 19:06:26,592 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,645 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,645 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 19:06:26,645 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:06:26,647 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,649 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,649 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,649 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 19:06:26,649 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,697 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,697 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 19:06:26,697 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 19:06:26,699 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,700 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,700 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,700 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:06:26,700 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,747 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,747 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 19:06:26,747 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:06:26,749 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,751 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,751 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,751 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:06:26,751 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,797 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,797 [test_get_gripper_cw.py-->line:54]:请求结果断言成功，用例【正确获取夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:06:26,797 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:06:26,797 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,800 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,801 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,801 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:06:26,801 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,847 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,847 [test_get_gripper_cww.py-->line:54]:请求结果断言成功，用例【正确获取夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:06:26,847 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:06:26,849 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,851 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,851 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,851 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 19:06:26,851 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,897 [test_get_gripper_i.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,897 [test_get_gripper_i.py-->line:54]:请求结果断言成功，用例【正确读取夹爪I值】测试成功
INFO 2025-03-18 19:06:26,897 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:06:26,897 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,900 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,900 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,900 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 19:06:26,900 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,947 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:26,947 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 19:06:26,948 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:06:26,949 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:26,952 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:26,952 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 19:06:26,952 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 19:06:26,952 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:26,997 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:06:26,997 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:06:26,999 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 19:06:26,999 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 19:06:26,999 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 19:06:27,000 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,003 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,003 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,003 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 19:06:27,003 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:06:27,045 [test_get_gripper_p.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:06:27,045 [test_get_gripper_p.py-->line:56]:请求结果断言成功，用例【正确获取夹爪P值】测试成功
INFO 2025-03-18 19:06:27,045 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:06:27,046 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,049 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,049 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,049 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 19:06:27,049 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:06:27,099 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 19:06:27,099 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:06:27,099 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 19:06:27,099 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-18 19:06:27,099 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 19:06:27,101 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,103 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,103 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,103 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 19:06:27,103 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,149 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,149 [test_get_gripper_torque.py-->line:54]:请求结果断言成功，用例【正确获取夹爪扭矩】测试成功
INFO 2025-03-18 19:06:27,149 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:06:27,150 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,151 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,151 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,151 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 19:06:27,152 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,197 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,197 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 19:06:27,197 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 19:06:27,199 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,200 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,201 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,201 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 19:06:27,201 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,247 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,247 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 19:06:27,247 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:06:27,249 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,251 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,251 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,252 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 19:06:27,252 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,297 [test_get_protection_current.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,297 [test_get_protection_current.py-->line:54]:请求结果断言成功，用例【正确获取夹爪夹持电流】测试成功
INFO 2025-03-18 19:06:27,297 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:06:27,299 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,301 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,301 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,301 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 19:06:27,301 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,347 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,347 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 19:06:27,347 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 19:06:27,349 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,350 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,351 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,351 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 19:06:27,351 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,397 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:06:27,397 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 19:06:27,398 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 19:06:27,398 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 19:06:27,398 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:06:27,399 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,401 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,401 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,401 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 19:06:27,401 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,445 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,445 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 19:06:27,445 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:06:27,446 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,448 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,449 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,449 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 19:06:27,449 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,497 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,497 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 19:06:27,497 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 19:06:27,499 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,501 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,501 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,501 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 19:06:27,501 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:06:27,545 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:06:27,545 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 19:06:27,545 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 19:06:27,547 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:27,549 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:27,549 [test_set_abs_gripper_angle.py-->line:37]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 19:06:27,550 [test_set_abs_gripper_angle.py-->line:39]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 19:06:27,550 [test_set_abs_gripper_angle.py-->line:40]:test_parameters:50
DEBUG 2025-03-18 19:06:28,078 [test_set_abs_gripper_angle.py-->line:46]:请求类型断言成功
ERROR 2025-03-18 19:06:28,078 [test_set_abs_gripper_angle.py-->line:54]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_abs_gripper_angle.py", line 52, in test_set_abs_gripper_angle
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 19:06:28,079 [test_set_abs_gripper_angle.py-->line:55]:期望数据：1
DEBUG 2025-03-18 19:06:28,079 [test_set_abs_gripper_angle.py-->line:56]:实际结果：0
INFO 2025-03-18 19:06:28,080 [test_set_abs_gripper_angle.py-->line:61]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 19:06:28,620 [test_set_abs_gripper_angle.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:28,622 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:28,622 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:06:28,622 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 19:06:28,622 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:06:28,662 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:06:28,663 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 19:06:28,663 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:06:28,664 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:28,666 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:28,666 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:06:28,666 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:06:28,666 [test_set_gripper_baud.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:06:28,712 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:06:28,712 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 19:06:28,712 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:06:28,713 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:28,715 [test_set_gripper_calibrate.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:28,715 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 19:06:28,715 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_calibration
DEBUG 2025-03-18 19:06:28,715 [test_set_gripper_calibrate.py-->line:38]:test_parameters:None
DEBUG 2025-03-18 19:06:33,764 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-18 19:06:33,764 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_calibrate.py", line 50, in test_set_gripper_calibrate
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 19:06:33,765 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-18 19:06:33,765 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-18 19:06:33,765 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【正确设置夹爪零位】测试完成《《《《《
INFO 2025-03-18 19:06:33,768 [test_set_gripper_calibrate.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:33,770 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:33,770 [test_set_gripper_cw.py-->line:35]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:06:33,770 [test_set_gripper_cw.py-->line:37]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:06:33,770 [test_set_gripper_cw.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:06:33,814 [test_set_gripper_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:33,814 [test_set_gripper_cw.py-->line:57]:请求结果断言成功，用例【正确设置夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:06:33,815 [test_set_gripper_cw.py-->line:59]:》》》》》用例【正确设置夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:06:33,863 [test_set_gripper_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:33,866 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:33,866 [test_set_gripper_cww.py-->line:35]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:06:33,866 [test_set_gripper_cww.py-->line:37]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:06:33,866 [test_set_gripper_cww.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:06:33,912 [test_set_gripper_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:33,912 [test_set_gripper_cww.py-->line:57]:请求结果断言成功，用例【正确设置夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:06:33,912 [test_set_gripper_cww.py-->line:59]:》》》》》用例【正确设置夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:06:33,963 [test_set_gripper_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:33,967 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:33,968 [test_set_gripper_d.py-->line:35]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 19:06:33,968 [test_set_gripper_d.py-->line:37]:test_api:set_gripper_D
DEBUG 2025-03-18 19:06:33,968 [test_set_gripper_d.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:06:34,012 [test_set_gripper_d.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,012 [test_set_gripper_d.py-->line:57]:请求结果断言成功，用例【正确设置夹爪D值】测试成功
INFO 2025-03-18 19:06:34,012 [test_set_gripper_d.py-->line:59]:》》》》》用例【正确设置夹爪D值】测试完成《《《《《
INFO 2025-03-18 19:06:34,063 [test_set_gripper_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,066 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,067 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,067 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:06:34,067 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-18 19:06:34,114 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:06:34,114 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(上使能)】测试成功
INFO 2025-03-18 19:06:34,114 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(上使能)】测试完成《《《《《
INFO 2025-03-18 19:06:34,115 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,115 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:06:34,115 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-18 19:06:34,162 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:06:34,162 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(下使能)】测试成功
INFO 2025-03-18 19:06:34,162 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(下使能)】测试完成《《《《《
INFO 2025-03-18 19:06:34,163 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,165 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,165 [test_set_gripper_i.py-->line:35]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,165 [test_set_gripper_i.py-->line:37]:test_api:set_gripper_I
DEBUG 2025-03-18 19:06:34,166 [test_set_gripper_i.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:06:34,214 [test_set_gripper_i.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,214 [test_set_gripper_i.py-->line:57]:请求结果断言成功，用例【正确设置夹爪I值】测试成功
INFO 2025-03-18 19:06:34,214 [test_set_gripper_i.py-->line:59]:》》》》》用例【正确设置夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:06:34,262 [test_set_gripper_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,265 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,265 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,265 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 19:06:34,266 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-18 19:06:34,362 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:06:34,362 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-18 19:06:34,362 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:06:34,462 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,465 [test_set_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,465 [test_set_gripper_p.py-->line:35]:》》》》》用例【正确设置夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,466 [test_set_gripper_p.py-->line:37]:test_api:set_gripper_P
DEBUG 2025-03-18 19:06:34,466 [test_set_gripper_p.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:06:34,514 [test_set_gripper_p.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,514 [test_set_gripper_p.py-->line:57]:请求结果断言成功，用例【正确设置夹爪P值】测试成功
INFO 2025-03-18 19:06:34,514 [test_set_gripper_p.py-->line:59]:》》》》》用例【正确设置夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:06:34,563 [test_set_gripper_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,565 [test_set_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,565 [test_set_gripper_torque.py-->line:35]:》》》》》用例【正确设置夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,565 [test_set_gripper_torque.py-->line:37]:test_api:set_gripper_torque
DEBUG 2025-03-18 19:06:34,565 [test_set_gripper_torque.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:06:34,614 [test_set_gripper_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,614 [test_set_gripper_torque.py-->line:57]:请求结果断言成功，用例【正确设置夹爪扭矩】测试成功
INFO 2025-03-18 19:06:34,614 [test_set_gripper_torque.py-->line:59]:》》》》》用例【正确设置夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:06:34,663 [test_set_gripper_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,665 [test_set_gripper_value.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,665 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(100度)】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,665 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:06:34,665 [test_set_gripper_value.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(100度)】测试成功
INFO 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(100度)】测试完成《《《《《
INFO 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(0度)】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:06:34,762 [test_set_gripper_value.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:06:34,862 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:34,862 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(0度)】测试成功
INFO 2025-03-18 19:06:34,862 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(0度)】测试完成《《《《《
INFO 2025-03-18 19:06:34,964 [test_set_gripper_value.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:34,966 [test_set_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:34,966 [test_set_open_angle.py-->line:34]:》》》》》用例【正确设置夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:06:34,966 [test_set_open_angle.py-->line:36]:test_api:set_open_angle
DEBUG 2025-03-18 19:06:34,966 [test_set_open_angle.py-->line:37]:test_parameters:100
DEBUG 2025-03-18 19:06:35,014 [test_set_open_angle.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:06:35,014 [test_set_open_angle.py-->line:56]:请求结果断言成功，用例【正确设置夹爪张开角度】测试成功
INFO 2025-03-18 19:06:35,014 [test_set_open_angle.py-->line:58]:》》》》》用例【正确设置夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:06:35,015 [test_set_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:35,017 [test_set_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:35,017 [test_set_protection_current.py-->line:35]:》》》》》用例【正确设置夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:06:35,018 [test_set_protection_current.py-->line:37]:test_api:set_protection_current
DEBUG 2025-03-18 19:06:35,018 [test_set_protection_current.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:06:35,063 [test_set_protection_current.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:35,063 [test_set_protection_current.py-->line:57]:请求结果断言成功，用例【正确设置夹爪夹持电流】测试成功
INFO 2025-03-18 19:06:35,063 [test_set_protection_current.py-->line:59]:》》》》》用例【正确设置夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:06:35,113 [test_set_protection_current.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:35,116 [test_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:35,116 [test_set_speed.py-->line:35]:》》》》》用例【正确设置夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:06:35,116 [test_set_speed.py-->line:37]:test_api:set_speed
DEBUG 2025-03-18 19:06:35,116 [test_set_speed.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:06:35,163 [test_set_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:35,163 [test_set_speed.py-->line:57]:请求结果断言成功，用例【正确设置夹爪速度】测试成功
INFO 2025-03-18 19:06:35,163 [test_set_speed.py-->line:59]:》》》》》用例【正确设置夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:06:35,213 [test_set_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:35,216 [test_set_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:35,216 [test_set_vir_pos.py-->line:35]:》》》》》用例【正确设置夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:06:35,216 [test_set_vir_pos.py-->line:37]:test_api:set_vir_pos
DEBUG 2025-03-18 19:06:35,216 [test_set_vir_pos.py-->line:38]:test_parameters:8
DEBUG 2025-03-18 19:06:35,262 [test_set_vir_pos.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:06:35,262 [test_set_vir_pos.py-->line:57]:请求结果断言成功，用例【正确设置夹爪虚位数值】测试成功
INFO 2025-03-18 19:06:35,262 [test_set_vir_pos.py-->line:59]:》》》》》用例【正确设置夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:06:35,312 [test_set_vir_pos.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:06:35,315 [test_stop.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:06:35,315 [test_stop.py-->line:34]:》》》》》用例【正确设置夹爪停止运动】开始测试《《《《《
DEBUG 2025-03-18 19:06:35,315 [test_stop.py-->line:36]:test_api:stop
DEBUG 2025-03-18 19:06:35,315 [test_stop.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:06:35,363 [test_stop.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:06:35,364 [test_stop.py-->line:56]:请求结果断言成功，用例【正确设置夹爪停止运动】测试成功
INFO 2025-03-18 19:06:35,364 [test_stop.py-->line:58]:》》》》》用例【正确设置夹爪停止运动】测试完成《《《《《
INFO 2025-03-18 19:06:35,364 [test_stop.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:25,821 [test_get_close_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:25,822 [test_get_close_angle.py-->line:32]:》》》》》用例【正确获取夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:08:25,822 [test_get_close_angle.py-->line:34]:test_api:get_close_angle
DEBUG 2025-03-18 19:08:25,822 [test_get_close_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:25,877 [test_get_close_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:25,877 [test_get_close_angle.py-->line:54]:请求结果断言成功，用例【正确获取夹爪关闭角度】测试成功
INFO 2025-03-18 19:08:25,877 [test_get_close_angle.py-->line:56]:》》》》》用例【正确获取夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:08:25,878 [test_get_close_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:25,881 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:25,881 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-18 19:08:25,881 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-18 19:08:25,881 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:25,926 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:25,926 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-18 19:08:25,926 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-18 19:08:25,928 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:25,930 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:25,930 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:08:25,930 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:08:25,930 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:25,976 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:25,976 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取夹爪波特率】测试成功
INFO 2025-03-18 19:08:25,976 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:08:25,977 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:25,978 [test_get_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:25,979 [test_get_gripper_cw.py-->line:32]:》》》》》用例【正确获取夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:08:25,979 [test_get_gripper_cw.py-->line:34]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:08:25,979 [test_get_gripper_cw.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,025 [test_get_gripper_cw.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,025 [test_get_gripper_cw.py-->line:54]:请求结果断言成功，用例【正确获取夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:08:26,025 [test_get_gripper_cw.py-->line:56]:》》》》》用例【正确获取夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:08:26,026 [test_get_gripper_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,030 [test_get_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,030 [test_get_gripper_cww.py-->line:32]:》》》》》用例【正确获取夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,030 [test_get_gripper_cww.py-->line:34]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:08:26,030 [test_get_gripper_cww.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,076 [test_get_gripper_cww.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,076 [test_get_gripper_cww.py-->line:54]:请求结果断言成功，用例【正确获取夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:08:26,076 [test_get_gripper_cww.py-->line:56]:》》》》》用例【正确获取夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:08:26,077 [test_get_gripper_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,080 [test_get_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,080 [test_get_gripper_i.py-->line:32]:》》》》》用例【正确读取夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,080 [test_get_gripper_i.py-->line:34]:test_api:get_gripper_I
DEBUG 2025-03-18 19:08:26,080 [test_get_gripper_i.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,126 [test_get_gripper_i.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,126 [test_get_gripper_i.py-->line:54]:请求结果断言成功，用例【正确读取夹爪I值】测试成功
INFO 2025-03-18 19:08:26,126 [test_get_gripper_i.py-->line:56]:》》》》》用例【正确读取夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:08:26,126 [test_get_gripper_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,128 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,128 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,128 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-18 19:08:26,128 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,176 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,176 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取夹爪ID号】测试成功
INFO 2025-03-18 19:08:26,176 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:08:26,177 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,179 [test_get_gripper_min_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,179 [test_get_gripper_min_pressure.py-->line:32]:》》》》》用例【正确获取夹爪最小启动力】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,179 [test_get_gripper_min_pressure.py-->line:34]:test_api:get_gripper_min_pressue
DEBUG 2025-03-18 19:08:26,179 [test_get_gripper_min_pressure.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,227 [test_get_gripper_min_pressure.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:08:26,228 [test_get_gripper_min_pressure.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_min_pressure.py", line 47, in test_get_gripper_min_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:08:26,229 [test_get_gripper_min_pressure.py-->line:50]:期望数据：0
DEBUG 2025-03-18 19:08:26,229 [test_get_gripper_min_pressure.py-->line:51]:实际结果：1
INFO 2025-03-18 19:08:26,229 [test_get_gripper_min_pressure.py-->line:56]:》》》》》用例【正确获取夹爪最小启动力】测试完成《《《《《
INFO 2025-03-18 19:08:26,230 [test_get_gripper_min_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,232 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,232 [test_get_gripper_p.py-->line:34]:》》》》》用例【正确获取夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,232 [test_get_gripper_p.py-->line:36]:test_api:get_gripper_P
DEBUG 2025-03-18 19:08:26,232 [test_get_gripper_p.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:08:26,274 [test_get_gripper_p.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:08:26,274 [test_get_gripper_p.py-->line:56]:请求结果断言成功，用例【正确获取夹爪P值】测试成功
INFO 2025-03-18 19:08:26,274 [test_get_gripper_p.py-->line:58]:》》》》》用例【正确获取夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:08:26,275 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,276 [test_get_gripper_status.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,277 [test_get_gripper_status.py-->line:34]:》》》》》用例【正确设置获取夹爪夹持状态】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,277 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-18 19:08:26,277 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:08:26,327 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-18 19:08:26,328 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_gripper_status.py", line 49, in test_set_gripper_status
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-18 19:08:26,328 [test_get_gripper_status.py-->line:52]:期望数据：0
DEBUG 2025-03-18 19:08:26,328 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-18 19:08:26,328 [test_get_gripper_status.py-->line:58]:》》》》》用例【正确设置获取夹爪夹持状态】测试完成《《《《《
INFO 2025-03-18 19:08:26,329 [test_get_gripper_status.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,330 [test_get_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,330 [test_get_gripper_torque.py-->line:32]:》》》》》用例【正确获取夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,331 [test_get_gripper_torque.py-->line:34]:test_api:get_gripper_torque
DEBUG 2025-03-18 19:08:26,331 [test_get_gripper_torque.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,376 [test_get_gripper_torque.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,376 [test_get_gripper_torque.py-->line:54]:请求结果断言成功，用例【正确获取夹爪扭矩】测试成功
INFO 2025-03-18 19:08:26,376 [test_get_gripper_torque.py-->line:56]:》》》》》用例【正确获取夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:08:26,377 [test_get_gripper_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,379 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,380 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,380 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-18 19:08:26,380 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,426 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,426 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-18 19:08:26,426 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-18 19:08:26,428 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,429 [test_get_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,429 [test_get_open_angle.py-->line:32]:》》》》》用例【获取夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,429 [test_get_open_angle.py-->line:34]:test_api:get_open_angle
DEBUG 2025-03-18 19:08:26,429 [test_get_open_angle.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,476 [test_get_open_angle.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,476 [test_get_open_angle.py-->line:54]:请求结果断言成功，用例【获取夹爪张开角度】测试成功
INFO 2025-03-18 19:08:26,476 [test_get_open_angle.py-->line:56]:》》》》》用例【获取夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:08:26,476 [test_get_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,478 [test_get_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,479 [test_get_protection_current.py-->line:32]:》》》》》用例【正确获取夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,479 [test_get_protection_current.py-->line:34]:test_api:get_protection_current
DEBUG 2025-03-18 19:08:26,479 [test_get_protection_current.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,526 [test_get_protection_current.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,526 [test_get_protection_current.py-->line:54]:请求结果断言成功，用例【正确获取夹爪夹持电流】测试成功
INFO 2025-03-18 19:08:26,526 [test_get_protection_current.py-->line:56]:》》》》》用例【正确获取夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:08:26,527 [test_get_protection_current.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,529 [test_get_queue_count.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,530 [test_get_queue_count.py-->line:32]:》》》》》用例【正确获取夹爪队列长度】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,530 [test_get_queue_count.py-->line:34]:test_api:get_queue_count
DEBUG 2025-03-18 19:08:26,530 [test_get_queue_count.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,576 [test_get_queue_count.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,576 [test_get_queue_count.py-->line:54]:请求结果断言成功，用例【正确获取夹爪队列长度】测试成功
INFO 2025-03-18 19:08:26,576 [test_get_queue_count.py-->line:56]:》》》》》用例【正确获取夹爪队列长度】测试完成《《《《《
INFO 2025-03-18 19:08:26,577 [test_get_queue_count.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,578 [test_get_to_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,579 [test_get_to_set_speed.py-->line:32]:》》》》》用例【正确获取夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,579 [test_get_to_set_speed.py-->line:34]:test_api:get_to_set_speed
DEBUG 2025-03-18 19:08:26,579 [test_get_to_set_speed.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,626 [test_get_to_set_speed.py-->line:41]:请求类型断言成功
ERROR 2025-03-18 19:08:26,626 [test_get_to_set_speed.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_get_to_set_speed.py", line 47, in test_get_to_set_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 0
DEBUG 2025-03-18 19:08:26,628 [test_get_to_set_speed.py-->line:50]:期望数据：100
DEBUG 2025-03-18 19:08:26,628 [test_get_to_set_speed.py-->line:51]:实际结果：0
INFO 2025-03-18 19:08:26,628 [test_get_to_set_speed.py-->line:56]:》》》》》用例【正确获取夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:08:26,629 [test_get_to_set_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,631 [test_get_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,631 [test_get_vir_pos.py-->line:32]:》》》》》用例【正确获取夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,631 [test_get_vir_pos.py-->line:34]:test_api:get_vir_pos
DEBUG 2025-03-18 19:08:26,631 [test_get_vir_pos.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,676 [test_get_vir_pos.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,676 [test_get_vir_pos.py-->line:54]:请求结果断言成功，用例【正确获取夹爪虚位数值】测试成功
INFO 2025-03-18 19:08:26,676 [test_get_vir_pos.py-->line:56]:》》》》》用例【正确获取夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:08:26,677 [test_get_vir_pos.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,680 [test_pause.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,680 [test_pause.py-->line:32]:》》》》》用例【正确设置夹爪暂停】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,680 [test_pause.py-->line:34]:test_api:pause
DEBUG 2025-03-18 19:08:26,680 [test_pause.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,727 [test_pause.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,727 [test_pause.py-->line:54]:请求结果断言成功，用例【正确设置夹爪暂停】测试成功
INFO 2025-03-18 19:08:26,728 [test_pause.py-->line:56]:》》》》》用例【正确设置夹爪暂停】测试完成《《《《《
INFO 2025-03-18 19:08:26,728 [test_pause.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,730 [test_resume.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,730 [test_resume.py-->line:32]:》》》》》用例【正确设置夹爪恢复运动】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,730 [test_resume.py-->line:34]:test_api:resume
DEBUG 2025-03-18 19:08:26,730 [test_resume.py-->line:35]:test_parameters:None
DEBUG 2025-03-18 19:08:26,777 [test_resume.py-->line:41]:请求类型断言成功
INFO 2025-03-18 19:08:26,777 [test_resume.py-->line:54]:请求结果断言成功，用例【正确设置夹爪恢复运动】测试成功
INFO 2025-03-18 19:08:26,777 [test_resume.py-->line:56]:》》》》》用例【正确设置夹爪恢复运动】测试完成《《《《《
INFO 2025-03-18 19:08:26,779 [test_resume.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:26,780 [test_set_abs_gripper_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:26,780 [test_set_abs_gripper_angle.py-->line:38]:》》》》》用例【正确设置夹爪绝对运动】开始测试《《《《《
DEBUG 2025-03-18 19:08:26,780 [test_set_abs_gripper_angle.py-->line:40]:test_api:set_abs_gripper_angle
DEBUG 2025-03-18 19:08:26,780 [test_set_abs_gripper_angle.py-->line:41]:test_parameters:50
DEBUG 2025-03-18 19:08:30,310 [test_set_abs_gripper_angle.py-->line:47]:请求类型断言成功
ERROR 2025-03-18 19:08:30,310 [test_set_abs_gripper_angle.py-->line:55]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_abs_gripper_angle.py", line 53, in test_set_abs_gripper_angle
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 19:08:30,311 [test_set_abs_gripper_angle.py-->line:56]:期望数据：1
DEBUG 2025-03-18 19:08:30,311 [test_set_abs_gripper_angle.py-->line:57]:实际结果：0
INFO 2025-03-18 19:08:30,311 [test_set_abs_gripper_angle.py-->line:62]:》》》》》用例【正确设置夹爪绝对运动】测试完成《《《《《
INFO 2025-03-18 19:08:34,275 [test_set_abs_gripper_angle.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:34,279 [test_set_close_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:34,279 [test_set_close_angle.py-->line:36]:》》》》》用例【正确设置夹爪关闭角度】开始测试《《《《《
DEBUG 2025-03-18 19:08:34,279 [test_set_close_angle.py-->line:38]:test_api:set_open_angle
DEBUG 2025-03-18 19:08:34,279 [test_set_close_angle.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:08:34,326 [test_set_close_angle.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:08:34,326 [test_set_close_angle.py-->line:58]:请求结果断言成功，用例【正确设置夹爪关闭角度】测试成功
INFO 2025-03-18 19:08:34,326 [test_set_close_angle.py-->line:60]:》》》》》用例【正确设置夹爪关闭角度】测试完成《《《《《
INFO 2025-03-18 19:08:34,327 [test_set_close_angle.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:34,329 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:34,330 [test_set_gripper_baud.py-->line:36]:》》》》》用例【正确设置夹爪波特率】开始测试《《《《《
DEBUG 2025-03-18 19:08:34,330 [test_set_gripper_baud.py-->line:38]:test_api:get_gripper_baud
DEBUG 2025-03-18 19:08:34,330 [test_set_gripper_baud.py-->line:39]:test_parameters:0
DEBUG 2025-03-18 19:08:34,376 [test_set_gripper_baud.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:08:34,377 [test_set_gripper_baud.py-->line:58]:请求结果断言成功，用例【正确设置夹爪波特率】测试成功
INFO 2025-03-18 19:08:34,377 [test_set_gripper_baud.py-->line:60]:》》》》》用例【正确设置夹爪波特率】测试完成《《《《《
INFO 2025-03-18 19:08:34,378 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:34,380 [test_set_gripper_calibrate.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:34,381 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【正确设置夹爪零位】开始测试《《《《《
DEBUG 2025-03-18 19:08:34,381 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_calibration
DEBUG 2025-03-18 19:08:34,381 [test_set_gripper_calibrate.py-->line:38]:test_parameters:None
DEBUG 2025-03-18 19:08:39,427 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-18 19:08:39,427 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_pro_gripper\test_set_gripper_calibrate.py", line 50, in test_set_gripper_calibrate
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-18 19:08:39,428 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-18 19:08:39,428 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-18 19:08:39,428 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【正确设置夹爪零位】测试完成《《《《《
INFO 2025-03-18 19:08:39,430 [test_set_gripper_calibrate.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,432 [test_set_gripper_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,432 [test_set_gripper_cw.py-->line:35]:》》》》》用例【正确设置夹爪顺时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,432 [test_set_gripper_cw.py-->line:37]:test_api:set_gripper_cw
DEBUG 2025-03-18 19:08:39,432 [test_set_gripper_cw.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:08:39,476 [test_set_gripper_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:39,476 [test_set_gripper_cw.py-->line:57]:请求结果断言成功，用例【正确设置夹爪顺时针可运行误差】测试成功
INFO 2025-03-18 19:08:39,476 [test_set_gripper_cw.py-->line:59]:》》》》》用例【正确设置夹爪顺时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:08:39,527 [test_set_gripper_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,530 [test_set_gripper_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,530 [test_set_gripper_cww.py-->line:35]:》》》》》用例【正确设置夹爪逆时针可运行误差】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,531 [test_set_gripper_cww.py-->line:37]:test_api:set_gripper_cww
DEBUG 2025-03-18 19:08:39,531 [test_set_gripper_cww.py-->line:38]:test_parameters:3
DEBUG 2025-03-18 19:08:39,576 [test_set_gripper_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:39,576 [test_set_gripper_cww.py-->line:57]:请求结果断言成功，用例【正确设置夹爪逆时针可运行误差】测试成功
INFO 2025-03-18 19:08:39,576 [test_set_gripper_cww.py-->line:59]:》》》》》用例【正确设置夹爪逆时针可运行误差】测试完成《《《《《
INFO 2025-03-18 19:08:39,623 [test_set_gripper_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,626 [test_set_gripper_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,626 [test_set_gripper_d.py-->line:35]:》》》》》用例【正确设置夹爪D值】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,626 [test_set_gripper_d.py-->line:37]:test_api:set_gripper_D
DEBUG 2025-03-18 19:08:39,626 [test_set_gripper_d.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:08:39,676 [test_set_gripper_d.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:39,676 [test_set_gripper_d.py-->line:57]:请求结果断言成功，用例【正确设置夹爪D值】测试成功
INFO 2025-03-18 19:08:39,677 [test_set_gripper_d.py-->line:59]:》》》》》用例【正确设置夹爪D值】测试完成《《《《《
INFO 2025-03-18 19:08:39,725 [test_set_gripper_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,727 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,727 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(上使能)】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,727 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:08:39,728 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-18 19:08:39,776 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:08:39,776 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(上使能)】测试成功
INFO 2025-03-18 19:08:39,776 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(上使能)】测试完成《《《《《
INFO 2025-03-18 19:08:39,777 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【正确设置夹爪使能状态(下使能)】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,777 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-18 19:08:39,777 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-18 19:08:39,824 [test_set_gripper_enabled.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:08:39,824 [test_set_gripper_enabled.py-->line:56]:请求结果断言成功，用例【正确设置夹爪使能状态(下使能)】测试成功
INFO 2025-03-18 19:08:39,824 [test_set_gripper_enabled.py-->line:58]:》》》》》用例【正确设置夹爪使能状态(下使能)】测试完成《《《《《
INFO 2025-03-18 19:08:39,825 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,827 [test_set_gripper_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,829 [test_set_gripper_i.py-->line:35]:》》》》》用例【正确设置夹爪I值】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,829 [test_set_gripper_i.py-->line:37]:test_api:set_gripper_I
DEBUG 2025-03-18 19:08:39,829 [test_set_gripper_i.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:08:39,876 [test_set_gripper_i.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:39,876 [test_set_gripper_i.py-->line:57]:请求结果断言成功，用例【正确设置夹爪I值】测试成功
INFO 2025-03-18 19:08:39,877 [test_set_gripper_i.py-->line:59]:》》》》》用例【正确设置夹爪I值】测试完成《《《《《
INFO 2025-03-18 19:08:39,927 [test_set_gripper_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:39,929 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:39,929 [test_set_gripper_id.py-->line:36]:》》》》》用例【正确设置夹爪ID号】开始测试《《《《《
DEBUG 2025-03-18 19:08:39,929 [test_set_gripper_id.py-->line:38]:test_api:set_gripper_id
DEBUG 2025-03-18 19:08:39,929 [test_set_gripper_id.py-->line:39]:test_parameters:10
DEBUG 2025-03-18 19:08:40,027 [test_set_gripper_id.py-->line:45]:请求类型断言成功
INFO 2025-03-18 19:08:40,027 [test_set_gripper_id.py-->line:59]:请求结果断言成功，用例【正确设置夹爪ID号】测试成功
INFO 2025-03-18 19:08:40,027 [test_set_gripper_id.py-->line:61]:》》》》》用例【正确设置夹爪ID号】测试完成《《《《《
INFO 2025-03-18 19:08:40,126 [test_set_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,130 [test_set_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,130 [test_set_gripper_p.py-->line:35]:》》》》》用例【正确设置夹爪P值】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,130 [test_set_gripper_p.py-->line:37]:test_api:set_gripper_P
DEBUG 2025-03-18 19:08:40,130 [test_set_gripper_p.py-->line:38]:test_parameters:20
DEBUG 2025-03-18 19:08:40,175 [test_set_gripper_p.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,175 [test_set_gripper_p.py-->line:57]:请求结果断言成功，用例【正确设置夹爪P值】测试成功
INFO 2025-03-18 19:08:40,175 [test_set_gripper_p.py-->line:59]:》》》》》用例【正确设置夹爪P值】测试完成《《《《《
INFO 2025-03-18 19:08:40,226 [test_set_gripper_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,229 [test_set_gripper_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,229 [test_set_gripper_torque.py-->line:35]:》》》》》用例【正确设置夹爪扭矩】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,229 [test_set_gripper_torque.py-->line:37]:test_api:set_gripper_torque
DEBUG 2025-03-18 19:08:40,229 [test_set_gripper_torque.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:08:40,276 [test_set_gripper_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,277 [test_set_gripper_torque.py-->line:57]:请求结果断言成功，用例【正确设置夹爪扭矩】测试成功
INFO 2025-03-18 19:08:40,277 [test_set_gripper_torque.py-->line:59]:》》》》》用例【正确设置夹爪扭矩】测试完成《《《《《
INFO 2025-03-18 19:08:40,324 [test_set_gripper_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,328 [test_set_gripper_value.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,328 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(100度)】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,328 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:08:40,328 [test_set_gripper_value.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:08:40,426 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,426 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(100度)】测试成功
INFO 2025-03-18 19:08:40,426 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(100度)】测试完成《《《《《
INFO 2025-03-18 19:08:40,426 [test_set_gripper_value.py-->line:35]:》》》》》用例【正确设置夹爪角度(0度)】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,426 [test_set_gripper_value.py-->line:37]:test_api:set_gripper_value
DEBUG 2025-03-18 19:08:40,427 [test_set_gripper_value.py-->line:38]:test_parameters:0
DEBUG 2025-03-18 19:08:40,526 [test_set_gripper_value.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,526 [test_set_gripper_value.py-->line:57]:请求结果断言成功，用例【正确设置夹爪角度(0度)】测试成功
INFO 2025-03-18 19:08:40,527 [test_set_gripper_value.py-->line:59]:》》》》》用例【正确设置夹爪角度(0度)】测试完成《《《《《
INFO 2025-03-18 19:08:40,626 [test_set_gripper_value.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,629 [test_set_open_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,629 [test_set_open_angle.py-->line:34]:》》》》》用例【正确设置夹爪张开角度】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,629 [test_set_open_angle.py-->line:36]:test_api:set_open_angle
DEBUG 2025-03-18 19:08:40,630 [test_set_open_angle.py-->line:37]:test_parameters:100
DEBUG 2025-03-18 19:08:40,676 [test_set_open_angle.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:08:40,676 [test_set_open_angle.py-->line:56]:请求结果断言成功，用例【正确设置夹爪张开角度】测试成功
INFO 2025-03-18 19:08:40,677 [test_set_open_angle.py-->line:58]:》》》》》用例【正确设置夹爪张开角度】测试完成《《《《《
INFO 2025-03-18 19:08:40,677 [test_set_open_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,680 [test_set_protection_current.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,680 [test_set_protection_current.py-->line:35]:》》》》》用例【正确设置夹爪夹持电流】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,680 [test_set_protection_current.py-->line:37]:test_api:set_protection_current
DEBUG 2025-03-18 19:08:40,680 [test_set_protection_current.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:08:40,726 [test_set_protection_current.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,727 [test_set_protection_current.py-->line:57]:请求结果断言成功，用例【正确设置夹爪夹持电流】测试成功
INFO 2025-03-18 19:08:40,727 [test_set_protection_current.py-->line:59]:》》》》》用例【正确设置夹爪夹持电流】测试完成《《《《《
INFO 2025-03-18 19:08:40,774 [test_set_protection_current.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,776 [test_set_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,777 [test_set_speed.py-->line:35]:》》》》》用例【正确设置夹爪速度】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,777 [test_set_speed.py-->line:37]:test_api:set_speed
DEBUG 2025-03-18 19:08:40,777 [test_set_speed.py-->line:38]:test_parameters:100
DEBUG 2025-03-18 19:08:40,826 [test_set_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,826 [test_set_speed.py-->line:57]:请求结果断言成功，用例【正确设置夹爪速度】测试成功
INFO 2025-03-18 19:08:40,826 [test_set_speed.py-->line:59]:》》》》》用例【正确设置夹爪速度】测试完成《《《《《
INFO 2025-03-18 19:08:40,877 [test_set_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,879 [test_set_vir_pos.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,879 [test_set_vir_pos.py-->line:35]:》》》》》用例【正确设置夹爪虚位数值】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,879 [test_set_vir_pos.py-->line:37]:test_api:set_vir_pos
DEBUG 2025-03-18 19:08:40,879 [test_set_vir_pos.py-->line:38]:test_parameters:8
DEBUG 2025-03-18 19:08:40,925 [test_set_vir_pos.py-->line:44]:请求类型断言成功
INFO 2025-03-18 19:08:40,925 [test_set_vir_pos.py-->line:57]:请求结果断言成功，用例【正确设置夹爪虚位数值】测试成功
INFO 2025-03-18 19:08:40,925 [test_set_vir_pos.py-->line:59]:》》》》》用例【正确设置夹爪虚位数值】测试完成《《《《《
INFO 2025-03-18 19:08:40,976 [test_set_vir_pos.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-18 19:08:40,978 [test_stop.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-18 19:08:40,978 [test_stop.py-->line:34]:》》》》》用例【正确设置夹爪停止运动】开始测试《《《《《
DEBUG 2025-03-18 19:08:40,978 [test_stop.py-->line:36]:test_api:stop
DEBUG 2025-03-18 19:08:40,978 [test_stop.py-->line:37]:test_parameters:None
DEBUG 2025-03-18 19:08:41,026 [test_stop.py-->line:43]:请求类型断言成功
INFO 2025-03-18 19:08:41,026 [test_stop.py-->line:56]:请求结果断言成功，用例【正确设置夹爪停止运动】测试成功
INFO 2025-03-18 19:08:41,026 [test_stop.py-->line:58]:》》》》》用例【正确设置夹爪停止运动】测试完成《《《《《
INFO 2025-03-18 19:08:41,028 [test_stop.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 13:49:08,703 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 13:49:08,705 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 13:49:08,705 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 13:49:08,705 [test_get_firmware_version.py-->line:35]:test_parameters:None
INFO 2025-03-20 13:49:13,798 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 14:00:26,060 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:00:26,062 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 14:00:26,062 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 14:00:26,062 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 14:00:26,116 [test_get_firmware_version.py-->line:41]:请求类型断言成功
ERROR 2025-03-20 14:00:26,125 [test_get_firmware_version.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_firmware_version.py", line 47, in test_get_firmware_version
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 11 != 10
DEBUG 2025-03-20 14:00:26,141 [test_get_firmware_version.py-->line:50]:期望数据：11
DEBUG 2025-03-20 14:00:26,141 [test_get_firmware_version.py-->line:51]:实际结果：10
INFO 2025-03-20 14:00:26,141 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-20 14:00:26,143 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 14:04:03,086 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:04:03,087 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-20 14:04:03,087 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-20 14:04:03,088 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 14:04:03,131 [test_get_modified_version.py-->line:41]:请求类型断言成功
ERROR 2025-03-20 14:04:03,133 [test_get_modified_version.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_modified_version.py", line 47, in test_get_modified_version
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 3
DEBUG 2025-03-20 14:04:03,135 [test_get_modified_version.py-->line:50]:期望数据：1
DEBUG 2025-03-20 14:04:03,135 [test_get_modified_version.py-->line:51]:实际结果：3
INFO 2025-03-20 14:04:03,135 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-20 14:04:03,137 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 14:11:16,997 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:11:16,999 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:11:17,000 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-20 14:11:17,000 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 14:11:17,050 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-20 14:11:17,050 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-20 14:11:17,050 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-20 14:11:17,051 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 14:14:18,691 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:14:18,694 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:14:18,694 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:14:18,694 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-20 14:14:18,747 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:15:45,963 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:15:45,965 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:15:45,965 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
INFO 2025-03-20 14:15:46,018 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:16:00,628 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:16:00,630 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:16:00,630 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:16:00,630 [test_set_gripper_id.py-->line:36]:test_parameters:10
INFO 2025-03-20 14:16:05,735 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:53:58,254 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:53:58,257 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:53:58,258 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:53:58,258 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 14:53:58,306 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 14:53:58,306 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 14:53:58,306 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 14:54:56,125 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:54:56,127 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:54:56,127 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:54:56,127 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 14:54:56,176 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 14:54:56,176 [test_set_gripper_id.py-->line:55]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 14:54:56,176 [test_set_gripper_id.py-->line:57]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 14:54:56,224 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:56:35,937 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:56:35,941 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:56:35,941 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:56:35,941 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 14:56:36,040 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 14:56:36,040 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 14:56:36,040 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 14:56:36,087 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:56:46,666 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:56:46,667 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:56:46,667 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:56:46,667 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 14:56:46,757 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 14:56:46,757 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 14:56:46,757 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 14:56:46,804 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 14:56:57,296 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 14:56:57,297 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 14:56:57,297 [test_set_gripper_id.py-->line:35]:test_api:get_gripper_id
DEBUG 2025-03-20 14:56:57,297 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 14:56:57,395 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 14:56:57,395 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 14:56:57,395 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 14:56:57,442 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:04:16,820 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:04:16,821 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:04:16,822 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:04:16,822 [test_set_gripper_id.py-->line:65]:test_parameters:10
ERROR 2025-03-20 15:04:16,869 [test_set_gripper_id.py-->line:71]:断言失败：用例正确设置固件ID号未触发异常
INFO 2025-03-20 15:04:16,869 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:04:16,874 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:04:16,874 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:04:16,874 [test_set_gripper_id.py-->line:65]:test_parameters:256
ERROR 2025-03-20 15:04:16,875 [test_set_gripper_id.py-->line:71]:断言失败：用例设置ID参数超限未触发异常
INFO 2025-03-20 15:04:16,875 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:04:16,879 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:04:16,879 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:04:16,879 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:04:16,980 [test_set_gripper_id.py-->line:36]:test_parameters:256
DEBUG 2025-03-20 15:04:17,027 [test_set_gripper_id.py-->line:44]:请求类型断言失败，实际类型为<class 'NoneType'>
ERROR 2025-03-20 15:04:17,027 [test_set_gripper_id.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_id.py", line 48, in test_set_gripper_id
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != None
DEBUG 2025-03-20 15:04:17,030 [test_set_gripper_id.py-->line:52]:期望数据：1
DEBUG 2025-03-20 15:04:17,030 [test_set_gripper_id.py-->line:53]:实际结果：None
INFO 2025-03-20 15:04:17,030 [test_set_gripper_id.py-->line:58]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:04:17,072 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:30:01,430 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:30:01,431 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:30:01,432 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:30:01,432 [test_set_gripper_id.py-->line:65]:test_parameters:10
ERROR 2025-03-20 15:30:01,479 [test_set_gripper_id.py-->line:71]:断言失败：用例正确设置固件ID号未触发异常
INFO 2025-03-20 15:30:01,479 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:30:01,483 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:30:01,572 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:30:01,572 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:30:01,572 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:30:01,572 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:30:01,572 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:30:01,573 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-20 15:30:01,619 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:32:51,669 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:32:51,671 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:32:51,671 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:32:51,671 [test_set_gripper_id.py-->line:65]:test_parameters:10
ERROR 2025-03-20 15:32:51,712 [test_set_gripper_id.py-->line:71]:断言失败：用例正确设置固件ID号未触发异常
INFO 2025-03-20 15:32:51,712 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:32:51,715 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:32:51,716 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:32:51,806 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-20 15:32:51,854 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:36:29,094 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:36:29,097 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:36:29,097 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:36:29,097 [test_set_gripper_id.py-->line:65]:test_parameters:10
ERROR 2025-03-20 15:36:29,150 [test_set_gripper_id.py-->line:71]:断言失败：用例正确设置固件ID号未触发异常
INFO 2025-03-20 15:36:29,150 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:36:29,157 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:36:29,157 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:36:29,157 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:36:29,157 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:36:29,157 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:36:29,158 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:36:29,158 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:36:29,158 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:36:29,258 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:36:29,259 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:36:29,259 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:36:29,259 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:36:29,259 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:36:29,260 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-20 15:36:29,305 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:37:18,529 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:37:18,529 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,529 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 15:37:18,530 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 15:37:18,580 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 15:37:18,580 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-20 15:37:18,580 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-20 15:37:18,581 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 15:37:18,582 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:37:18,582 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,582 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-20 15:37:18,582 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 15:37:18,627 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-20 15:37:18,627 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-20 15:37:18,627 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-20 15:37:18,628 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 15:37:18,629 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:37:18,630 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,630 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-20 15:37:18,630 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 15:37:18,674 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 15:37:18,674 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-20 15:37:18,674 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-20 15:37:18,676 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 15:37:18,677 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:37:18,677 [test_set_gripper_id.py-->line:62]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,677 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:37:18,677 [test_set_gripper_id.py-->line:65]:test_parameters:10
ERROR 2025-03-20 15:37:18,722 [test_set_gripper_id.py-->line:71]:断言失败：用例正确设置固件ID号未触发异常
INFO 2025-03-20 15:37:18,722 [test_set_gripper_id.py-->line:79]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:37:18,724 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,724 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:37:18,725 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:33]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:37:18,815 [test_set_gripper_id.py-->line:36]:test_parameters:256
INFO 2025-03-20 15:37:18,862 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:49:31,428 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:49:31,432 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:49:31,523 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:49:31,523 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:49:31,523 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:49:31,568 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:49:51,553 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:49:51,555 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:49:51,555 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:49:51,555 [test_set_gripper_id.py-->line:65]:test_parameters:254
ERROR 2025-03-20 15:49:51,596 [test_set_gripper_id.py-->line:71]:断言失败：用例设置ID参数超限未触发异常
INFO 2025-03-20 15:49:51,596 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:49:51,600 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:49:51,600 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:49:51,600 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:49:51,690 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:49:51,690 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:49:51,690 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:49:51,737 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 15:51:18,048 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 15:51:18,049 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 15:51:18,049 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:65]:test_parameters:256
INFO 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:77]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:62]:》》》》》用例【设置ID参数超限2】开始测试《《《《《
DEBUG 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:64]:test_api:set_gripper_id
DEBUG 2025-03-20 15:51:18,050 [test_set_gripper_id.py-->line:65]:test_parameters:21
ERROR 2025-03-20 15:51:18,100 [test_set_gripper_id.py-->line:71]:断言失败：用例设置ID参数超限2未触发异常
INFO 2025-03-20 15:51:18,100 [test_set_gripper_id.py-->line:79]:》》》》》用例【设置ID参数超限2】测试完成《《《《《
INFO 2025-03-20 15:51:18,104 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 15:51:18,104 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:51:18,104 [test_set_gripper_id.py-->line:36]:test_parameters:10
DEBUG 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:33]:》》》》》用例【正确设置固件ID号1】开始测试《《《《《
DEBUG 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:35]:test_api:set_gripper_id
DEBUG 2025-03-20 15:51:18,194 [test_set_gripper_id.py-->line:36]:test_parameters:15
DEBUG 2025-03-20 15:51:18,287 [test_set_gripper_id.py-->line:42]:请求类型断言成功
INFO 2025-03-20 15:51:18,287 [test_set_gripper_id.py-->line:56]:请求结果断言成功，用例【正确设置固件ID号1】测试成功
INFO 2025-03-20 15:51:18,287 [test_set_gripper_id.py-->line:58]:》》》》》用例【正确设置固件ID号1】测试完成《《《《《
INFO 2025-03-20 15:51:18,333 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 16:09:28,233 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:09:28,233 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 16:09:28,233 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 16:09:28,233 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 16:09:28,280 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 16:09:28,280 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-20 16:09:28,280 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-20 16:09:28,281 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 16:09:28,283 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:09:28,283 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-20 16:09:28,283 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-20 16:09:28,283 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 16:09:28,325 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-20 16:09:28,325 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-20 16:09:28,325 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-20 16:09:28,326 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 16:09:28,328 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:09:28,328 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-20 16:09:28,328 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-20 16:09:28,328 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 16:09:28,372 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 16:09:28,372 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-20 16:09:28,372 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-20 16:09:28,373 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 16:09:28,375 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 16:09:28,376 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 16:09:28,376 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-20 16:09:28,376 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-20 16:09:28,467 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-20 16:09:28,467 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 16:09:28,467 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 16:09:28,514 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 16:18:50,000 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:18:50,002 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-20 16:18:50,002 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-20 16:18:50,002 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 16:18:50,056 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-20 16:18:50,056 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-20 16:18:50,056 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-20 16:18:50,057 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 16:22:14,630 [test_set_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 16:22:14,632 [test_set_gripper_baud.py-->line:64]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:22:14,633 [test_set_gripper_baud.py-->line:66]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:22:14,633 [test_set_gripper_baud.py-->line:67]:test_parameters:6
INFO 2025-03-20 16:22:14,633 [test_set_gripper_baud.py-->line:79]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:22:14,633 [test_set_gripper_baud.py-->line:81]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:22:14,634 [test_set_gripper_baud.py-->line:64]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:22:14,634 [test_set_gripper_baud.py-->line:66]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:22:14,634 [test_set_gripper_baud.py-->line:67]:test_parameters:-1
INFO 2025-03-20 16:22:14,635 [test_set_gripper_baud.py-->line:79]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:22:14,635 [test_set_gripper_baud.py-->line:81]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:22:14,635 [test_set_gripper_baud.py-->line:34]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:22:14,636 [test_set_gripper_baud.py-->line:36]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:22:14,636 [test_set_gripper_baud.py-->line:37]:test_parameters:1
INFO 2025-03-20 16:35:33,285 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:35:33,287 [test_set_gripper_baud.py-->line:69]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:35:33,287 [test_set_gripper_baud.py-->line:71]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:35:33,287 [test_set_gripper_baud.py-->line:72]:test_parameters:6
INFO 2025-03-20 16:35:33,287 [test_set_gripper_baud.py-->line:84]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:35:33,287 [test_set_gripper_baud.py-->line:86]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:35:33,290 [test_set_gripper_baud.py-->line:69]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:35:33,290 [test_set_gripper_baud.py-->line:71]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:35:33,290 [test_set_gripper_baud.py-->line:72]:test_parameters:-1
INFO 2025-03-20 16:35:33,290 [test_set_gripper_baud.py-->line:84]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:35:33,290 [test_set_gripper_baud.py-->line:86]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:35:33,291 [test_set_gripper_baud.py-->line:39]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:35:33,291 [test_set_gripper_baud.py-->line:41]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:35:33,291 [test_set_gripper_baud.py-->line:42]:test_parameters:1
INFO 2025-03-20 16:44:19,116 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:44:19,118 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:44:19,118 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:44:19,118 [test_set_gripper_baud.py-->line:74]:test_parameters:6
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:74]:test_parameters:-1
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:44:19,119 [test_set_gripper_baud.py-->line:37]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:44:19,120 [test_set_gripper_baud.py-->line:39]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:44:19,120 [test_set_gripper_baud.py-->line:40]:test_parameters:1
DEBUG 2025-03-20 16:44:19,216 [test_set_gripper_baud.py-->line:50]:请求类型断言成功
INFO 2025-03-20 16:44:19,216 [test_set_gripper_baud.py-->line:64]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 16:44:19,216 [test_set_gripper_baud.py-->line:66]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 16:45:29,894 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:45:29,895 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:45:29,895 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:45:29,895 [test_set_gripper_baud.py-->line:74]:test_parameters:6
INFO 2025-03-20 16:45:29,895 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:45:29,895 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:74]:test_parameters:-1
INFO 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:37]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:39]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:45:29,896 [test_set_gripper_baud.py-->line:40]:test_parameters:1
INFO 2025-03-20 16:47:23,574 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:74]:test_parameters:6
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:74]:test_parameters:-1
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:37]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:39]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:23,576 [test_set_gripper_baud.py-->line:40]:test_parameters:1
INFO 2025-03-20 16:47:54,349 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:74]:test_parameters:6
INFO 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:54,352 [test_set_gripper_baud.py-->line:74]:test_parameters:-1
INFO 2025-03-20 16:47:54,353 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:47:54,353 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:47:54,353 [test_set_gripper_baud.py-->line:37]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:47:54,353 [test_set_gripper_baud.py-->line:39]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:47:54,353 [test_set_gripper_baud.py-->line:40]:test_parameters:1
DEBUG 2025-03-20 16:47:54,457 [test_set_gripper_baud.py-->line:50]:请求类型断言成功
INFO 2025-03-20 16:47:54,458 [test_set_gripper_baud.py-->line:64]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 16:47:54,458 [test_set_gripper_baud.py-->line:66]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 16:51:45,186 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:72]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:74]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:75]:test_parameters:6
INFO 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:87]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:89]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:72]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:74]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:75]:test_parameters:-1
INFO 2025-03-20 16:51:45,188 [test_set_gripper_baud.py-->line:87]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:51:45,189 [test_set_gripper_baud.py-->line:89]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:51:45,189 [test_set_gripper_baud.py-->line:38]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:51:45,189 [test_set_gripper_baud.py-->line:40]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:51:45,189 [test_set_gripper_baud.py-->line:41]:test_parameters:1
DEBUG 2025-03-20 16:51:45,279 [test_set_gripper_baud.py-->line:51]:请求类型断言成功
INFO 2025-03-20 16:51:45,279 [test_set_gripper_baud.py-->line:65]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 16:51:45,279 [test_set_gripper_baud.py-->line:67]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 16:51:45,325 [test_set_gripper_baud.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-20 16:52:32,887 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:72]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:74]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:75]:test_parameters:6
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:87]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:89]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:72]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:74]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:75]:test_parameters:-1
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:87]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:89]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:38]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:40]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:52:32,889 [test_set_gripper_baud.py-->line:41]:test_parameters:1
DEBUG 2025-03-20 16:52:32,985 [test_set_gripper_baud.py-->line:51]:请求类型断言成功
INFO 2025-03-20 16:52:32,985 [test_set_gripper_baud.py-->line:65]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 16:52:32,985 [test_set_gripper_baud.py-->line:67]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 16:52:33,033 [test_set_gripper_baud.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-20 16:57:12,019 [test_set_gripper_baud.py-->line:22]:初始化完成，接口测试开始
INFO 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:74]:test_parameters:6
INFO 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:71]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:73]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:57:12,020 [test_set_gripper_baud.py-->line:74]:test_parameters:-1
INFO 2025-03-20 16:57:12,021 [test_set_gripper_baud.py-->line:86]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 16:57:12,021 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 16:57:12,021 [test_set_gripper_baud.py-->line:37]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 16:57:12,021 [test_set_gripper_baud.py-->line:39]:test_api:set_gripper_baud
DEBUG 2025-03-20 16:57:12,021 [test_set_gripper_baud.py-->line:40]:test_parameters:1
DEBUG 2025-03-20 16:57:12,115 [test_set_gripper_baud.py-->line:50]:请求类型断言成功
INFO 2025-03-20 16:57:12,116 [test_set_gripper_baud.py-->line:64]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 16:57:12,116 [test_set_gripper_baud.py-->line:66]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:03:58,684 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:90]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:91]:test_parameters:6
INFO 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:103]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:105]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
ERROR 2025-03-20 17:03:58,686 [test_set_gripper_baud.py-->line:47]:清理过程中发生异常: unsupported operand type(s) for >>: 'list' and 'int'
INFO 2025-03-20 17:03:58,688 [test_set_gripper_baud.py-->line:88]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:03:58,688 [test_set_gripper_baud.py-->line:90]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:03:58,688 [test_set_gripper_baud.py-->line:91]:test_parameters:-1
INFO 2025-03-20 17:03:58,688 [test_set_gripper_baud.py-->line:103]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:03:58,688 [test_set_gripper_baud.py-->line:105]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
ERROR 2025-03-20 17:03:58,689 [test_set_gripper_baud.py-->line:47]:清理过程中发生异常: unsupported operand type(s) for >>: 'list' and 'int'
INFO 2025-03-20 17:03:58,689 [test_set_gripper_baud.py-->line:54]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:03:58,689 [test_set_gripper_baud.py-->line:56]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:03:58,689 [test_set_gripper_baud.py-->line:57]:test_parameters:1
ERROR 2025-03-20 17:04:03,741 [test_set_gripper_baud.py-->line:47]:清理过程中发生异常: unsupported operand type(s) for >>: 'list' and 'int'
INFO 2025-03-20 17:06:22,533 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:06:22,535 [test_set_gripper_baud.py-->line:75]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:06:22,535 [test_set_gripper_baud.py-->line:77]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:06:22,535 [test_set_gripper_baud.py-->line:78]:test_parameters:6
INFO 2025-03-20 17:06:22,535 [test_set_gripper_baud.py-->line:90]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:06:22,535 [test_set_gripper_baud.py-->line:92]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:06:22,537 [test_set_gripper_baud.py-->line:75]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:06:22,537 [test_set_gripper_baud.py-->line:77]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:06:22,538 [test_set_gripper_baud.py-->line:78]:test_parameters:-1
INFO 2025-03-20 17:06:22,538 [test_set_gripper_baud.py-->line:90]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:06:22,538 [test_set_gripper_baud.py-->line:92]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:06:22,538 [test_set_gripper_baud.py-->line:41]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:06:22,538 [test_set_gripper_baud.py-->line:43]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:06:22,539 [test_set_gripper_baud.py-->line:44]:test_parameters:1
INFO 2025-03-20 17:07:44,084 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:07:44,085 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:07:44,085 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:07:44,085 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:07:44,085 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:07:44,085 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:07:44,087 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:07:44,088 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:07:44,088 [test_set_gripper_baud.py-->line:43]:test_parameters:1
INFO 2025-03-20 17:07:49,149 [test_set_gripper_baud.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-20 17:09:05,613 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:09:05,615 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:05,615 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:05,615 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:09:05,615 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:05,615 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:05,616 [test_set_gripper_baud.py-->line:43]:test_parameters:1
INFO 2025-03-20 17:09:21,465 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:21,467 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:21,468 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-20 17:09:21,563 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-20 17:09:21,563 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:09:47,133 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:09:47,135 [test_set_gripper_baud.py-->line:43]:test_parameters:1
INFO 2025-03-20 17:10:04,167 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:04,169 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:04,170 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-20 17:10:04,259 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-20 17:10:04,259 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 17:10:04,260 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:10:04,306 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:14,174 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:14,176 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-20 17:10:14,264 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-20 17:10:14,264 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 17:10:14,264 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:10:14,311 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:33,818 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:33,818 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 17:10:33,818 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 17:10:33,818 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:10:33,866 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:10:33,866 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-20 17:10:33,866 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-20 17:10:33,867 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:33,868 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:33,869 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-20 17:10:33,869 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-20 17:10:33,869 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:10:33,912 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:10:33,913 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-20 17:10:33,913 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-20 17:10:33,913 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:33,915 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:33,915 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:10:33,916 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-20 17:10:33,916 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:10:33,958 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:10:33,958 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-20 17:10:33,958 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-20 17:10:33,959 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:33,961 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:33,961 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-20 17:10:33,961 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-20 17:10:33,961 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:10:34,006 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:10:34,006 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-20 17:10:34,006 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-20 17:10:34,007 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:34,008 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:34,008 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,010 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:10:34,011 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-20 17:10:34,098 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-20 17:10:34,098 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 17:10:34,098 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:10:34,145 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-20 17:10:34,146 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-20 17:10:34,147 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-20 17:10:34,238 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-20 17:10:34,238 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 17:10:34,238 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 17:10:34,285 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 17:21:14,627 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:21:14,629 [test_set_gripper_enabled.py-->line:62]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:21:14,629 [test_set_gripper_enabled.py-->line:64]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:14,629 [test_set_gripper_enabled.py-->line:65]:test_parameters:2
INFO 2025-03-20 17:21:14,630 [test_set_gripper_enabled.py-->line:77]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-20 17:21:14,630 [test_set_gripper_enabled.py-->line:79]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-20 17:21:14,630 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-20 17:21:14,630 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:14,630 [test_set_gripper_enabled.py-->line:37]:test_parameters:1
DEBUG 2025-03-20 17:21:14,676 [test_set_gripper_enabled.py-->line:42]:请求类型断言成功
INFO 2025-03-20 17:21:14,676 [test_set_gripper_enabled.py-->line:55]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-20 17:21:14,676 [test_set_gripper_enabled.py-->line:57]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-20 17:21:14,677 [test_set_gripper_enabled.py-->line:34]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-20 17:21:14,677 [test_set_gripper_enabled.py-->line:36]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:14,677 [test_set_gripper_enabled.py-->line:37]:test_parameters:0
DEBUG 2025-03-20 17:21:14,723 [test_set_gripper_enabled.py-->line:42]:请求类型断言成功
INFO 2025-03-20 17:21:14,723 [test_set_gripper_enabled.py-->line:55]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-20 17:21:14,723 [test_set_gripper_enabled.py-->line:57]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-20 17:21:44,950 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:21:44,952 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:44,953 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:21:45,003 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-20 17:21:45,049 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:21:45,049 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-20 17:21:45,049 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-20 17:21:45,051 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:43:34,230 [test_set_gripper_joint_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:43:34,232 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:43:34,232 [test_set_gripper_joint_angle.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-20 17:43:34,232 [test_set_gripper_joint_angle.py-->line:68]:test_parameters:256
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:80]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:82]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:68]:test_parameters:-1
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:80]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:82]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:43:34,233 [test_set_gripper_joint_angle.py-->line:36]:test_api:set_gripper_id
INFO 2025-03-20 17:43:34,290 [test_set_gripper_joint_angle.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 17:44:39,323 [test_set_gripper_joint_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:68]:test_parameters:256
INFO 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:80]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:82]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:67]:test_api:set_gripper_id
DEBUG 2025-03-20 17:44:39,325 [test_set_gripper_joint_angle.py-->line:68]:test_parameters:-1
INFO 2025-03-20 17:44:39,327 [test_set_gripper_joint_angle.py-->line:80]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:44:39,327 [test_set_gripper_joint_angle.py-->line:82]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:44:39,327 [test_set_gripper_joint_angle.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:44:39,327 [test_set_gripper_joint_angle.py-->line:36]:test_api:set_gripper_id
INFO 2025-03-20 17:44:39,385 [test_set_gripper_joint_angle.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 17:48:42,873 [test_set_gripper_joint_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:48:42,876 [test_set_gripper_joint_angle.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,876 [test_set_gripper_joint_angle.py-->line:66]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:48:42,878 [test_set_gripper_joint_angle.py-->line:64]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,878 [test_set_gripper_joint_angle.py-->line:66]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:48:42,878 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:36]:test_joint:1
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:36]:test_joint:2
DEBUG 2025-03-20 17:48:42,879 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:36]:test_joint:3
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:36]:test_joint:4
DEBUG 2025-03-20 17:48:42,880 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,886 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,886 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,886 [test_set_gripper_joint_angle.py-->line:36]:test_joint:5
DEBUG 2025-03-20 17:48:42,886 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,887 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:48:42,887 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:48:42,887 [test_set_gripper_joint_angle.py-->line:36]:test_joint:6
DEBUG 2025-03-20 17:48:42,887 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:48:42,888 [test_set_gripper_joint_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:49:40,784 [test_set_gripper_joint_angle.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:49:40,786 [test_set_gripper_joint_angle.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,786 [test_set_gripper_joint_angle.py-->line:66]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:64]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:66]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:36]:test_joint:1
DEBUG 2025-03-20 17:49:40,789 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:40,835 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,835 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:40,836 [test_set_gripper_joint_angle.py-->line:36]:test_joint:2
DEBUG 2025-03-20 17:49:40,836 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:40,882 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,882 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:40,882 [test_set_gripper_joint_angle.py-->line:36]:test_joint:3
DEBUG 2025-03-20 17:49:40,883 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:40,929 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,930 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:40,930 [test_set_gripper_joint_angle.py-->line:36]:test_joint:4
DEBUG 2025-03-20 17:49:40,930 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:40,976 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:40,976 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:40,976 [test_set_gripper_joint_angle.py-->line:36]:test_joint:5
DEBUG 2025-03-20 17:49:40,976 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:41,023 [test_set_gripper_joint_angle.py-->line:33]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:49:41,023 [test_set_gripper_joint_angle.py-->line:35]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:49:41,024 [test_set_gripper_joint_angle.py-->line:36]:test_joint:6
DEBUG 2025-03-20 17:49:41,024 [test_set_gripper_joint_angle.py-->line:37]:test_angle:100
INFO 2025-03-20 17:49:41,071 [test_set_gripper_joint_angle.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:52:36,143 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:52:36,144 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:52:36,145 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:52:36,147 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:52:36,147 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:52:36,148 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:36,148 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:36,148 [test_set_gripper_joint_angle.py-->line:42]:test_joint:1
DEBUG 2025-03-20 17:52:36,148 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:38,256 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:38,258 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 99 != 100
DEBUG 2025-03-20 17:52:38,260 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:38,260 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:38,261 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:52:38,262 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:38,262 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:38,262 [test_set_gripper_joint_angle.py-->line:42]:test_joint:2
DEBUG 2025-03-20 17:52:38,262 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:40,363 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:40,363 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 95 != 100
DEBUG 2025-03-20 17:52:40,364 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:40,364 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:40,364 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:52:40,366 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:40,366 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:40,366 [test_set_gripper_joint_angle.py-->line:42]:test_joint:3
DEBUG 2025-03-20 17:52:40,366 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:42,473 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:42,473 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 97 != 100
DEBUG 2025-03-20 17:52:42,474 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:42,474 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:42,474 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:52:42,475 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:42,475 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:42,475 [test_set_gripper_joint_angle.py-->line:42]:test_joint:4
DEBUG 2025-03-20 17:52:42,475 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:44,580 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:44,580 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 90 != 100
DEBUG 2025-03-20 17:52:44,581 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:44,581 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:44,581 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:52:44,583 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:44,583 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:44,583 [test_set_gripper_joint_angle.py-->line:42]:test_joint:5
DEBUG 2025-03-20 17:52:44,583 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:46,685 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:46,685 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 89 != 100
DEBUG 2025-03-20 17:52:46,685 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:46,685 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:46,685 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:52:46,688 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:52:46,688 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:52:46,688 [test_set_gripper_joint_angle.py-->line:42]:test_joint:6
DEBUG 2025-03-20 17:52:46,688 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:52:48,791 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:52:48,792 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 62 != 100
DEBUG 2025-03-20 17:52:48,792 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:52:48,792 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:52:48,792 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:07,111 [test_set_gripper_joint_angle.py-->line:34]:环境清理完成，接口测试结束
INFO 2025-03-20 17:53:18,373 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:53:18,375 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:53:18,375 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
INFO 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:42]:test_joint:1
DEBUG 2025-03-20 17:53:18,377 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:20,487 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:20,487 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 64 != 100
DEBUG 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:20,488 [test_set_gripper_joint_angle.py-->line:42]:test_joint:2
DEBUG 2025-03-20 17:53:20,489 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:22,580 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:22,580 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 95 != 100
DEBUG 2025-03-20 17:53:22,581 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:22,581 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:22,581 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:22,583 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:22,583 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:22,583 [test_set_gripper_joint_angle.py-->line:42]:test_joint:3
DEBUG 2025-03-20 17:53:22,583 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:24,673 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:24,673 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 96 != 100
DEBUG 2025-03-20 17:53:24,673 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:24,673 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:24,674 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:24,674 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:24,674 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:24,674 [test_set_gripper_joint_angle.py-->line:42]:test_joint:4
DEBUG 2025-03-20 17:53:24,675 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:26,774 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:26,774 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 7 != 100
DEBUG 2025-03-20 17:53:26,775 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:26,775 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:26,775 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:26,778 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:26,778 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:26,778 [test_set_gripper_joint_angle.py-->line:42]:test_joint:5
DEBUG 2025-03-20 17:53:26,778 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:28,879 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:28,879 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 91 != 100
DEBUG 2025-03-20 17:53:28,879 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:28,879 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:28,879 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:28,881 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:53:28,881 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:53:28,881 [test_set_gripper_joint_angle.py-->line:42]:test_joint:6
DEBUG 2025-03-20 17:53:28,881 [test_set_gripper_joint_angle.py-->line:43]:test_angle:100
DEBUG 2025-03-20 17:53:30,983 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:53:30,983 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 89 != 100
DEBUG 2025-03-20 17:53:30,984 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:53:30,984 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:53:30,984 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:53:49,321 [test_set_gripper_joint_angle.py-->line:34]:环境清理完成，接口测试结束
INFO 2025-03-20 17:54:56,058 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:74]:test_joint:7
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:75]:test_angle:100
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:87]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:89]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:71]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:73]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:74]:test_joint:1
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:75]:test_angle:110
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:87]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:89]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:54:56,060 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:54:56,061 [test_set_gripper_joint_angle.py-->line:42]:test_joint:1
DEBUG 2025-03-20 17:54:56,061 [test_set_gripper_joint_angle.py-->line:43]:test_angle:20
DEBUG 2025-03-20 17:54:58,167 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:54:58,168 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:54:58,170 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:54:58,170 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:54:58,170 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:54:58,171 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:54:58,171 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:54:58,171 [test_set_gripper_joint_angle.py-->line:42]:test_joint:2
DEBUG 2025-03-20 17:54:58,171 [test_set_gripper_joint_angle.py-->line:43]:test_angle:10
DEBUG 2025-03-20 17:55:00,269 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:55:00,269 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-20 17:55:00,270 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:55:00,270 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:55:00,270 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:55:00,271 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:55:00,271 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:55:00,272 [test_set_gripper_joint_angle.py-->line:42]:test_joint:3
DEBUG 2025-03-20 17:55:00,272 [test_set_gripper_joint_angle.py-->line:43]:test_angle:20
DEBUG 2025-03-20 17:55:02,371 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:55:02,371 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:55:02,371 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:55:02,371 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:55:02,372 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:55:02,372 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:55:02,372 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:55:02,372 [test_set_gripper_joint_angle.py-->line:42]:test_joint:4
DEBUG 2025-03-20 17:55:02,372 [test_set_gripper_joint_angle.py-->line:43]:test_angle:20
DEBUG 2025-03-20 17:55:04,472 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:55:04,472 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:55:04,473 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:55:04,473 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:55:04,473 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:55:04,474 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:55:04,474 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:55:04,474 [test_set_gripper_joint_angle.py-->line:42]:test_joint:5
DEBUG 2025-03-20 17:55:04,474 [test_set_gripper_joint_angle.py-->line:43]:test_angle:20
DEBUG 2025-03-20 17:55:06,574 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:55:06,574 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-20 17:55:06,574 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:55:06,575 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:55:06,575 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:55:06,576 [test_set_gripper_joint_angle.py-->line:39]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:55:06,577 [test_set_gripper_joint_angle.py-->line:41]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:55:06,577 [test_set_gripper_joint_angle.py-->line:42]:test_joint:6
DEBUG 2025-03-20 17:55:06,577 [test_set_gripper_joint_angle.py-->line:43]:test_angle:20
DEBUG 2025-03-20 17:55:08,677 [test_set_gripper_joint_angle.py-->line:50]:请求类型断言成功
ERROR 2025-03-20 17:55:08,677 [test_set_gripper_joint_angle.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 57, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-20 17:55:08,678 [test_set_gripper_joint_angle.py-->line:60]:期望数据：1
DEBUG 2025-03-20 17:55:08,678 [test_set_gripper_joint_angle.py-->line:61]:实际结果：1
INFO 2025-03-20 17:55:08,678 [test_set_gripper_joint_angle.py-->line:66]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:55:27,000 [test_set_gripper_joint_angle.py-->line:34]:环境清理完成，接口测试结束
INFO 2025-03-20 17:56:17,407 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 17:56:17,409 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-20 17:56:17,410 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-20 17:56:17,411 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:17,411 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:17,411 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-20 17:56:17,411 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:56:19,503 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:19,506 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:56:19,507 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:19,507 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:19,508 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:19,509 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:19,509 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:19,509 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-20 17:56:19,509 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-20 17:56:21,609 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:21,609 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-20 17:56:21,610 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:21,610 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:21,610 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:21,611 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:21,611 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:21,611 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-20 17:56:21,611 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:56:23,715 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:23,715 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:56:23,715 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:23,715 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:23,715 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:23,717 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:23,717 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:23,717 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-20 17:56:23,717 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:56:25,820 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:25,820 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:56:25,821 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:25,821 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:25,821 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:25,823 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:25,823 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:25,823 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-20 17:56:25,823 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:56:27,918 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:27,918 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-20 17:56:27,918 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:27,919 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:27,919 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:27,920 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:56:27,920 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:56:27,920 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-20 17:56:27,920 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:56:30,018 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:56:30,018 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-20 17:56:30,019 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:56:30,019 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:56:30,019 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:56:42,353 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,101 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,101 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,101 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-20 17:57:54,101 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:57:54,144 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,144 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-20 17:57:54,144 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-20 17:57:54,145 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,146 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,146 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,146 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-20 17:57:54,146 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:57:54,191 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,191 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-20 17:57:54,191 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-20 17:57:54,192 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,193 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,195 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,195 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-20 17:57:54,195 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:57:54,238 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,238 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-20 17:57:54,238 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-20 17:57:54,239 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,240 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,240 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,240 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-20 17:57:54,240 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-20 17:57:54,284 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,284 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-20 17:57:54,284 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-20 17:57:54,285 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,286 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-20 17:57:54,287 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-20 17:57:54,378 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-20 17:57:54,378 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-20 17:57:54,378 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-20 17:57:54,424 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:57:54,426 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-20 17:57:54,471 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-20 17:57:54,516 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-20 17:57:54,517 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-20 17:57:54,517 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-20 17:57:54,517 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,520 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,520 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,521 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-20 17:57:54,522 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-20 17:57:54,610 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-20 17:57:54,610 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-20 17:57:54,610 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-20 17:57:54,657 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-20 17:57:54,659 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:57:56,762 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:57:56,762 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:57:56,764 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:57:56,764 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:57:56,764 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:57:56,765 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:57:56,765 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:57:56,765 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-20 17:57:56,765 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-20 17:57:58,865 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:57:58,865 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-20 17:57:58,865 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:57:58,865 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:57:58,865 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:57:58,866 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:57:58,866 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:57:58,866 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-20 17:57:58,866 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:58:00,964 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:58:00,964 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:58:00,965 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:58:00,965 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:58:00,965 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:58:00,965 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:58:00,965 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:58:00,966 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-20 17:58:00,966 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:58:03,064 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:58:03,064 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-20 17:58:03,065 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:58:03,065 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:58:03,065 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:58:03,065 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:58:03,066 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:58:03,066 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-20 17:58:03,066 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:58:05,169 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:58:05,169 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-20 17:58:05,169 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:58:05,169 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:58:05,169 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:58:05,170 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-20 17:58:05,170 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-20 17:58:05,170 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-20 17:58:05,170 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-20 17:58:07,272 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-20 17:58:07,272 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-20 17:58:07,273 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-20 17:58:07,273 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-20 17:58:07,273 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-20 17:58:19,599 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-20 18:06:06,915 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 18:06:06,916 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:06:06,916 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:06,916 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-20 18:06:06,916 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:06:06,916 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:06,918 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-20 18:06:12,235 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-20 18:06:12,236 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-20 18:06:12,239 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-20 18:06:12,239 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-20 18:06:12,239 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-20 18:06:12,240 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:12,240 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:12,240 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
INFO 2025-03-20 18:06:17,297 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:17,297 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:17,297 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-20 18:06:20,800 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:06:20,800 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-20 18:06:20,800 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-20 18:06:20,800 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:20,801 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:20,801 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-20 18:06:25,954 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:06:25,954 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-20 18:06:25,954 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-20 18:06:25,955 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:25,955 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:25,955 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-20 18:06:29,011 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:06:29,011 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-20 18:06:29,011 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-20 18:06:29,012 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:06:29,012 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:06:29,012 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-20 18:06:32,072 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:06:32,072 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-20 18:06:32,072 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-20 18:06:32,074 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-20 18:07:05,695 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 18:07:05,695 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:07:05,695 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:05,695 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:05,697 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-20 18:07:12,061 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-20 18:07:12,062 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-20 18:07:12,063 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-20 18:07:12,064 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-20 18:07:12,064 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-20 18:07:12,065 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:12,065 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:12,065 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
INFO 2025-03-20 18:07:17,120 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:17,120 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:17,120 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-20 18:07:21,604 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:07:21,604 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-20 18:07:21,604 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-20 18:07:21,605 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:21,605 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:21,605 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-20 18:07:26,777 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:07:26,777 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-20 18:07:26,777 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-20 18:07:26,778 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:26,778 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:26,778 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-20 18:07:30,836 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:07:30,836 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-20 18:07:30,837 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-20 18:07:30,837 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:07:30,837 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:07:30,837 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-20 18:07:34,887 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:07:34,887 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-20 18:07:34,887 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-20 18:07:34,888 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-20 18:08:26,273 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:26,275 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-20 18:08:26,276 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-20 18:08:26,276 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-20 18:08:26,276 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:26,276 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:26,276 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-20 18:08:32,635 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-20 18:08:32,637 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-20 18:08:32,639 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-20 18:08:32,639 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-20 18:08:32,639 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-20 18:08:32,641 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:32,641 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:32,641 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
INFO 2025-03-20 18:08:37,685 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:37,686 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:37,686 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-20 18:08:42,182 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:08:42,182 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-20 18:08:42,182 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-20 18:08:42,183 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:42,183 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:42,183 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-20 18:08:47,338 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:08:47,338 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-20 18:08:47,338 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-20 18:08:47,339 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:47,339 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:47,340 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-20 18:08:51,391 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:08:51,391 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-20 18:08:51,391 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-20 18:08:51,392 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-20 18:08:51,392 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-20 18:08:51,392 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-20 18:08:55,453 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-20 18:08:55,453 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-20 18:08:55,453 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-20 18:08:55,454 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:39:50,519 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:39:50,523 [test_get_gripper_status.py-->line:34]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:50,523 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:50,523 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-21 10:39:50,849 [test_get_gripper_status.py-->line:43]:请求类型断言成功
INFO 2025-03-21 10:39:50,849 [test_get_gripper_status.py-->line:56]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:39:50,849 [test_get_gripper_status.py-->line:58]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:39:50,850 [test_get_gripper_status.py-->line:34]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:50,850 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:50,850 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-21 10:39:50,942 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-21 10:39:50,947 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 49, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 10:39:50,986 [test_get_gripper_status.py-->line:52]:期望数据：1
DEBUG 2025-03-21 10:39:50,986 [test_get_gripper_status.py-->line:53]:实际结果：0
INFO 2025-03-21 10:39:50,986 [test_get_gripper_status.py-->line:58]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:39:51,006 [test_get_gripper_status.py-->line:34]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:51,006 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:51,006 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-21 10:39:51,300 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-21 10:39:51,300 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 49, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:39:51,301 [test_get_gripper_status.py-->line:52]:期望数据：2
DEBUG 2025-03-21 10:39:51,301 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-21 10:39:51,301 [test_get_gripper_status.py-->line:58]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:39:51,302 [test_get_gripper_status.py-->line:34]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:51,303 [test_get_gripper_status.py-->line:36]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:51,303 [test_get_gripper_status.py-->line:37]:test_parameters:None
DEBUG 2025-03-21 10:39:51,395 [test_get_gripper_status.py-->line:43]:请求类型断言成功
ERROR 2025-03-21 10:39:51,395 [test_get_gripper_status.py-->line:51]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 49, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:39:51,395 [test_get_gripper_status.py-->line:52]:期望数据：3
DEBUG 2025-03-21 10:39:51,395 [test_get_gripper_status.py-->line:53]:实际结果：1
INFO 2025-03-21 10:39:51,395 [test_get_gripper_status.py-->line:58]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:39:51,396 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:51,396 [test_get_gripper_status.py-->line:64]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:51,396 [test_get_gripper_status.py-->line:65]:test_parameters:None
DEBUG 2025-03-21 10:39:56,443 [test_get_gripper_status.py-->line:72]:请求类型断言成功
ERROR 2025-03-21 10:39:56,443 [test_get_gripper_status.py-->line:80]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 78, in test_get_gripper_status_1
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:39:56,443 [test_get_gripper_status.py-->line:81]:期望数据：0
DEBUG 2025-03-21 10:39:56,444 [test_get_gripper_status.py-->line:82]:实际结果：1
INFO 2025-03-21 10:39:56,444 [test_get_gripper_status.py-->line:87]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:39:56,445 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:39:56,445 [test_get_gripper_status.py-->line:64]:test_api:get_gripper_status
DEBUG 2025-03-21 10:39:56,445 [test_get_gripper_status.py-->line:65]:test_parameters:None
DEBUG 2025-03-21 10:40:01,497 [test_get_gripper_status.py-->line:72]:请求类型断言成功
INFO 2025-03-21 10:40:01,497 [test_get_gripper_status.py-->line:85]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:40:01,497 [test_get_gripper_status.py-->line:87]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:01,497 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:01,499 [test_get_gripper_status.py-->line:64]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:01,499 [test_get_gripper_status.py-->line:65]:test_parameters:None
DEBUG 2025-03-21 10:40:06,560 [test_get_gripper_status.py-->line:72]:请求类型断言成功
ERROR 2025-03-21 10:40:06,560 [test_get_gripper_status.py-->line:80]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 78, in test_get_gripper_status_1
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:40:06,561 [test_get_gripper_status.py-->line:81]:期望数据：2
DEBUG 2025-03-21 10:40:06,561 [test_get_gripper_status.py-->line:82]:实际结果：1
INFO 2025-03-21 10:40:06,561 [test_get_gripper_status.py-->line:87]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:06,562 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:06,562 [test_get_gripper_status.py-->line:64]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:06,562 [test_get_gripper_status.py-->line:65]:test_parameters:None
DEBUG 2025-03-21 10:40:11,621 [test_get_gripper_status.py-->line:72]:请求类型断言成功
ERROR 2025-03-21 10:40:11,621 [test_get_gripper_status.py-->line:80]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 78, in test_get_gripper_status_1
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:40:11,621 [test_get_gripper_status.py-->line:81]:期望数据：3
DEBUG 2025-03-21 10:40:11,621 [test_get_gripper_status.py-->line:82]:实际结果：1
INFO 2025-03-21 10:40:11,622 [test_get_gripper_status.py-->line:87]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:11,623 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:11,623 [test_get_gripper_status.py-->line:94]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:11,623 [test_get_gripper_status.py-->line:95]:test_parameters:None
DEBUG 2025-03-21 10:40:39,153 [test_get_gripper_status.py-->line:103]:请求类型断言成功
ERROR 2025-03-21 10:40:39,153 [test_get_gripper_status.py-->line:111]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 109, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:40:39,153 [test_get_gripper_status.py-->line:112]:期望数据：0
DEBUG 2025-03-21 10:40:39,153 [test_get_gripper_status.py-->line:113]:实际结果：1
INFO 2025-03-21 10:40:39,153 [test_get_gripper_status.py-->line:118]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:39,154 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:39,154 [test_get_gripper_status.py-->line:94]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:39,154 [test_get_gripper_status.py-->line:95]:test_parameters:None
DEBUG 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:103]:请求类型断言成功
INFO 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:116]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:118]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:94]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:50,280 [test_get_gripper_status.py-->line:95]:test_parameters:None
DEBUG 2025-03-21 10:40:52,470 [test_get_gripper_status.py-->line:103]:请求类型断言成功
ERROR 2025-03-21 10:40:52,470 [test_get_gripper_status.py-->line:111]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 109, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:40:52,472 [test_get_gripper_status.py-->line:112]:期望数据：2
DEBUG 2025-03-21 10:40:52,472 [test_get_gripper_status.py-->line:113]:实际结果：1
INFO 2025-03-21 10:40:52,472 [test_get_gripper_status.py-->line:118]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:52,473 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:52,473 [test_get_gripper_status.py-->line:94]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:52,474 [test_get_gripper_status.py-->line:95]:test_parameters:None
DEBUG 2025-03-21 10:40:55,154 [test_get_gripper_status.py-->line:103]:请求类型断言成功
ERROR 2025-03-21 10:40:55,154 [test_get_gripper_status.py-->line:111]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 109, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:40:55,155 [test_get_gripper_status.py-->line:112]:期望数据：3
DEBUG 2025-03-21 10:40:55,155 [test_get_gripper_status.py-->line:113]:实际结果：1
INFO 2025-03-21 10:40:55,155 [test_get_gripper_status.py-->line:118]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:55,157 [test_get_gripper_status.py-->line:122]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:55,157 [test_get_gripper_status.py-->line:124]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:55,157 [test_get_gripper_status.py-->line:125]:test_parameters:None
DEBUG 2025-03-21 10:40:56,062 [test_get_gripper_status.py-->line:132]:请求类型断言成功
ERROR 2025-03-21 10:40:56,062 [test_get_gripper_status.py-->line:140]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 138, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:40:56,063 [test_get_gripper_status.py-->line:141]:期望数据：0
DEBUG 2025-03-21 10:40:56,063 [test_get_gripper_status.py-->line:142]:实际结果：1
INFO 2025-03-21 10:40:56,063 [test_get_gripper_status.py-->line:147]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:56,064 [test_get_gripper_status.py-->line:122]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:56,064 [test_get_gripper_status.py-->line:124]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:56,064 [test_get_gripper_status.py-->line:125]:test_parameters:None
DEBUG 2025-03-21 10:40:57,387 [test_get_gripper_status.py-->line:132]:请求类型断言成功
INFO 2025-03-21 10:40:57,388 [test_get_gripper_status.py-->line:145]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:40:57,388 [test_get_gripper_status.py-->line:147]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:57,388 [test_get_gripper_status.py-->line:122]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:57,388 [test_get_gripper_status.py-->line:124]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:57,388 [test_get_gripper_status.py-->line:125]:test_parameters:None
DEBUG 2025-03-21 10:40:58,181 [test_get_gripper_status.py-->line:132]:请求类型断言成功
ERROR 2025-03-21 10:40:58,182 [test_get_gripper_status.py-->line:140]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 138, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:40:58,182 [test_get_gripper_status.py-->line:141]:期望数据：2
DEBUG 2025-03-21 10:40:58,182 [test_get_gripper_status.py-->line:142]:实际结果：1
INFO 2025-03-21 10:40:58,183 [test_get_gripper_status.py-->line:147]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:58,184 [test_get_gripper_status.py-->line:122]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:40:58,184 [test_get_gripper_status.py-->line:124]:test_api:get_gripper_status
DEBUG 2025-03-21 10:40:58,184 [test_get_gripper_status.py-->line:125]:test_parameters:None
DEBUG 2025-03-21 10:40:59,951 [test_get_gripper_status.py-->line:132]:请求类型断言成功
ERROR 2025-03-21 10:40:59,951 [test_get_gripper_status.py-->line:140]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 138, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:40:59,951 [test_get_gripper_status.py-->line:141]:期望数据：3
DEBUG 2025-03-21 10:40:59,951 [test_get_gripper_status.py-->line:142]:实际结果：1
INFO 2025-03-21 10:40:59,951 [test_get_gripper_status.py-->line:147]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:40:59,953 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:43:57,183 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:43:57,186 [test_get_gripper_status.py-->line:35]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:43:57,186 [test_get_gripper_status.py-->line:37]:test_api:get_gripper_status
DEBUG 2025-03-21 10:43:57,186 [test_get_gripper_status.py-->line:38]:test_parameters:None
DEBUG 2025-03-21 10:43:57,811 [test_get_gripper_status.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 10:43:57,812 [test_get_gripper_status.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 50, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:43:57,814 [test_get_gripper_status.py-->line:53]:期望数据：0
DEBUG 2025-03-21 10:43:57,814 [test_get_gripper_status.py-->line:54]:实际结果：1
INFO 2025-03-21 10:43:57,814 [test_get_gripper_status.py-->line:59]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:43:57,815 [test_get_gripper_status.py-->line:64]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:43:57,815 [test_get_gripper_status.py-->line:66]:test_api:get_gripper_status
DEBUG 2025-03-21 10:43:57,815 [test_get_gripper_status.py-->line:67]:test_parameters:None
DEBUG 2025-03-21 10:44:02,875 [test_get_gripper_status.py-->line:74]:请求类型断言成功
INFO 2025-03-21 10:44:02,875 [test_get_gripper_status.py-->line:87]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:44:02,875 [test_get_gripper_status.py-->line:89]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:44:02,876 [test_get_gripper_status.py-->line:94]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:44:02,876 [test_get_gripper_status.py-->line:96]:test_api:get_gripper_status
DEBUG 2025-03-21 10:44:02,876 [test_get_gripper_status.py-->line:97]:test_parameters:None
DEBUG 2025-03-21 10:44:14,665 [test_get_gripper_status.py-->line:105]:请求类型断言成功
ERROR 2025-03-21 10:44:14,665 [test_get_gripper_status.py-->line:113]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 111, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:44:14,666 [test_get_gripper_status.py-->line:114]:期望数据：2
DEBUG 2025-03-21 10:44:14,666 [test_get_gripper_status.py-->line:115]:实际结果：1
INFO 2025-03-21 10:44:14,666 [test_get_gripper_status.py-->line:120]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:44:14,668 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:44:14,669 [test_get_gripper_status.py-->line:127]:test_api:get_gripper_status
DEBUG 2025-03-21 10:44:14,669 [test_get_gripper_status.py-->line:128]:test_parameters:None
DEBUG 2025-03-21 10:44:25,529 [test_get_gripper_status.py-->line:135]:请求类型断言成功
ERROR 2025-03-21 10:44:25,530 [test_get_gripper_status.py-->line:143]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 141, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:44:25,530 [test_get_gripper_status.py-->line:144]:期望数据：3
DEBUG 2025-03-21 10:44:25,530 [test_get_gripper_status.py-->line:145]:实际结果：1
INFO 2025-03-21 10:44:25,530 [test_get_gripper_status.py-->line:150]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:44:25,532 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:46:07,436 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:46:07,439 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:46:07,439 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:46:07,439 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:46:08,056 [test_get_gripper_status.py-->line:47]:请求类型断言成功
ERROR 2025-03-21 10:46:08,058 [test_get_gripper_status.py-->line:55]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 53, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:46:08,060 [test_get_gripper_status.py-->line:56]:期望数据：0
DEBUG 2025-03-21 10:46:08,060 [test_get_gripper_status.py-->line:57]:实际结果：1
INFO 2025-03-21 10:46:08,060 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:46:13,070 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:46:13,070 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:46:13,070 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:46:18,117 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:46:18,118 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:46:18,118 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:46:23,118 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:46:23,119 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:46:23,119 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:46:33,637 [test_get_gripper_status.py-->line:108]:请求类型断言成功
ERROR 2025-03-21 10:46:33,638 [test_get_gripper_status.py-->line:116]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 114, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 10:46:33,638 [test_get_gripper_status.py-->line:117]:期望数据：2
DEBUG 2025-03-21 10:46:33,639 [test_get_gripper_status.py-->line:118]:实际结果：1
INFO 2025-03-21 10:46:33,639 [test_get_gripper_status.py-->line:123]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:46:38,649 [test_get_gripper_status.py-->line:128]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:46:38,649 [test_get_gripper_status.py-->line:130]:test_api:get_gripper_status
DEBUG 2025-03-21 10:46:38,649 [test_get_gripper_status.py-->line:131]:test_parameters:None
DEBUG 2025-03-21 10:47:23,271 [test_get_gripper_status.py-->line:138]:请求类型断言成功
ERROR 2025-03-21 10:47:23,271 [test_get_gripper_status.py-->line:146]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 144, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 10:47:23,272 [test_get_gripper_status.py-->line:147]:期望数据：3
DEBUG 2025-03-21 10:47:23,272 [test_get_gripper_status.py-->line:148]:实际结果：1
INFO 2025-03-21 10:47:23,272 [test_get_gripper_status.py-->line:153]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:47:28,287 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:49:03,234 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:49:03,235 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:49:03,235 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:49:03,235 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:49:05,873 [test_get_gripper_status.py-->line:48]:请求类型断言成功
ERROR 2025-03-21 10:49:05,874 [test_get_gripper_status.py-->line:56]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 54, in test_get_gripper_status_0
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
DEBUG 2025-03-21 10:49:05,876 [test_get_gripper_status.py-->line:57]:期望数据：0
DEBUG 2025-03-21 10:49:05,876 [test_get_gripper_status.py-->line:58]:实际结果：1
INFO 2025-03-21 10:49:05,876 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:49:10,892 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:49:10,892 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 10:49:10,893 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 10:49:15,948 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 10:49:15,948 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:49:15,948 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:49:20,948 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:49:20,949 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 10:49:20,949 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 10:49:25,418 [test_get_gripper_status.py-->line:109]:请求类型断言成功
ERROR 2025-03-21 10:49:25,418 [test_get_gripper_status.py-->line:117]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 115, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
DEBUG 2025-03-21 10:49:25,419 [test_get_gripper_status.py-->line:118]:期望数据：2
DEBUG 2025-03-21 10:49:25,419 [test_get_gripper_status.py-->line:119]:实际结果：0
INFO 2025-03-21 10:49:25,419 [test_get_gripper_status.py-->line:124]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:49:30,428 [test_get_gripper_status.py-->line:129]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:49:30,428 [test_get_gripper_status.py-->line:131]:test_api:get_gripper_status
DEBUG 2025-03-21 10:49:30,428 [test_get_gripper_status.py-->line:132]:test_parameters:None
DEBUG 2025-03-21 10:49:32,889 [test_get_gripper_status.py-->line:139]:请求类型断言成功
ERROR 2025-03-21 10:49:32,889 [test_get_gripper_status.py-->line:147]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 145, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 2
DEBUG 2025-03-21 10:49:32,890 [test_get_gripper_status.py-->line:148]:期望数据：3
DEBUG 2025-03-21 10:49:32,890 [test_get_gripper_status.py-->line:149]:实际结果：2
INFO 2025-03-21 10:49:32,890 [test_get_gripper_status.py-->line:154]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:49:37,904 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:50:49,050 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:50:49,052 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:50:49,052 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:50:49,052 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:50:50,117 [test_get_gripper_status.py-->line:47]:请求类型断言成功
INFO 2025-03-21 10:50:50,117 [test_get_gripper_status.py-->line:60]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:50:50,117 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:50:55,128 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:50:55,128 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:50:55,128 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:51:00,176 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:51:00,176 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:51:00,176 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:51:05,183 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:51:05,183 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:51:05,183 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:51:11,026 [test_get_gripper_status.py-->line:108]:请求类型断言成功
ERROR 2025-03-21 10:51:11,028 [test_get_gripper_status.py-->line:116]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 114, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
DEBUG 2025-03-21 10:51:11,029 [test_get_gripper_status.py-->line:117]:期望数据：2
DEBUG 2025-03-21 10:51:11,030 [test_get_gripper_status.py-->line:118]:实际结果：0
INFO 2025-03-21 10:51:11,030 [test_get_gripper_status.py-->line:123]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:51:16,033 [test_get_gripper_status.py-->line:128]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:51:16,033 [test_get_gripper_status.py-->line:130]:test_api:get_gripper_status
DEBUG 2025-03-21 10:51:16,033 [test_get_gripper_status.py-->line:131]:test_parameters:None
DEBUG 2025-03-21 10:51:21,695 [test_get_gripper_status.py-->line:138]:请求类型断言成功
INFO 2025-03-21 10:51:21,695 [test_get_gripper_status.py-->line:151]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 10:51:21,695 [test_get_gripper_status.py-->line:153]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:51:26,703 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:52:29,064 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:52:29,066 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:52:29,066 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:52:29,066 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:52:30,138 [test_get_gripper_status.py-->line:47]:请求类型断言成功
INFO 2025-03-21 10:52:30,138 [test_get_gripper_status.py-->line:60]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:52:30,138 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:52:33,143 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:52:33,144 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:52:33,144 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:52:38,204 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:52:38,204 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:52:38,204 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:52:41,210 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:52:41,210 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:52:41,211 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:52:49,474 [test_get_gripper_status.py-->line:109]:请求类型断言成功
INFO 2025-03-21 10:52:49,474 [test_get_gripper_status.py-->line:122]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 10:52:49,474 [test_get_gripper_status.py-->line:124]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:52:52,483 [test_get_gripper_status.py-->line:129]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:52:52,483 [test_get_gripper_status.py-->line:131]:test_api:get_gripper_status
DEBUG 2025-03-21 10:52:52,484 [test_get_gripper_status.py-->line:132]:test_parameters:None
DEBUG 2025-03-21 10:52:57,320 [test_get_gripper_status.py-->line:139]:请求类型断言成功
INFO 2025-03-21 10:52:57,320 [test_get_gripper_status.py-->line:152]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 10:52:57,320 [test_get_gripper_status.py-->line:154]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:53:00,332 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:53:32,319 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:53:32,321 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:53:32,321 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:53:32,321 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:53:33,393 [test_get_gripper_status.py-->line:47]:请求类型断言成功
INFO 2025-03-21 10:53:33,393 [test_get_gripper_status.py-->line:60]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:53:33,393 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:53:36,393 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:53:36,394 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:53:36,394 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:53:41,444 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:53:41,444 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:53:41,444 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:53:44,459 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:53:44,460 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:53:44,460 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:53:52,572 [test_get_gripper_status.py-->line:109]:请求类型断言成功
INFO 2025-03-21 10:53:52,572 [test_get_gripper_status.py-->line:122]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 10:53:52,572 [test_get_gripper_status.py-->line:124]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:53:55,584 [test_get_gripper_status.py-->line:129]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:53:55,585 [test_get_gripper_status.py-->line:131]:test_api:get_gripper_status
DEBUG 2025-03-21 10:53:55,585 [test_get_gripper_status.py-->line:132]:test_parameters:None
DEBUG 2025-03-21 10:53:59,706 [test_get_gripper_status.py-->line:139]:请求类型断言成功
INFO 2025-03-21 10:53:59,706 [test_get_gripper_status.py-->line:152]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 10:53:59,706 [test_get_gripper_status.py-->line:154]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:54:02,712 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:54:35,066 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:54:35,069 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:54:35,069 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:54:35,069 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:54:36,130 [test_get_gripper_status.py-->line:47]:请求类型断言成功
INFO 2025-03-21 10:54:36,130 [test_get_gripper_status.py-->line:60]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:54:36,131 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:54:39,135 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:54:39,135 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:54:39,135 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:54:44,190 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:54:44,190 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:54:44,190 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:54:47,194 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:54:47,194 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:54:47,194 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:54:53,678 [test_get_gripper_status.py-->line:109]:请求类型断言成功
INFO 2025-03-21 10:54:53,678 [test_get_gripper_status.py-->line:122]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 10:54:53,678 [test_get_gripper_status.py-->line:124]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:54:56,685 [test_get_gripper_status.py-->line:129]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:54:56,685 [test_get_gripper_status.py-->line:131]:test_api:get_gripper_status
DEBUG 2025-03-21 10:54:56,686 [test_get_gripper_status.py-->line:132]:test_parameters:None
DEBUG 2025-03-21 10:55:17,293 [test_get_gripper_status.py-->line:139]:请求类型断言成功
ERROR 2025-03-21 10:55:17,295 [test_get_gripper_status.py-->line:147]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 145, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 2
DEBUG 2025-03-21 10:55:17,297 [test_get_gripper_status.py-->line:148]:期望数据：3
DEBUG 2025-03-21 10:55:17,297 [test_get_gripper_status.py-->line:149]:实际结果：2
INFO 2025-03-21 10:55:17,297 [test_get_gripper_status.py-->line:154]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:55:20,303 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 10:56:00,955 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 10:56:00,957 [test_get_gripper_status.py-->line:38]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:56:00,957 [test_get_gripper_status.py-->line:40]:test_api:get_gripper_status
DEBUG 2025-03-21 10:56:00,958 [test_get_gripper_status.py-->line:41]:test_parameters:None
DEBUG 2025-03-21 10:56:02,019 [test_get_gripper_status.py-->line:47]:请求类型断言成功
INFO 2025-03-21 10:56:02,019 [test_get_gripper_status.py-->line:60]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 10:56:02,019 [test_get_gripper_status.py-->line:62]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:56:05,022 [test_get_gripper_status.py-->line:67]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:56:05,022 [test_get_gripper_status.py-->line:69]:test_api:get_gripper_status
DEBUG 2025-03-21 10:56:05,022 [test_get_gripper_status.py-->line:70]:test_parameters:None
DEBUG 2025-03-21 10:56:10,074 [test_get_gripper_status.py-->line:77]:请求类型断言成功
INFO 2025-03-21 10:56:10,074 [test_get_gripper_status.py-->line:90]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 10:56:10,074 [test_get_gripper_status.py-->line:92]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:56:13,085 [test_get_gripper_status.py-->line:97]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:56:13,086 [test_get_gripper_status.py-->line:99]:test_api:get_gripper_status
DEBUG 2025-03-21 10:56:13,086 [test_get_gripper_status.py-->line:100]:test_parameters:None
DEBUG 2025-03-21 10:56:21,118 [test_get_gripper_status.py-->line:109]:请求类型断言成功
INFO 2025-03-21 10:56:21,118 [test_get_gripper_status.py-->line:122]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 10:56:21,118 [test_get_gripper_status.py-->line:124]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:56:24,123 [test_get_gripper_status.py-->line:129]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 10:56:24,123 [test_get_gripper_status.py-->line:131]:test_api:get_gripper_status
DEBUG 2025-03-21 10:56:24,123 [test_get_gripper_status.py-->line:132]:test_parameters:None
DEBUG 2025-03-21 10:56:33,023 [test_get_gripper_status.py-->line:139]:请求类型断言成功
INFO 2025-03-21 10:56:33,023 [test_get_gripper_status.py-->line:152]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 10:56:33,023 [test_get_gripper_status.py-->line:154]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 10:56:36,033 [test_get_gripper_status.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 11:07:40,076 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:07:40,077 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,078 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,078 [test_get_gripper_p.py-->line:36]:test_joint:1
INFO 2025-03-21 11:07:40,079 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,079 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,079 [test_get_gripper_p.py-->line:36]:test_joint:2
INFO 2025-03-21 11:07:40,081 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,081 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,081 [test_get_gripper_p.py-->line:36]:test_joint:3
INFO 2025-03-21 11:07:40,082 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,082 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,082 [test_get_gripper_p.py-->line:36]:test_joint:4
INFO 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:36]:test_joint:5
INFO 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:07:40,083 [test_get_gripper_p.py-->line:36]:test_joint:6
INFO 2025-03-21 11:07:40,084 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,084 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
INFO 2025-03-21 11:07:40,085 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:07:40,085 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
INFO 2025-03-21 11:07:40,085 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 11:08:00,885 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:08:00,888 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,888 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,888 [test_get_gripper_p.py-->line:36]:test_joint:1
INFO 2025-03-21 11:08:00,891 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,891 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,891 [test_get_gripper_p.py-->line:36]:test_joint:2
INFO 2025-03-21 11:08:00,892 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,892 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,892 [test_get_gripper_p.py-->line:36]:test_joint:3
INFO 2025-03-21 11:08:00,893 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,893 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,893 [test_get_gripper_p.py-->line:36]:test_joint:4
INFO 2025-03-21 11:08:00,894 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,894 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,895 [test_get_gripper_p.py-->line:36]:test_joint:5
INFO 2025-03-21 11:08:00,895 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,895 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,895 [test_get_gripper_p.py-->line:36]:test_joint:6
INFO 2025-03-21 11:08:00,897 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,898 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,898 [test_get_gripper_p.py-->line:64]:test_joint:7
ERROR 2025-03-21 11:08:00,898 [test_get_gripper_p.py-->line:73]:未预期的异常发生：MyGripper_H100.set_gripper_joint_P() missing 1 required positional argument: 'value'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 68, in test_out_limit
    self.device.m.set_gripper_joint_P(int(case['joint']))
TypeError: MyGripper_H100.set_gripper_joint_P() missing 1 required positional argument: 'value'
INFO 2025-03-21 11:08:00,898 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:00,899 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:00,899 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:00,899 [test_get_gripper_p.py-->line:64]:test_joint:0
ERROR 2025-03-21 11:08:00,899 [test_get_gripper_p.py-->line:73]:未预期的异常发生：MyGripper_H100.set_gripper_joint_P() missing 1 required positional argument: 'value'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 68, in test_out_limit
    self.device.m.set_gripper_joint_P(int(case['joint']))
TypeError: MyGripper_H100.set_gripper_joint_P() missing 1 required positional argument: 'value'
INFO 2025-03-21 11:08:00,899 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:00,900 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 11:08:16,311 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:08:16,313 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,313 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,313 [test_get_gripper_p.py-->line:36]:test_joint:1
INFO 2025-03-21 11:08:16,315 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,315 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,315 [test_get_gripper_p.py-->line:36]:test_joint:2
INFO 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:36]:test_joint:3
INFO 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,317 [test_get_gripper_p.py-->line:36]:test_joint:4
INFO 2025-03-21 11:08:16,318 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,318 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,318 [test_get_gripper_p.py-->line:36]:test_joint:5
INFO 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:36]:test_joint:6
INFO 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:64]:test_joint:7
INFO 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 11:08:16,319 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:64]:test_joint:0
INFO 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:16,320 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 11:08:52,297 [test_get_gripper_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:08:52,299 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,299 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,299 [test_get_gripper_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 11:08:52,344 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,345 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 11:08:52,348 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,348 [test_get_gripper_p.py-->line:52]:实际结果：100
INFO 2025-03-21 11:08:52,348 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,349 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,350 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,350 [test_get_gripper_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 11:08:52,391 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,391 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 11:08:52,391 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,391 [test_get_gripper_p.py-->line:52]:实际结果：100
INFO 2025-03-21 11:08:52,391 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,392 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,392 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,392 [test_get_gripper_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 11:08:52,437 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,437 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 11:08:52,437 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,438 [test_get_gripper_p.py-->line:52]:实际结果：100
INFO 2025-03-21 11:08:52,438 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,439 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,439 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,439 [test_get_gripper_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 11:08:52,483 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,483 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 250
DEBUG 2025-03-21 11:08:52,483 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,483 [test_get_gripper_p.py-->line:52]:实际结果：250
INFO 2025-03-21 11:08:52,483 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,484 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,484 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,484 [test_get_gripper_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 11:08:52,529 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,529 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 150
DEBUG 2025-03-21 11:08:52,530 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,530 [test_get_gripper_p.py-->line:52]:实际结果：150
INFO 2025-03-21 11:08:52,530 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,531 [test_get_gripper_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,531 [test_get_gripper_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,531 [test_get_gripper_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 11:08:52,575 [test_get_gripper_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:08:52,575 [test_get_gripper_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 150
DEBUG 2025-03-21 11:08:52,576 [test_get_gripper_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 11:08:52,576 [test_get_gripper_p.py-->line:52]:实际结果：150
INFO 2025-03-21 11:08:52,576 [test_get_gripper_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:64]:test_joint:7
INFO 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:08:52,577 [test_get_gripper_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 11:08:52,578 [test_get_gripper_p.py-->line:64]:test_joint:0
INFO 2025-03-21 11:08:52,578 [test_get_gripper_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 11:08:52,578 [test_get_gripper_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:08:52,578 [test_get_gripper_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 11:42:32,008 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:42:32,011 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,011 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,013 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
ERROR 2025-03-21 11:42:32,013 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,013 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,047 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,048 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,048 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
ERROR 2025-03-21 11:42:32,048 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,048 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,049 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,050 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,050 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
ERROR 2025-03-21 11:42:32,050 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,050 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,051 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,051 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,051 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
ERROR 2025-03-21 11:42:32,052 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,052 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,054 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,054 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,054 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
ERROR 2025-03-21 11:42:32,054 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,054 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,056 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,056 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,056 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
ERROR 2025-03-21 11:42:32,056 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,056 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,058 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,058 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,058 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
ERROR 2025-03-21 11:42:32,058 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,058 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,060 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,060 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,060 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
ERROR 2025-03-21 11:42:32,060 [test_set_gripper_joint_p.py-->line:77]:未预期的异常发生：'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_p.py", line 72, in test_out_limit
    self.device.m.set_gripper_joint_p(int(case['parameter']))
AttributeError: 'MyGripper_H100' object has no attribute 'set_gripper_joint_p'
INFO 2025-03-21 11:42:32,061 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:42:32,062 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,062 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,062 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 11:42:32,062 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,063 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,063 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,063 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 11:42:32,063 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,064 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,065 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,065 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 11:42:32,065 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,065 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,065 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,066 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 11:42:32,066 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,067 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,067 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,067 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 11:42:32,067 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,068 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:42:32,068 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:42:32,068 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 11:42:32,068 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:42:32,352 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 11:44:26,392 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,394 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,395 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:44:26,398 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,399 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,399 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 11:44:26,399 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,414 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,414 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,414 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 11:44:26,414 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,415 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,415 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,415 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 11:44:26,415 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,417 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,417 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,417 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 11:44:26,417 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,418 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,418 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,418 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 11:44:26,418 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,418 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:44:26,419 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:44:26,419 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 11:44:26,419 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
INFO 2025-03-21 11:44:26,700 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 11:45:38,711 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:45:38,713 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,714 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,715 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 11:45:38,718 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 11:45:38,719 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,719 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,719 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 11:45:38,719 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 11:45:38,813 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:38,907 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:38,907 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 11:45:38,907 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:38,908 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:38,908 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:38,908 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 11:45:38,908 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:39,001 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:39,001 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 11:45:39,001 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:39,002 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:39,002 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:39,002 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 11:45:39,002 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:39,094 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:39,094 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 11:45:39,094 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:39,096 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:39,096 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:39,096 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 11:45:39,096 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:39,187 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:39,187 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 11:45:39,187 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:39,188 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 11:45:39,188 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 11:45:39,188 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 11:45:39,188 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:45:39,281 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:45:39,281 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 11:45:39,281 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 11:45:39,561 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 11:55:32,994 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:55:32,996 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:32,996 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:32,996 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 11:55:32,997 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 11:55:32,999 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:33,000 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,000 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,000 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:55:33,000 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 11:55:33,000 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:55:33,001 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 11:55:33,002 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:33,002 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,002 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,002 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 11:55:33,002 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,103 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 11:55:33,105 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,197 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,197 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 11:55:33,197 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,198 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,198 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,198 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 11:55:33,198 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 11:55:33,291 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,384 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,384 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 11:55:33,384 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,385 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,385 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,386 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 11:55:33,386 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 11:55:33,478 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:55:33,571 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:55:33,571 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 11:55:33,571 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:33,849 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 11:55:46,649 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:55:46,651 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,651 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,651 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 11:55:46,693 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,702 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,718 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,718 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,718 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,721 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,721 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,721 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 11:55:46,772 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,772 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,773 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,773 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,773 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,774 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,774 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,774 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 11:55:46,818 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,818 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,818 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,818 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,818 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,820 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,820 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,820 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 11:55:46,864 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,864 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,864 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,864 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,864 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,865 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,865 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,866 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 11:55:46,911 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,911 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,913 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,913 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,913 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,914 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,914 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,914 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 11:55:46,958 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 11:55:46,958 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 150
DEBUG 2025-03-21 11:55:46,959 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 11:55:46,959 [test_get_gripper_joint_d.py-->line:52]:实际结果：150
INFO 2025-03-21 11:55:46,959 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:46,961 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:55:46,962 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:55:46,962 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 11:55:46,962 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 11:55:46,962 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:55:46,962 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 11:56:57,941 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:56:57,942 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,943 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,944 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 11:56:57,945 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:56:57,946 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:57,946 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:57,946 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 11:56:57,946 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 11:56:58,045 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,138 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,138 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 11:56:58,138 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,138 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:58,138 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:58,139 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 11:56:58,139 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,232 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,232 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 11:56:58,232 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,233 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:58,233 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:58,233 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 11:56:58,233 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,326 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,326 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 11:56:58,326 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,326 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:58,327 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:58,327 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 11:56:58,327 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,419 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 11:56:58,420 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 11:56:58,512 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 11:56:58,512 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 11:56:58,512 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 11:56:58,794 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 11:57:05,719 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 11:57:05,722 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,722 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,722 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 11:57:05,763 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:05,763 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 11:57:05,763 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:05,764 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,764 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,764 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,812 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 11:57:05,859 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:05,859 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 11:57:05,859 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:05,860 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,860 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,860 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,906 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 11:57:05,953 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:05,953 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 11:57:05,953 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:05,953 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 11:57:05,953 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:05,954 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 11:57:06,000 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 11:57:06,000 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 11:57:06,000 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 11:57:06,001 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:57:06,001 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:06,001 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 11:57:06,001 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 11:57:06,001 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:57:06,002 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 11:57:06,002 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 11:57:06,002 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 11:57:06,002 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 11:57:06,002 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 11:57:06,003 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 12:42:16,257 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:42:16,260 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,261 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,262 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:42:16,263 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:42:16,360 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,454 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,454 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 12:42:16,454 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:16,455 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,455 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,455 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:42:16,455 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,548 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,548 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 12:42:16,548 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:16,548 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,548 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,549 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:42:16,549 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,641 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,641 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 12:42:16,641 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:16,641 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,643 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,643 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:42:16,643 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,737 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,737 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 12:42:16,737 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:16,738 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:16,738 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 12:42:16,738 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:42:16,738 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 12:42:16,831 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:42:16,831 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 12:42:16,831 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:17,109 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 12:42:37,341 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:42:37,343 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,343 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,344 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 12:42:37,395 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,395 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 12:42:37,395 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,396 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,396 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,396 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 12:42:37,440 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,440 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 12:42:37,440 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,441 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,441 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,441 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,488 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,536 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,582 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 12:42:37,629 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 12:42:37,630 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 12:47:52,094 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:47:52,095 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:47:52,096 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,097 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:47:52,098 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:47:52,102 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,102 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,102 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:47:52,102 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:47:52,113 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:47:52,128 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,128 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,128 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:47:52,128 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:47:52,129 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:47:52,129 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:47:52,129 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:47:52,129 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,413 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:49:09,416 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,416 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,416 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:49:09,416 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,416 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:150
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,417 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:256
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:49:09,418 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,419 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 12:49:09,420 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:49:09,421 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,421 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,421 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:49:09,421 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,424 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,424 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,424 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:49:09,424 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,424 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,425 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,425 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:49:09,425 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,427 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,427 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,427 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:49:09,427 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,429 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,429 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,429 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:49:09,429 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,430 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:49:09,430 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:49:09,430 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:49:09,430 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:150
INFO 2025-03-21 12:49:09,721 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 12:50:43,837 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:50:43,838 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,838 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,838 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:50:43,838 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,839 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,840 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:50:43,849 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:50:43,941 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:50:44,036 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:44,130 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:44,130 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 12:50:44,130 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:44,131 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:44,131 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:44,131 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:50:44,131 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:44,223 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:44,223 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 12:50:44,223 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:44,224 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:44,224 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:44,224 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:50:44,224 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:44,314 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:44,314 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 12:50:44,314 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:44,315 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:44,315 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 12:50:44,316 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:50:44,316 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:50:44,407 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:50:44,407 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 12:50:44,407 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:44,684 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 12:50:52,589 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:50:52,591 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,591 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,591 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 12:50:52,633 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,633 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-21 12:50:52,633 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,634 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,634 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,634 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,680 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 12:50:52,726 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,726 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-21 12:50:52,726 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,727 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,727 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,727 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 12:50:52,773 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,773 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-21 12:50:52,773 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,773 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,774 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,774 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 12:50:52,820 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,820 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 12:50:52,820 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,820 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,820 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,821 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 12:50:52,867 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:50:52,867 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 12:50:52,867 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 12:50:52,868 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 12:50:52,869 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 12:54:20,399 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:54:20,401 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,401 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,401 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:54:20,401 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,401 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,402 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,404 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,406 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,406 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,407 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:20,407 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,407 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,407 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,407 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:54:20,408 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,499 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,499 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 12:54:20,499 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:20,500 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,500 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,500 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:54:20,500 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,592 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,592 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 12:54:20,592 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:20,593 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,593 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,593 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:54:20,593 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:54:20,684 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,777 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,778 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 12:54:20,778 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:20,778 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,779 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,779 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:54:20,779 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:54:20,873 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:20,967 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:20,967 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 12:54:20,967 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:42,807 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:54:42,809 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,809 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,809 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:54:42,809 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,809 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,810 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,811 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,812 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 12:54:42,813 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:42,915 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:42,915 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 12:54:42,915 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:42,915 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:42,916 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:42,916 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 12:54:42,916 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:43,009 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:43,009 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 12:54:43,009 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:43,010 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:43,010 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:43,010 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 12:54:43,011 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:43,103 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:43,103 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 12:54:43,103 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:43,103 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:43,104 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:43,104 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 12:54:43,104 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:43,197 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:43,197 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 12:54:43,197 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:43,198 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:43,198 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:43,198 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 12:54:43,198 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:43,291 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:43,291 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 12:54:43,291 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:43,291 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:43,292 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 12:54:43,292 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 12:54:43,292 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 12:54:43,385 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 12:54:43,385 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 12:54:43,385 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:43,666 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 12:54:48,870 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 12:54:48,872 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:48,872 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:48,872 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 12:54:48,926 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:48,926 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-21 12:54:48,926 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:48,928 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:48,928 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:48,928 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 12:54:48,973 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:48,973 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-21 12:54:48,973 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:48,975 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:48,975 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:48,975 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 12:54:49,021 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:49,021 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-21 12:54:49,021 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:49,022 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:49,022 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:49,022 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 12:54:49,068 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:49,068 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-21 12:54:49,068 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:49,069 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:49,069 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:49,069 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 12:54:49,114 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:49,114 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 12:54:49,114 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:49,115 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 12:54:49,116 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:49,116 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 12:54:49,161 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 12:54:49,161 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 12:54:49,161 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 12:54:49,162 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 12:54:49,163 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 12:54:49,163 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 12:54:49,163 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:36:02,656 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:36:02,659 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,660 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,661 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,661 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,661 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 13:36:02,661 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,661 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,662 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,663 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,663 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 13:36:02,663 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,663 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,664 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,664 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,664 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:36:02,664 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,664 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:02,665 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:02,667 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,667 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,667 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:36:02,667 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:02,759 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:02,759 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:02,759 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:02,760 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,760 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,760 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:36:02,761 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:02,851 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:02,851 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:02,851 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:02,852 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,852 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,852 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:36:02,852 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:02,945 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:36:02,947 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:03,039 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:03,039 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:03,039 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:03,040 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:03,040 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:03,040 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:36:03,040 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:03,134 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:03,134 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:03,134 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:03,135 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:03,135 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:03,135 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:36:03,136 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 13:36:03,227 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:36:03,227 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:03,227 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:03,510 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:36:10,409 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:36:10,411 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,411 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,411 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:36:10,466 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,466 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,466 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,466 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,467 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,467 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:36:10,512 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,512 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,512 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,512 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,513 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,513 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:36:10,559 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,559 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,559 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,560 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,560 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,560 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:36:10,606 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,606 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,606 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,607 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,607 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,607 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:36:10,653 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,653 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,653 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,653 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,653 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,655 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:10,699 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:10,700 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:36:10,700 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 13:36:10,700 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 13:36:10,700 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 13:36:10,700 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 13:36:10,701 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:41:11,991 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:41:11,993 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:11,993 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:11,993 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:41:12,035 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,040 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,044 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,044 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,044 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,046 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,046 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,046 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:41:12,097 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,097 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,098 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,098 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,098 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,099 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,099 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,099 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:41:12,144 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,144 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,145 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,145 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,145 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,146 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,146 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,146 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:41:12,191 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,191 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,192 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,192 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,192 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,193 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,193 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,193 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:41:12,238 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,238 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,239 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:41:12,284 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:41:12,285 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-21 13:41:12,285 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:41:12,286 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-21 13:41:12,286 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:12,288 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:12,289 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 13:41:12,289 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:12,289 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:12,290 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:41:31,610 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,612 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,613 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,614 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,615 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,615 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,615 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:41:31,615 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,615 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,617 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:41:31,618 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:41:31,714 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:31,814 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:31,814 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 13:41:31,814 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:31,814 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,815 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,815 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:41:31,815 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:31,917 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:31,917 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 13:41:31,917 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:31,917 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:31,918 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:31,918 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:41:31,918 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:32,011 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:41:32,012 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:32,104 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:32,104 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 13:41:32,104 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:32,104 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:32,104 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 13:41:32,105 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:41:32,105 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:41:32,198 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:41:32,198 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 13:41:32,199 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:32,495 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:41:38,292 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:41:38,295 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,295 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,295 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:41:38,349 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,349 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 13:41:38,349 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,350 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,350 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,350 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,396 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:41:38,443 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,443 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 13:41:38,443 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,444 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,444 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,444 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:41:38,489 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,489 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 13:41:38,489 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,490 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,490 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,490 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,535 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:41:38,582 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:38,583 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:41:38,584 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 13:41:38,584 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 13:41:38,584 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 13:41:38,584 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 13:41:38,584 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:49:27,878 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:49:27,881 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,881 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,881 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:49:27,881 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 13:49:27,881 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,882 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,882 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,882 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:49:27,882 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 13:49:27,882 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,883 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,884 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:49:27,930 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置4关节speed值（超限）未触发异常
INFO 2025-03-21 13:49:27,930 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,934 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,934 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,934 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:49:27,977 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置5关节speed值（超限）未触发异常
INFO 2025-03-21 13:49:27,977 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:27,979 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:49:27,979 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:27,979 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:49:28,025 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置6关节speed值（超限）未触发异常
INFO 2025-03-21 13:49:28,025 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:49:28,027 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,027 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,027 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:49:28,027 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,118 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,118 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 13:49:28,118 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,119 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,119 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,119 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:49:28,119 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:49:28,213 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:49:28,306 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,400 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,400 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 13:49:28,400 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,401 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,401 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,401 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:49:28,401 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,493 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,493 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 13:49:28,493 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,495 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:49:28,495 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:49:28,495 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:49:28,495 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:49:28,587 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:49:28,587 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 13:49:28,587 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:49:28,864 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:50:19,169 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:50:19,171 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,171 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,171 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:50:19,225 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,226 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,227 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,227 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,227 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,229 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,229 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,229 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:50:19,272 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,272 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,272 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,272 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,272 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,273 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,273 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,273 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:50:19,319 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,319 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,320 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,320 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,320 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,321 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,321 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,321 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:50:19,367 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,367 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,368 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,368 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,368 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,369 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,369 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,369 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:50:19,413 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,413 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,414 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:50:19,461 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:50:19,461 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:50:19,461 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:50:19,461 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:50:19,461 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:19,463 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:19,464 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:50:51,356 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:51,358 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 13:50:51,359 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,360 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,360 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,360 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:50:51,404 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置4关节speed值（超限）未触发异常
INFO 2025-03-21 13:50:51,404 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,407 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,407 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,407 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:50:51,451 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置5关节speed值（超限）未触发异常
INFO 2025-03-21 13:50:51,451 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,451 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,451 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,451 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:50:51,497 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置6关节speed值（超限）未触发异常
INFO 2025-03-21 13:50:51,497 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:50:51,498 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,500 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,500 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:50:51,500 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:51,590 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:51,590 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 13:50:51,590 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:51,591 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,591 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,592 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:50:51,592 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:51,683 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:51,683 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 13:50:51,683 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:51,683 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,683 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,684 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:50:51,684 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:51,776 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:51,776 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 13:50:51,776 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:51,777 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,777 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,777 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:50:51,777 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:51,870 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:51,870 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 13:50:51,870 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:51,871 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,871 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,871 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:50:51,871 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:51,965 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:51,965 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 13:50:51,965 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:51,965 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:50:51,966 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:50:51,966 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:50:51,966 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:50:52,058 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:50:52,058 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 13:50:52,058 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:50:52,339 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:51:34,238 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:51:34,240 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,240 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,240 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:51:34,291 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,292 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,294 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,294 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,294 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,295 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,295 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,295 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:51:34,338 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,338 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,338 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,339 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,339 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,339 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,339 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,339 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:51:34,386 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,386 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,387 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,387 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,387 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,389 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,389 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,389 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:51:34,433 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,433 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,434 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,434 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,434 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,436 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,436 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,436 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:51:34,479 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,479 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,480 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,480 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,480 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,481 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,481 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,481 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:51:34,527 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:51:34,527 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:51:34,527 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:51:34,527 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 13:51:34,528 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:51:34,529 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 13:54:22,145 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 13:54:22,147 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,148 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:54:22,193 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置4关节speed值（超限）未触发异常
INFO 2025-03-21 13:54:22,193 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,196 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,196 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,196 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:54:22,240 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置5关节speed值（超限）未触发异常
INFO 2025-03-21 13:54:22,240 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,242 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,242 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,242 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
ERROR 2025-03-21 13:54:22,286 [test_set_gripper_joint_speed.py-->line:74]:断言失败：用例设置6关节speed值（超限）未触发异常
INFO 2025-03-21 13:54:22,286 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:54:22,287 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,287 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,287 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:54:22,287 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,379 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,379 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 13:54:22,379 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:22,379 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,380 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,380 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:54:22,380 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,472 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,472 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 13:54:22,472 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:22,472 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,472 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,473 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:54:22,473 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,567 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,567 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 13:54:22,567 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:22,567 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,568 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,568 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:54:22,568 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,659 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,659 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 13:54:22,659 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:22,660 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,660 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,660 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:54:22,660 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:54:22,752 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:54:22,845 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:54:22,846 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 13:54:22,846 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:54:23,127 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:55:49,239 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:55:49,240 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,240 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,240 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:55:49,240 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,240 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,241 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 13:55:49,243 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,343 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,343 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 13:55:49,343 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:49,343 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,343 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,345 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 13:55:49,345 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,436 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,436 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 13:55:49,436 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:49,437 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,437 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,437 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 13:55:49,437 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 13:55:49,531 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,625 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,625 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 13:55:49,625 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:49,625 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,626 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,626 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 13:55:49,626 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,720 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,720 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 13:55:49,720 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:49,720 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:55:49,721 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 13:55:49,721 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 13:55:49,721 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 13:55:49,815 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 13:55:49,815 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 13:55:49,815 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:55:50,095 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 13:56:00,357 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 13:56:00,359 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,359 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,359 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 13:56:00,414 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,416 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,418 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,418 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,418 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,418 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,419 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,419 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 13:56:00,462 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,462 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,463 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,463 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,463 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,463 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,464 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,464 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 13:56:00,508 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,508 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,509 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 13:56:00,555 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,555 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,555 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,555 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,555 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,557 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,557 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,557 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 13:56:00,602 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,602 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,602 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,602 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,602 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,603 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,603 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,603 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 13:56:00,648 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 13:56:00,648 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 13:56:00,648 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 13:56:00,648 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 13:56:00,648 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 13:56:00,649 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 13:56:00,651 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 14:22:00,665 [test_set_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 14:22:00,668 [test_set_gripper_angles.py-->line:65]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:22:00,668 [test_set_gripper_angles.py-->line:67]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:22:00,668 [test_set_gripper_angles.py-->line:68]:test_speeds:30
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:80]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:82]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:65]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:67]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:68]:test_speeds:101
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:80]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:82]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:34]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:36]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:37]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:22:00,669 [test_set_gripper_angles.py-->line:38]:test_speed:50
INFO 2025-03-21 14:22:00,674 [test_set_gripper_angles.py-->line:34]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:22:00,674 [test_set_gripper_angles.py-->line:36]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:22:00,674 [test_set_gripper_angles.py-->line:37]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:22:00,674 [test_set_gripper_angles.py-->line:38]:test_speed:100
INFO 2025-03-21 14:22:01,076 [test_set_gripper_angles.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 14:23:41,989 [test_set_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:65]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:67]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:68]:test_speeds:30
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:80]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:82]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:65]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:67]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:68]:test_speeds:101
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:80]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:82]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:34]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:36]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:23:41,992 [test_set_gripper_angles.py-->line:37]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:23:41,993 [test_set_gripper_angles.py-->line:38]:test_speed:50
INFO 2025-03-21 14:23:41,995 [test_set_gripper_angles.py-->line:34]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:23:41,995 [test_set_gripper_angles.py-->line:36]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:23:41,995 [test_set_gripper_angles.py-->line:37]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:23:41,995 [test_set_gripper_angles.py-->line:38]:test_speed:100
INFO 2025-03-21 14:23:42,042 [test_set_gripper_angles.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 14:25:07,682 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,684 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,685 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,686 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,686 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,686 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,687 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 14:25:07,688 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:07,787 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:07,787 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 14:25:07,787 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:07,788 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,788 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,788 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 14:25:07,788 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 14:25:07,881 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:07,973 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:07,973 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 14:25:07,973 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:07,974 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:07,974 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:07,974 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 14:25:07,974 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:08,066 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:08,066 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 14:25:08,066 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:08,067 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:08,067 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:08,068 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 14:25:08,068 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 14:25:08,159 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 14:25:08,253 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:25:08,253 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 14:25:08,253 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 14:25:08,535 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 14:26:38,035 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:26:38,038 [test_set_gripper_angles.py-->line:70]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:26:38,038 [test_set_gripper_angles.py-->line:72]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:26:38,038 [test_set_gripper_angles.py-->line:73]:test_speeds:30
INFO 2025-03-21 14:26:38,038 [test_set_gripper_angles.py-->line:85]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:26:38,038 [test_set_gripper_angles.py-->line:87]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:26:43,047 [test_set_gripper_angles.py-->line:70]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:26:43,047 [test_set_gripper_angles.py-->line:72]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:26:43,047 [test_set_gripper_angles.py-->line:73]:test_speeds:101
INFO 2025-03-21 14:26:43,047 [test_set_gripper_angles.py-->line:85]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:26:43,047 [test_set_gripper_angles.py-->line:87]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:26:48,048 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:26:48,049 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:26:48,049 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:26:48,049 [test_set_gripper_angles.py-->line:43]:test_speed:50
INFO 2025-03-21 14:26:53,067 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:26:53,067 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:26:53,067 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:26:53,067 [test_set_gripper_angles.py-->line:43]:test_speed:100
INFO 2025-03-21 14:26:58,117 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:28:39,951 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:28:39,952 [test_set_gripper_angles.py-->line:70]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:28:39,952 [test_set_gripper_angles.py-->line:72]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:28:39,952 [test_set_gripper_angles.py-->line:73]:test_speeds:30
INFO 2025-03-21 14:28:39,952 [test_set_gripper_angles.py-->line:85]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:28:39,953 [test_set_gripper_angles.py-->line:87]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:28:44,957 [test_set_gripper_angles.py-->line:70]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:28:44,957 [test_set_gripper_angles.py-->line:72]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:28:44,958 [test_set_gripper_angles.py-->line:73]:test_speeds:101
INFO 2025-03-21 14:28:44,958 [test_set_gripper_angles.py-->line:85]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:28:44,958 [test_set_gripper_angles.py-->line:87]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:28:49,971 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:28:49,971 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:28:49,971 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:28:49,971 [test_set_gripper_angles.py-->line:43]:test_speed:50
INFO 2025-03-21 14:28:54,986 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:28:54,987 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:28:54,987 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:28:54,987 [test_set_gripper_angles.py-->line:43]:test_speed:100
INFO 2025-03-21 14:29:00,229 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:31:24,780 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:31:24,783 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:31:24,783 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:31:24,783 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 14:31:24,783 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:31:24,783 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:31:29,789 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:31:29,790 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:31:29,790 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 14:31:29,790 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:31:29,790 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:31:34,796 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:31:34,796 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:31:34,796 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:31:34,796 [test_set_gripper_angles.py-->line:44]:test_speed:50
INFO 2025-03-21 14:31:39,805 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:31:39,805 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:31:39,805 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:31:39,805 [test_set_gripper_angles.py-->line:44]:test_speed:100
INFO 2025-03-21 14:31:44,866 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:31:56,419 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:31:56,421 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:31:56,421 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:31:56,421 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 14:31:56,421 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:31:56,421 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:32:01,423 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:32:01,424 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:32:01,424 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 14:32:01,424 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:32:01,424 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:32:06,433 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:32:06,433 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:32:06,433 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:32:06,433 [test_set_gripper_angles.py-->line:44]:test_speed:50
INFO 2025-03-21 14:32:11,448 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:32:11,448 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:32:11,448 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:32:11,448 [test_set_gripper_angles.py-->line:44]:test_speed:100
INFO 2025-03-21 14:32:16,511 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:34:53,386 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:34:53,388 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 14:35:00,322 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:35:00,322 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-21 14:35:00,322 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:00,323 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:35:00,323 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:35:00,323 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 14:35:09,800 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:35:09,800 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 14:35:09,800 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:09,801 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:35:09,801 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:35:09,801 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 14:35:19,281 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:35:19,281 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 14:35:19,281 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:19,281 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:35:19,282 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:35:19,282 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 14:35:23,850 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:35:23,850 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 14:35:23,850 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:23,851 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:35:23,851 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:35:23,851 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 14:35:30,054 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:35:30,054 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 14:35:30,054 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:30,055 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:35:30,055 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:35:30,055 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 14:35:40,323 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 14:35:40,327 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 14:35:40,346 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 14:35:40,346 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 14:35:40,346 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 14:35:40,348 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 14:38:23,094 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:38:23,096 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:38:23,096 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:23,097 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 14:38:23,097 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 14:38:23,097 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 14:38:23,097 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:38:23,097 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:23,098 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 14:38:30,365 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:38:30,365 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-21 14:38:30,365 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 14:38:30,365 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:30,366 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:30,366 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 14:38:39,896 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:38:39,896 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 14:38:39,897 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 14:38:39,897 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:39,897 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:39,897 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:49,066 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 14:38:53,611 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:38:53,611 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 14:38:53,611 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 14:38:53,612 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:53,612 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:53,612 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 14:38:59,441 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 14:39:05,460 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 14:39:05,460 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 14:39:05,460 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 14:39:05,461 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 14:39:10,298 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:39:10,300 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:39:10,301 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:39:10,301 [test_set_gripper_angles.py-->line:75]:test_speeds:30
INFO 2025-03-21 14:39:10,301 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:39:10,301 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:39:15,302 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:39:15,302 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:39:15,303 [test_set_gripper_angles.py-->line:75]:test_speeds:101
INFO 2025-03-21 14:39:15,303 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:39:15,303 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:39:20,311 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:39:20,312 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:39:20,312 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:39:20,312 [test_set_gripper_angles.py-->line:44]:test_speed:50
INFO 2025-03-21 14:39:25,316 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:39:25,317 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:39:25,317 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:39:25,317 [test_set_gripper_angles.py-->line:44]:test_speed:100
INFO 2025-03-21 14:39:30,374 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:52:09,530 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:52:09,532 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:52:09,533 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:52:09,533 [test_set_gripper_angles.py-->line:75]:test_speeds:30
ERROR 2025-03-21 14:52:11,048 [test_set_gripper_angles.py-->line:81]:断言失败：用例设置任意关节超限未触发异常
INFO 2025-03-21 14:52:11,048 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:52:16,059 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:52:16,059 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:52:16,059 [test_set_gripper_angles.py-->line:75]:test_speeds:101
INFO 2025-03-21 14:52:16,059 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:52:16,059 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:52:21,061 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:52:21,061 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:52:21,061 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:52:21,062 [test_set_gripper_angles.py-->line:44]:test_speed:50
DEBUG 2025-03-21 14:52:24,562 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:52:24,562 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["speed"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [9, 9, 9, 9, 11, 9] != 50
DEBUG 2025-03-21 14:52:24,563 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:52:24,563 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:52:24,563 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:52:29,577 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:52:29,578 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:52:29,578 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:52:29,578 [test_set_gripper_angles.py-->line:44]:test_speed:100
DEBUG 2025-03-21 14:52:34,376 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:52:34,377 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["speed"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [39, 39, 39, 49, 49, 45] != 100
DEBUG 2025-03-21 14:52:34,377 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:52:34,378 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:52:34,378 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:52:39,838 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:53:59,277 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:53:59,279 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:53:59,279 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:53:59,279 [test_set_gripper_angles.py-->line:75]:test_speeds:30
ERROR 2025-03-21 14:54:00,792 [test_set_gripper_angles.py-->line:81]:断言失败：用例设置任意关节超限未触发异常
INFO 2025-03-21 14:54:00,792 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:55:34,095 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:55:34,097 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:55:34,097 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:55:34,097 [test_set_gripper_angles.py-->line:75]:test_speeds:30
ERROR 2025-03-21 14:55:34,579 [test_set_gripper_angles.py-->line:81]:断言失败：用例设置任意关节超限未触发异常
INFO 2025-03-21 14:55:34,579 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:55:39,588 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:55:39,588 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:55:39,588 [test_set_gripper_angles.py-->line:75]:test_speeds:101
INFO 2025-03-21 14:55:39,588 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:55:39,588 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:55:44,599 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:55:44,599 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:55:44,600 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:55:44,600 [test_set_gripper_angles.py-->line:44]:test_speed:50
DEBUG 2025-03-21 14:55:48,101 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:55:48,101 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [9, 9, 9, 9, 11, 9] != '[10,10,10,10,10,10]'
DEBUG 2025-03-21 14:55:48,102 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:55:48,102 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:55:48,102 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:55:53,118 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:55:53,118 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:55:53,118 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:55:53,118 [test_set_gripper_angles.py-->line:44]:test_speed:100
DEBUG 2025-03-21 14:55:57,932 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:55:57,932 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [39, 39, 39, 49, 49, 45] != '[40,40,40,50,50,50]'
DEBUG 2025-03-21 14:55:57,932 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:55:57,932 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:55:57,934 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:56:03,397 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 14:56:33,576 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 14:56:33,578 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 14:56:33,578 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:56:33,578 [test_set_gripper_angles.py-->line:75]:test_speeds:30
INFO 2025-03-21 14:56:33,578 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 14:56:33,578 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 14:56:38,582 [test_set_gripper_angles.py-->line:72]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 14:56:38,583 [test_set_gripper_angles.py-->line:74]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:56:38,583 [test_set_gripper_angles.py-->line:75]:test_speeds:101
INFO 2025-03-21 14:56:38,583 [test_set_gripper_angles.py-->line:87]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 14:56:38,583 [test_set_gripper_angles.py-->line:89]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 14:56:43,598 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:56:43,598 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:56:43,598 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 14:56:43,598 [test_set_gripper_angles.py-->line:44]:test_speed:50
DEBUG 2025-03-21 14:56:46,902 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:56:46,905 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [9, 9, 9, 9, 9, 9] != '[10,10,10,10,10,10]'
DEBUG 2025-03-21 14:56:46,907 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:56:46,907 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:56:46,907 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:56:51,923 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 14:56:51,923 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 14:56:51,923 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 14:56:51,924 [test_set_gripper_angles.py-->line:44]:test_speed:100
DEBUG 2025-03-21 14:56:56,701 [test_set_gripper_angles.py-->line:51]:请求类型断言成功
ERROR 2025-03-21 14:56:56,701 [test_set_gripper_angles.py-->line:60]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 58, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [39, 39, 39, 49, 50, 45] != '[40,40,40,50,50,50]'
DEBUG 2025-03-21 14:56:56,702 [test_set_gripper_angles.py-->line:61]:期望数据：1
DEBUG 2025-03-21 14:56:56,702 [test_set_gripper_angles.py-->line:62]:实际结果：1
INFO 2025-03-21 14:56:56,702 [test_set_gripper_angles.py-->line:67]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 14:57:02,175 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:02:10,446 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:02:10,448 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:02:10,448 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 15:02:10,498 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:02:10,499 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '[0,0,0,0,0,0]' != [0, 0, 0, 0, 1, 0]
DEBUG 2025-03-21 15:02:10,501 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 15:02:10,501 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 15:02:10,501 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:02:10,502 [test_get_gripper_angles.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-21 15:02:10,502 [test_get_gripper_angles.py-->line:35]:test_api:None
DEBUG 2025-03-21 15:02:10,545 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:02:10,546 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != [0, 0, 0, 0, 1, 0]
DEBUG 2025-03-21 15:02:10,546 [test_get_gripper_angles.py-->line:50]:期望数据：None
DEBUG 2025-03-21 15:02:10,547 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 15:02:10,547 [test_get_gripper_angles.py-->line:56]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-21 15:02:10,548 [test_get_gripper_angles.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-21 15:02:10,548 [test_get_gripper_angles.py-->line:35]:test_api:None
DEBUG 2025-03-21 15:02:10,591 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:02:10,591 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != [0, 0, 0, 0, 1, 0]
DEBUG 2025-03-21 15:02:10,592 [test_get_gripper_angles.py-->line:50]:期望数据：None
DEBUG 2025-03-21 15:02:10,592 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 15:02:10,592 [test_get_gripper_angles.py-->line:56]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-21 15:02:10,593 [test_get_gripper_angles.py-->line:33]:》》》》》用例【None】开始测试《《《《《
DEBUG 2025-03-21 15:02:10,593 [test_get_gripper_angles.py-->line:35]:test_api:None
DEBUG 2025-03-21 15:02:10,639 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:02:10,639 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: None != [0, 0, 0, 0, 1, 0]
DEBUG 2025-03-21 15:02:10,639 [test_get_gripper_angles.py-->line:50]:期望数据：None
DEBUG 2025-03-21 15:02:10,639 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 15:02:10,640 [test_get_gripper_angles.py-->line:56]:》》》》》用例【None】测试完成《《《《《
INFO 2025-03-21 15:02:10,642 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:02:34,205 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:02:34,207 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:02:34,207 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 15:02:34,261 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:02:34,262 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '[0,0,0,0,0,0]' != [0, 0, 0, 0, 1, 0]
DEBUG 2025-03-21 15:02:34,263 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 15:02:34,263 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 15:02:34,263 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:02:34,265 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:30:33,790 [test_set_gripper_pose.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:30:33,793 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:30:33,793 [test_set_gripper_pose.py-->line:65]:test_api:set_gripper_pose
INFO 2025-03-21 15:30:33,834 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:30:33,834 [test_set_gripper_pose.py-->line:65]:test_api:set_gripper_pose
INFO 2025-03-21 15:30:33,835 [test_set_gripper_pose.py-->line:34]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:30:33,835 [test_set_gripper_pose.py-->line:36]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:30:33,835 [test_set_gripper_pose.py-->line:37]:test_pose:0
DEBUG 2025-03-21 15:30:33,835 [test_set_gripper_pose.py-->line:38]:test_rank:1
DEBUG 2025-03-21 15:30:33,892 [test_set_gripper_pose.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:30:33,892 [test_set_gripper_pose.py-->line:58]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:30:33,893 [test_set_gripper_pose.py-->line:34]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:30:33,893 [test_set_gripper_pose.py-->line:36]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:30:33,893 [test_set_gripper_pose.py-->line:37]:test_pose:1
DEBUG 2025-03-21 15:30:33,893 [test_set_gripper_pose.py-->line:38]:test_rank:2
DEBUG 2025-03-21 15:30:34,350 [test_set_gripper_pose.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:30:34,350 [test_set_gripper_pose.py-->line:58]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:30:34,351 [test_set_gripper_pose.py-->line:34]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:30:34,351 [test_set_gripper_pose.py-->line:36]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:30:34,351 [test_set_gripper_pose.py-->line:37]:test_pose:2
DEBUG 2025-03-21 15:30:34,351 [test_set_gripper_pose.py-->line:38]:test_rank:3
DEBUG 2025-03-21 15:30:37,360 [test_set_gripper_pose.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:30:37,360 [test_set_gripper_pose.py-->line:58]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:30:37,361 [test_set_gripper_pose.py-->line:34]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:30:37,361 [test_set_gripper_pose.py-->line:36]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:30:37,361 [test_set_gripper_pose.py-->line:37]:test_pose:3
DEBUG 2025-03-21 15:30:37,361 [test_set_gripper_pose.py-->line:38]:test_rank:4
DEBUG 2025-03-21 15:30:40,371 [test_set_gripper_pose.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:30:40,371 [test_set_gripper_pose.py-->line:58]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:30:40,372 [test_set_gripper_pose.py-->line:34]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:30:40,372 [test_set_gripper_pose.py-->line:36]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:30:40,372 [test_set_gripper_pose.py-->line:37]:test_pose:4
DEBUG 2025-03-21 15:30:40,372 [test_set_gripper_pose.py-->line:38]:test_rank:5
DEBUG 2025-03-21 15:30:43,382 [test_set_gripper_pose.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:30:43,383 [test_set_gripper_pose.py-->line:58]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:30:49,394 [test_set_gripper_pose.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:31:43,843 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:31:43,844 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:31:43,845 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
INFO 2025-03-21 15:31:46,862 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:31:46,863 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
INFO 2025-03-21 15:31:49,870 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:31:49,870 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:31:49,870 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 15:31:49,871 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 15:31:49,916 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:31:49,916 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 15:31:49,916 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:31:52,928 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:31:52,928 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:31:52,928 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 15:31:52,929 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 15:31:52,974 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:31:52,974 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 15:31:52,974 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:31:55,974 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:31:55,974 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:31:55,974 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 15:31:55,974 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 15:31:56,021 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:31:56,021 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 15:31:56,021 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:31:59,027 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:31:59,028 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:31:59,028 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 15:31:59,028 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 15:31:59,074 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:31:59,074 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 15:31:59,074 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:32:02,077 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:32:02,078 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:02,078 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 15:32:02,078 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 15:32:02,124 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:02,124 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 15:32:02,124 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:32:08,142 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:32:16,690 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:32:16,692 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:32:16,692 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:16,692 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:32:16,692 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 15:32:16,692 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 15:32:19,706 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:32:19,706 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:19,706 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:32:19,706 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 15:32:19,706 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 15:32:22,716 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:32:22,716 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:22,717 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 15:32:22,717 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 15:32:22,762 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:22,763 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 15:32:22,763 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:32:25,772 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:32:25,772 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:25,772 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 15:32:25,772 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 15:32:25,820 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:25,820 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 15:32:25,820 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:32:28,830 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:32:28,830 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:28,830 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 15:32:28,830 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 15:32:28,877 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:28,877 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 15:32:28,877 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:32:31,877 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:32:31,877 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:31,877 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 15:32:31,877 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 15:32:31,924 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:31,924 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 15:32:31,924 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:32:34,935 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:32:34,936 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:32:34,936 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 15:32:34,936 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 15:32:34,982 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:32:34,982 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 15:32:34,982 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:32:40,998 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:33:31,150 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:33:31,152 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:33:31,152 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:31,153 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:33:31,153 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 15:33:31,153 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 15:33:34,164 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:33:34,164 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:34,164 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:33:34,165 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 15:33:34,165 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 15:33:37,170 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:33:37,170 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:37,170 [test_set_gripper_pose.py-->line:71]:test_pose:0
ERROR 2025-03-21 15:33:37,217 [test_set_gripper_pose.py-->line:77]:断言失败：用例设置is_free参数超限未触发异常
INFO 2025-03-21 15:33:37,217 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 15:33:40,225 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:33:40,225 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:40,225 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 15:33:40,226 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 15:33:40,270 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:33:40,270 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 15:33:40,270 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:33:43,285 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:33:43,285 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:43,286 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 15:33:43,286 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 15:33:43,332 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:33:43,332 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 15:33:43,332 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:33:46,343 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:33:46,343 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:46,343 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 15:33:46,343 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 15:33:46,389 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:33:46,389 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 15:33:46,389 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:33:49,404 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:33:49,404 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:49,404 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 15:33:49,404 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 15:33:49,451 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:33:49,451 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 15:33:49,451 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:33:52,453 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:33:52,454 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:33:52,454 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 15:33:52,454 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 15:33:52,501 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:33:52,501 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 15:33:52,501 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:33:58,529 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,418 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,418 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,418 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 15:34:20,418 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:34:20,471 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:34:20,471 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 15:34:20,471 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 15:34:20,472 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,474 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,474 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,474 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 15:34:20,519 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:34:20,519 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '[0,0,0,0,0,0]' != [0, 0, 0, 0, 0, 0]
DEBUG 2025-03-21 15:34:20,535 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 15:34:20,536 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 0, 0]
INFO 2025-03-21 15:34:20,536 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:34:20,537 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,539 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,539 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,539 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 15:34:20,539 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:34:20,581 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:34:20,581 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 15:34:20,581 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 15:34:20,582 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,583 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,584 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,584 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 15:34:20,584 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:34:20,628 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:34:20,628 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 15:34:20,628 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 15:34:20,630 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,631 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,631 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,632 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,632 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,676 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,722 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,769 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:20,815 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,815 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-21 15:34:20,815 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,815 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,816 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,816 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:20,861 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,861 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 15:34:20,861 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,862 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,862 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,862 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 15:34:20,908 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:20,909 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:20,910 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:20,911 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,911 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:20,911 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:20,954 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,001 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:21,049 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,049 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-21 15:34:21,049 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:21,050 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,050 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,050 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,095 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,142 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,189 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,190 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:21,191 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:21,191 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,191 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,191 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,234 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,281 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,328 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,376 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,423 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,469 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,470 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:34:21,470 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:21,470 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 15:34:21,470 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,470 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:21,472 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:21,472 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,472 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,472 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,516 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,563 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,611 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,658 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,704 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 15:34:21,751 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:21,752 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:21,754 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:21,754 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,754 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,754 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:21,797 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,798 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:21,798 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:21,800 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,800 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,800 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:21,843 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,843 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:21,843 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:21,843 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,844 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,844 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,890 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:21,937 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,937 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:21,937 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:21,937 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,937 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,938 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:21,985 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:21,985 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:21,985 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:21,985 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:34:21,985 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:21,986 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:22,031 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,031 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 15:34:22,031 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:34:22,031 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:34:22,032 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,033 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:22,034 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:22,034 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,034 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,034 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:22,078 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,078 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,079 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,079 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,079 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,079 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,080 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,080 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:22,125 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,125 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,125 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,125 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,125 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,126 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,126 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,126 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:22,173 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,173 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,173 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,173 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,173 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,174 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,174 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,174 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:22,220 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,220 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,220 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,221 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,221 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,221 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,221 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,221 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:22,265 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,265 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,266 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,266 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,266 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,267 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,267 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,267 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 100
DEBUG 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:51]:期望数据：1
DEBUG 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:52]:实际结果：100
INFO 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 15:34:22,311 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,312 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,312 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:22,312 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 15:34:22,312 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,312 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,313 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:34:22,313 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:22,313 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 15:34:22,313 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,313 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:22,314 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:22,314 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,314 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,315 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:22,358 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,358 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,372 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:22,420 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,420 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,420 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,420 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,420 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,421 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,421 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,421 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:22,467 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,467 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,467 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,468 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,468 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,468 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,468 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,468 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:22,514 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,514 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,515 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,515 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,515 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,516 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,516 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,516 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,562 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:22,609 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:34:22,609 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 15:34:22,609 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:34:22,609 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 15:34:22,609 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,610 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:22,612 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:22,613 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,613 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,613 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,655 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:34:22,703 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,703 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 15:34:22,703 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,703 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,703 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,704 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,750 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,797 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,844 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:34:22,891 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:34:22,891 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 15:34:22,891 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 15:34:22,891 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,891 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 15:34:22,892 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:34:22,893 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:22,894 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:22,894 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:34:22,895 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 15:34:22,895 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 15:34:23,203 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:34:23,203 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 15:34:23,203 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:34:26,212 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:34:26,212 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 15:34:26,212 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 15:34:31,264 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 15:34:31,264 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 15:34:31,264 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:34:34,267 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:34:34,267 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 15:34:34,267 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 15:34:43,636 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-21 15:34:43,636 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 15:34:43,636 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:34:46,642 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:34:46,642 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 15:34:46,642 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 15:34:51,624 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-21 15:34:51,624 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 15:34:51,624 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:34:55,024 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:55,026 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:55,026 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 15:34:55,026 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 15:34:55,026 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:34:55,073 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:34:55,073 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 15:34:55,073 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 15:34:55,073 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:34:55,076 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:34:55,077 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:34:55,077 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:34:55,077 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 15:34:55,077 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 15:34:55,077 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 15:35:00,093 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 15:35:00,093 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:35:00,093 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 15:35:00,093 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 15:35:00,093 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 15:35:05,108 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:35:05,108 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:35:05,108 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 15:35:05,108 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 15:35:08,443 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:35:08,443 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [9, 9, 9, 9, 9, 9] != '[10,10,10,10,10,10]'
DEBUG 2025-03-21 15:35:08,444 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:35:08,444 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:35:08,444 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:35:13,448 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:35:13,449 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:35:13,449 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 15:35:13,450 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 15:35:18,238 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:35:18,238 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,case["angles"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: [39, 39, 39, 49, 50, 45] != '[40,40,40,50,50,50]'
DEBUG 2025-03-21 15:35:18,238 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:35:18,238 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:35:18,238 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:35:23,705 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:35:23,707 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 15:35:23,816 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 15:35:23,816 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 15:35:23,816 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 15:35:23,860 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:23,863 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 15:35:30,393 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 15:35:30,393 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 15:35:30,406 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 15:35:30,406 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 15:35:30,406 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 15:35:30,407 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:35:30,407 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:30,407 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 15:35:39,937 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:35:39,937 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 15:35:39,937 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 15:35:39,937 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:35:39,937 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:39,938 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:49,103 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:35:53,661 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:36:00,289 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 15:36:06,750 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:06,750 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 15:36:06,750 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 15:36:06,751 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:06,752 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:06,752 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,752 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:36:06,752 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 15:36:06,753 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 15:36:06,753 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:06,753 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,753 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:36:06,753 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:36:06,797 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 15:36:06,843 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:36:06,843 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 15:36:06,843 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 15:36:06,843 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 15:36:06,845 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 15:36:06,937 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:36:06,937 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 15:36:06,937 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 15:36:06,984 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 15:36:06,986 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 15:36:06,987 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:06,987 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:06,987 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 15:36:06,987 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:36:09,088 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:09,088 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:36:09,103 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:09,103 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:09,103 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:09,104 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:09,104 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:09,104 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 15:36:09,104 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 15:36:11,208 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:11,208 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 15:36:11,208 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:11,208 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:11,208 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:11,209 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:11,210 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:11,210 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 15:36:11,210 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:36:13,308 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:13,308 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:36:13,308 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:13,308 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:13,309 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:13,310 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:13,310 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:13,310 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 15:36:13,310 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:36:15,412 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:15,412 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 15:36:15,413 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:36:17,511 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 15:36:17,512 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:36:19,610 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:36:19,610 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-21 15:36:19,611 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:36:19,611 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:36:19,611 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:36:31,949 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:31,950 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:31,952 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,953 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,954 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:31,955 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:32,057 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,150 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:32,151 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:32,244 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:32,340 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:32,434 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,528 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,528 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 15:36:32,528 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 15:36:32,807 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:32,808 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:32,808 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,808 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,810 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:32,811 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,812 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:32,813 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:32,901 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:32,994 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:32,995 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:33,087 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:33,181 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:33,274 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,274 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 15:36:33,274 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:33,274 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,274 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:36:33,275 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:33,275 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:33,367 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,367 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 15:36:33,367 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 15:36:33,650 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:33,652 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:33,653 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,654 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,655 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:33,656 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:33,745 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:33,838 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:33,930 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:33,930 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 15:36:33,930 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:33,930 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:33,930 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:33,931 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:33,931 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,024 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,024 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 15:36:34,024 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:34,025 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,025 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:34,025 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:34,025 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:34,118 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,212 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,213 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 15:36:34,213 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 15:36:34,491 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,493 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,494 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:34,495 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:34,585 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:34,677 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:34,771 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,866 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,866 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 15:36:34,866 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:34,866 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,867 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,867 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:34,867 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:34,960 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:34,961 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,054 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,054 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 15:36:35,054 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 15:36:35,333 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:35,334 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:35,336 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,337 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,339 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:35,340 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:35,428 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,521 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:35,522 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:35,614 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,707 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,707 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 15:36:35,707 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:35,707 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,707 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,708 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:35,708 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:35,801 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:36:35,896 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:35,896 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 15:36:35,896 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 15:36:36,177 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,180 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:36,181 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,182 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:36:36,183 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:36,184 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:36,272 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,367 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,367 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 15:36:36,367 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:36,367 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,367 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,368 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:36,368 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,460 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,460 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 15:36:36,460 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:36,460 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,460 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,461 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:36,461 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,554 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,554 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 15:36:36,554 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:36,554 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,554 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,555 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:36,555 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:36,648 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:36,742 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:36,742 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 15:36:36,742 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 15:36:37,022 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:37,024 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:37,024 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,024 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,025 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,026 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,027 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:37,028 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,115 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:37,116 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,209 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:37,210 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:37,302 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,397 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,397 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 15:36:37,397 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,397 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,397 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,398 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:37,398 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:37,491 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:36:37,585 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,585 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 15:36:37,585 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 15:36:37,880 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,884 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,885 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,886 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:36:37,887 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,888 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,888 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:36:37,888 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:37,993 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:37,993 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 15:36:37,993 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:37,993 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:37,993 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:37,994 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:36:37,994 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:36:38,085 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:36:38,179 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:38,271 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 15:36:38,272 [test_set_gripper_mini_pressure.py-->line:53]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_mini_pressure.py", line 50, in test_set_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 15:36:38,287 [test_set_gripper_mini_pressure.py-->line:54]:期望数据：1
DEBUG 2025-03-21 15:36:38,287 [test_set_gripper_mini_pressure.py-->line:55]:实际结果：0
INFO 2025-03-21 15:36:38,287 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:38,288 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:38,288 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:38,288 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:36:38,288 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:36:38,378 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:36:38,472 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:36:38,472 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 15:36:38,472 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:36:38,751 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:36:38,753 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:36:38,754 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:38,754 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:38,754 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:36:38,754 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 15:36:38,754 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:41,755 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:41,755 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:41,755 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:36:41,755 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 15:36:41,755 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:44,762 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:36:44,762 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:44,762 [test_set_gripper_pose.py-->line:71]:test_pose:0
ERROR 2025-03-21 15:36:44,809 [test_set_gripper_pose.py-->line:77]:断言失败：用例设置is_free参数超限未触发异常
INFO 2025-03-21 15:36:44,809 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 15:36:47,814 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:36:47,814 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:47,814 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 15:36:47,814 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 15:36:47,860 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:36:47,860 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 15:36:47,860 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:36:50,867 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:36:50,867 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:50,867 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 15:36:50,867 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 15:36:50,913 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:36:50,913 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 15:36:50,913 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:36:53,921 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:36:53,921 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:53,921 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 15:36:53,921 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 15:36:53,969 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:36:53,969 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 15:36:53,969 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:36:56,977 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:36:56,977 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:36:56,977 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 15:36:56,977 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 15:36:57,024 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:36:57,024 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 15:36:57,024 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:37:00,037 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:37:00,037 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:37:00,037 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 15:37:00,037 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 15:37:00,082 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:37:00,082 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 15:37:00,082 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:37:06,098 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:46:52,239 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:46:52,241 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:46:52,241 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:46:52,241 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 15:46:52,241 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 15:46:52,241 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 15:46:57,251 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 15:46:57,251 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:46:57,251 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 15:46:57,251 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 15:46:57,251 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 15:47:02,262 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:47:02,262 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:47:02,262 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 15:47:02,263 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 15:47:05,570 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:47:05,574 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 9, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 9, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 15:47:05,588 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:47:05,588 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:47:05,588 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:47:10,595 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:47:10,595 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:47:10,595 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 15:47:10,595 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 15:47:15,379 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:47:15,380 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 49, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 49, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 15:47:15,380 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:47:15,380 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:47:15,380 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:47:20,829 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,263 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,263 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,263 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 15:51:55,265 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:51:55,309 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:51:55,309 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 15:51:55,309 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 15:51:55,311 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,313 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,313 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,313 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 15:51:55,357 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 15:51:55,357 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: '[0,0,0,0,0,0]' != [0, 0, 0, 0, 0, 0]
DEBUG 2025-03-21 15:51:55,360 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 15:51:55,360 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 0, 0]
INFO 2025-03-21 15:51:55,360 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:51:55,362 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,364 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,364 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,364 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 15:51:55,364 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:51:55,419 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:51:55,420 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 15:51:55,420 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 15:51:55,421 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,422 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,422 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,422 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 15:51:55,423 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:51:55,465 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:51:55,465 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 15:51:55,465 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 15:51:55,466 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,468 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,468 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,468 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,468 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:55,513 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,513 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-21 15:51:55,514 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,514 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,514 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,514 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,559 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,605 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:55,653 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,653 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-21 15:51:55,653 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,653 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,653 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,654 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:55,700 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,700 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 15:51:55,700 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,700 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,700 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,701 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:55,747 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:55,748 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:55,749 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:55,749 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,749 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,749 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,795 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:55,843 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,843 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-21 15:51:55,843 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:55,843 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,843 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,844 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:55,889 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,889 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-21 15:51:55,889 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:55,889 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,890 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,890 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:55,936 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,936 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-21 15:51:55,936 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:55,936 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,937 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,937 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:55,983 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 15:51:56,030 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,031 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:56,032 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:56,032 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,032 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,032 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:56,076 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,076 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 15:51:56,076 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,076 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,076 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,077 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:56,122 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,123 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 15:51:56,123 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,123 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,123 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,123 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,170 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:56,216 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,217 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 15:51:56,217 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,217 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,217 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,217 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,262 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:56,309 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,309 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 15:51:56,309 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 15:51:56,309 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,309 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,310 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:56,312 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:56,312 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,312 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,312 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:56,355 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,356 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 15:51:56,356 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,356 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,356 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,356 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:56,402 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,402 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 15:51:56,402 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,402 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,404 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,404 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:56,448 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,448 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 15:51:56,448 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,448 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,449 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,449 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,497 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:56,544 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,544 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 15:51:56,544 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,544 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,545 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,545 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,591 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 15:51:56,592 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,593 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:56,595 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:56,595 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,595 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,595 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,638 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,685 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:56,732 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,732 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,732 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,732 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,732 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,733 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,779 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,826 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,873 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:51:56,874 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:56,875 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:56,876 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:56,876 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,877 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:56,877 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:56,919 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,919 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 15:51:56,920 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:56,920 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,920 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:56,920 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:56,966 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:57,015 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:57,062 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,062 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 15:51:57,062 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:57,062 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,063 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:57,063 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:57,108 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 15:51:57,155 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,156 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:57,158 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:57,158 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,158 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,158 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:57,202 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,202 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,203 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,203 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,203 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,204 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,204 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,204 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:57,249 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,250 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,250 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,250 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,250 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,250 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,251 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,251 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:57,297 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,297 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,297 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,297 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,297 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,298 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,298 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,298 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:57,344 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,344 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,345 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:57,392 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,392 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,392 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,392 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,392 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,393 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,393 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,393 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 15:51:57,440 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:57,441 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 15:51:57,442 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,442 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:57,443 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:57,443 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,444 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,444 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 15:51:57,486 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,486 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 15:51:57,487 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,487 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,487 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,487 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 15:51:57,533 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,533 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 15:51:57,533 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,534 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,534 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,534 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,580 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 15:51:57,627 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,627 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 15:51:57,627 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,627 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,628 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,628 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,673 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 15:51:57,720 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 15:51:57,720 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 15:51:57,720 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 15:51:57,721 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:51:57,722 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:51:57,723 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:51:57,723 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:51:57,724 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 15:51:57,724 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 15:51:58,016 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:51:58,016 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 15:51:58,016 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:52:01,023 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:52:01,023 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 15:52:01,023 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 15:52:06,070 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 15:52:06,070 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 15:52:06,070 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:52:09,072 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:52:09,072 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 15:52:09,072 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 15:52:25,722 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-21 15:52:25,722 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-21 15:52:25,722 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:52:28,728 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 15:52:28,728 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 15:52:28,728 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 15:52:35,416 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-21 15:52:35,416 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 15:52:35,416 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 15:52:38,796 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:52:38,799 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:52:38,799 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 15:52:38,799 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 15:52:38,799 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 15:52:38,842 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:52:38,842 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 15:52:38,842 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 15:52:38,843 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 15:52:38,845 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 15:52:43,851 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 15:52:43,851 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:52:43,851 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 15:52:43,852 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 15:52:43,852 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 15:52:48,865 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:52:48,865 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:52:48,865 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 15:52:48,865 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 15:52:52,173 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:52:52,173 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 9, 8] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 9, 8]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 15:52:52,175 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:52:52,175 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:52:52,175 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:52:57,177 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 15:52:57,178 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 15:52:57,178 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 15:52:57,178 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 15:53:01,974 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 15:53:01,975 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 15:53:01,975 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 15:53:01,975 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 15:53:01,975 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 15:53:07,426 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 15:53:07,427 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:53:07,428 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 15:53:07,429 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 15:53:07,429 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 15:53:07,429 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,429 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 15:53:07,429 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 15:53:07,526 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 15:53:07,526 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 15:53:07,526 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 15:53:07,573 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 15:53:07,574 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:53:07,574 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,574 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:07,574 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 15:53:07,574 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:07,576 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 15:53:14,105 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 15:53:14,105 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 15:53:14,107 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 15:53:14,107 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 15:53:14,107 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:14,107 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:14,108 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:14,108 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:23,610 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:32,782 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:37,333 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 15:53:43,981 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 15:53:50,386 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:53:50,386 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 15:53:50,386 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 15:53:50,387 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,389 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:53:50,390 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 15:53:50,433 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 15:53:50,480 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 15:53:50,480 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 15:53:50,480 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 15:53:50,480 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 15:53:50,483 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 15:53:50,484 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 15:53:50,574 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 15:53:50,574 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 15:53:50,574 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 15:53:50,621 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 15:53:50,623 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:53:52,728 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:53:52,728 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:53:52,730 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 15:53:52,731 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 15:53:54,833 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:53:54,833 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 15:53:54,833 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:53:54,833 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:53:54,833 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:53:54,834 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:53:54,834 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:54,834 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 15:53:54,834 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:53:56,927 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
INFO 2025-03-21 15:53:56,927 [test_set_gripper_joint_angle.py-->line:63]:请求结果断言成功，用例【设置3关节运动到100度】测试成功
INFO 2025-03-21 15:53:56,927 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:53:56,927 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:53:56,927 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:56,929 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 15:53:56,929 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:53:59,032 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:53:59,032 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:53:59,032 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:53:59,032 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:53:59,032 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:53:59,034 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:53:59,034 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:53:59,034 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 15:53:59,034 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:54:01,136 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:54:01,136 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 15:54:01,137 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:54:01,137 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:54:01,137 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:54:01,137 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到100度】开始测试《《《《《
DEBUG 2025-03-21 15:54:01,138 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 15:54:01,138 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 15:54:01,138 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 15:54:03,238 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 15:54:03,238 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-21 15:54:03,238 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 15:54:03,238 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 15:54:03,238 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到100度】测试完成《《《《《
INFO 2025-03-21 15:54:15,570 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:15,572 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:15,572 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,573 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,574 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:15,576 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:15,664 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:15,759 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:15,759 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 15:54:15,759 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:15,759 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,759 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,760 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:15,760 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:15,852 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:15,945 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,039 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:16,040 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,133 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,133 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 15:54:16,133 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 15:54:16,414 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,417 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,418 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:16,420 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 15:54:16,421 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:16,421 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,421 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,421 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:16,421 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,524 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,524 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 15:54:16,524 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:16,524 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,524 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,525 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:16,525 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:16,616 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:16,710 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:16,804 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:16,896 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:16,989 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:16,989 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 15:54:16,989 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 15:54:17,274 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:17,276 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,277 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,278 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,281 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:17,282 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,381 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,381 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 15:54:17,381 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:17,381 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,382 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,382 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:17,382 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,472 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,472 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 15:54:17,472 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:17,472 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,473 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,473 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:17,473 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,566 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,566 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 15:54:17,566 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:17,566 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,566 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,567 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:17,567 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,661 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:17,662 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,756 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,756 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 15:54:17,756 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:17,756 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 15:54:17,757 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 15:54:17,757 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:17,757 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:17,849 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:17,849 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 15:54:17,849 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 15:54:18,129 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,130 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:18,133 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,223 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,224 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 15:54:18,224 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,224 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,224 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,225 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:18,225 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:18,318 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:18,411 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,505 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,505 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 15:54:18,505 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,506 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,506 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,506 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:18,506 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,601 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,601 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 15:54:18,601 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,601 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,601 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 15:54:18,602 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:18,602 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:18,694 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:18,694 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 15:54:18,694 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 15:54:18,975 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:18,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,978 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,979 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,979 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,979 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:18,980 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:19,069 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,164 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,164 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 15:54:19,164 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,164 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,164 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:19,165 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:19,165 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:19,259 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:19,351 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,445 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,445 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 15:54:19,445 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,445 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,446 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 15:54:19,446 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:19,446 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 15:54:19,538 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,538 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 15:54:19,538 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 15:54:19,818 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:19,820 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:19,820 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,820 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:54:19,821 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:19,822 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:19,913 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,004 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,004 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 15:54:20,004 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:20,004 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,005 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:20,005 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:20,005 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:20,099 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:20,193 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 15:54:20,287 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:20,288 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,380 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,380 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 15:54:20,380 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 15:54:20,665 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:20,667 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:20,667 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,667 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,667 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,668 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:20,670 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,671 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,671 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:20,671 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,758 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,758 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 15:54:20,758 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:20,758 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,759 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,759 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:20,759 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,852 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:20,853 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:20,945 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:20,945 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 15:54:20,946 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:20,946 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:20,946 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:20,946 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:20,946 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:21,039 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:21,040 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:21,131 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:21,132 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 15:54:21,225 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,225 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 15:54:21,225 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 15:54:21,523 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:21,525 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:21,525 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,525 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,526 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,527 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 15:54:21,528 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:21,630 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,630 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:21,630 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:21,630 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,631 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,631 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 15:54:21,631 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,723 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 15:54:21,724 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 15:54:21,818 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 15:54:21,913 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:22,006 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:22,006 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:22,006 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:22,006 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 15:54:22,007 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 15:54:22,007 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 15:54:22,007 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 15:54:22,100 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 15:54:22,101 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 15:54:22,101 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 15:54:22,379 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 15:54:22,381 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 15:54:22,382 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:54:22,382 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:22,382 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:54:22,382 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 15:54:22,382 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 15:54:25,384 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:54:25,384 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:25,384 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 15:54:25,384 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 15:54:25,384 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 15:54:28,389 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 15:54:28,390 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:28,390 [test_set_gripper_pose.py-->line:71]:test_pose:0
ERROR 2025-03-21 15:54:28,436 [test_set_gripper_pose.py-->line:77]:断言失败：用例设置is_free参数超限未触发异常
INFO 2025-03-21 15:54:28,436 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 15:54:31,445 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 15:54:31,445 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:31,445 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 15:54:31,445 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 15:54:31,491 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:54:31,491 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 15:54:31,491 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 15:54:34,497 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:54:34,497 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:34,497 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 15:54:34,497 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 15:54:34,544 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:54:34,544 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 15:54:34,544 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:54:37,559 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:54:37,559 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:37,559 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 15:54:37,559 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 15:54:37,607 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:54:37,607 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 15:54:37,607 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 15:54:40,613 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 15:54:40,613 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:40,613 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 15:54:40,613 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 15:54:40,660 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:54:40,660 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 15:54:40,660 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 15:54:43,663 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 15:54:43,663 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 15:54:43,663 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 15:54:43,663 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 15:54:43,711 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 15:54:43,711 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 15:54:43,711 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 15:54:49,724 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,221 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,222 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,222 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 16:45:03,222 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:45:03,278 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:45:03,279 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 16:45:03,279 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 16:45:03,280 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,282 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,282 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,282 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 16:45:03,325 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:45:03,325 [test_get_gripper_angles.py-->line:54]:请求结果断言成功，用例【正确获取夹爪全角度】测试成功
INFO 2025-03-21 16:45:03,326 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:45:03,326 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,328 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,328 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,329 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 16:45:03,329 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:45:03,371 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:45:03,371 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 16:45:03,371 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 16:45:03,372 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,373 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,374 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,374 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 16:45:03,374 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:45:03,418 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:45:03,418 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 16:45:03,418 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 16:45:03,419 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,420 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,420 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,420 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,422 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,465 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:03,511 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,511 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-21 16:45:03,511 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,511 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,511 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,512 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:03,558 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,558 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-21 16:45:03,558 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,558 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,559 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,559 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,605 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,652 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 16:45:03,697 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:03,698 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,698 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:45:03,698 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:03,698 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 16:45:03,698 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:03,699 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,700 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,701 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,701 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,701 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,745 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,791 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:03,836 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,836 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-21 16:45:03,836 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,836 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,837 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,837 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:03,883 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,883 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-21 16:45:03,883 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,883 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,883 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,884 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:03,929 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,929 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 16:45:03,929 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,929 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,930 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,930 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:03,975 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 16:45:03,976 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:03,977 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:03,978 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:03,979 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:03,979 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:03,979 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,021 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,068 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,114 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,160 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:04,206 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,206 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 16:45:04,206 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,206 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,206 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,207 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,252 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,253 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:04,254 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:04,254 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,255 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,255 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:04,299 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,299 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 16:45:04,299 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,300 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,300 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,300 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:04,345 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,346 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 16:45:04,346 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,346 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,346 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,346 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,391 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,438 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:04,484 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,484 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 16:45:04,484 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,484 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,484 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,485 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,532 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 16:45:04,533 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,534 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:04,535 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:04,535 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,535 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,536 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,578 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,625 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,671 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:04,717 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,717 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,717 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,717 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,717 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,718 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:04,764 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,764 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,764 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,764 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,764 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,765 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:04,810 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,810 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 16:45:04,810 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:45:04,810 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,810 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:04,811 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:45:04,812 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:04,812 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:04,813 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:04,813 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,813 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:04,813 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:04,857 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:04,903 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:04,950 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:04,998 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:05,045 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 16:45:05,092 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,093 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,093 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:45:05,093 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:05,093 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 16:45:05,093 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,094 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:05,096 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:05,096 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,096 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,096 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:05,139 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,139 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,148 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,148 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,149 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,150 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,150 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,150 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:05,201 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,201 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,202 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,202 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,202 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,203 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,203 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,203 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:05,248 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,248 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,248 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,248 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,248 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,249 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,249 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,249 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:05,295 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,295 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,295 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,296 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,296 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,296 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,296 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,296 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:05,341 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,341 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,341 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,341 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,341 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,343 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,343 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,343 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:05,388 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:45:05,388 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 16:45:05,388 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:45:05,388 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 16:45:05,389 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,390 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:05,391 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:05,392 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,392 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,392 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:45:05,435 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,435 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 16:45:05,435 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,435 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,435 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,436 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,482 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,528 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,575 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,621 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 16:45:05,668 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 16:45:05,669 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,670 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,670 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:45:05,670 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 16:45:05,670 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 16:45:05,670 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:45:05,671 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:05,672 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:05,672 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:45:05,673 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 16:45:05,673 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 16:45:05,980 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:45:05,980 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 16:45:05,980 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:45:08,985 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:45:08,985 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 16:45:08,985 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 16:45:14,040 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 16:45:14,040 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 16:45:14,040 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:45:17,043 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:45:17,043 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 16:45:17,043 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 16:45:26,751 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-21 16:45:26,751 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 3
DEBUG 2025-03-21 16:45:26,753 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-21 16:45:26,754 [test_get_gripper_status.py-->line:120]:实际结果：3
INFO 2025-03-21 16:45:26,754 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:45:29,769 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:45:29,770 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 16:45:29,770 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 16:45:35,330 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-21 16:45:35,330 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 16:45:35,330 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:45:38,724 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:38,725 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:38,726 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 16:45:38,726 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 16:45:38,726 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:45:38,769 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:45:38,769 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 16:45:38,769 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 16:45:38,770 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:45:38,772 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:45:38,772 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:45:38,773 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:45:38,773 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 16:45:38,773 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 16:45:38,773 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 16:45:43,784 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 16:45:43,784 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:45:43,784 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 16:45:43,784 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 16:45:43,784 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 16:45:48,784 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:45:48,784 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:45:48,784 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 16:45:48,785 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 16:45:52,074 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 16:45:52,074 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 9, 8] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 9, 8]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 16:45:52,078 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 16:45:52,078 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 16:45:52,078 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:45:57,090 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:45:57,090 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:45:57,091 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 16:45:57,091 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 16:46:01,877 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 16:46:01,877 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 16:46:01,878 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 16:46:01,878 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 16:46:01,878 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:46:07,333 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:46:07,336 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:46:07,336 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 16:46:07,337 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 16:46:07,338 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,338 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:46:07,338 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 16:46:07,429 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 16:46:07,429 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 16:46:07,429 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 16:46:07,476 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:46:07,478 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:07,479 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 16:46:13,993 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 16:46:13,993 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 16:46:13,995 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 16:46:13,995 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 16:46:13,995 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:13,996 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:13,996 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:13,996 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:23,500 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 16:46:32,677 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:46:32,678 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 16:46:32,678 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:32,678 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:32,678 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:32,678 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 16:46:37,236 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:46:37,236 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 16:46:37,236 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:37,236 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:37,237 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:37,237 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:46:43,873 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 16:46:50,267 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:46:50,267 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 16:46:50,267 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 16:46:50,267 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 16:46:50,269 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:46:50,269 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,269 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:46:50,269 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 16:46:50,270 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 16:46:50,270 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 16:46:50,270 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,270 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:46:50,270 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 16:46:50,315 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:46:50,315 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 16:46:50,315 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 16:46:50,316 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,316 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:46:50,316 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 16:46:50,362 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:46:50,362 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 16:46:50,362 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 16:46:50,363 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 16:46:50,365 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 16:46:50,366 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 16:46:50,456 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 16:46:50,456 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 16:46:50,456 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 16:46:50,502 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 16:46:50,504 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:46:52,606 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:46:52,606 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:46:52,608 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:46:52,608 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:46:52,608 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:46:52,608 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-21 16:46:52,609 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:52,609 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 16:46:52,609 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 16:46:54,711 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:46:54,711 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 16:46:54,712 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:46:54,712 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:46:54,712 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-21 16:46:54,713 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:46:54,713 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:54,713 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 16:46:54,713 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:46:56,816 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:46:56,816 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 16:46:56,817 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:46:58,919 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:46:58,919 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:46:58,920 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:46:58,920 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:46:58,920 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:46:58,920 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:46:58,921 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:46:58,921 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 16:46:58,921 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:47:01,019 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:47:01,019 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:47:01,020 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:47:01,020 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:47:01,020 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:47:01,021 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:47:01,021 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:47:01,021 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 16:47:01,021 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:47:03,126 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:47:03,126 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-21 16:47:03,127 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:47:03,127 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:47:03,127 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:47:15,459 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:15,461 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:15,461 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:15,462 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,463 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:15,464 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,551 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:15,552 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:15,646 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:15,740 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:15,832 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:15,927 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:15,927 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 16:47:15,927 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:15,927 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:47:15,927 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:47:15,928 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:15,928 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,021 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,021 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 16:47:16,021 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 16:47:16,301 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,303 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:47:16,304 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,305 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:16,306 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:16,395 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:16,490 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:16,583 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:16,676 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:16,771 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:16,864 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:16,864 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 16:47:16,864 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 16:47:17,144 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,146 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,147 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,149 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,150 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,150 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:17,150 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,236 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,236 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 16:47:17,236 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,236 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,236 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,237 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:17,237 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:17,330 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:17,423 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,517 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,517 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 16:47:17,518 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,518 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,518 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,518 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:17,518 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:17,610 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:17,705 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:17,705 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 16:47:17,705 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 16:47:17,985 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:17,987 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,988 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,989 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:17,990 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:18,078 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:18,172 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,266 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,266 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 16:47:18,266 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,266 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,267 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:18,267 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:18,267 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:18,360 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:18,453 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,546 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,546 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 16:47:18,546 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 16:47:18,827 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:18,828 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:18,828 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,829 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,830 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,832 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,832 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,832 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:18,832 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,832 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:18,833 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:18,934 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:18,934 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 16:47:18,934 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:18,935 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:18,935 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:18,935 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:18,935 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:19,028 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:19,122 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,122 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 16:47:19,122 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:19,122 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,123 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:19,123 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:19,123 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:19,216 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:19,310 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:47:19,404 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,404 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 16:47:19,404 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 16:47:19,685 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:19,687 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:19,687 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,688 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,689 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:47:19,690 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,691 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:19,692 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:19,780 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:19,872 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,872 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 16:47:19,872 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:19,873 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,873 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,873 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:19,873 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:19,965 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:20,058 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:20,152 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,245 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,246 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 16:47:20,246 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 16:47:20,526 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:47:20,528 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:20,529 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,531 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:20,532 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,620 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,620 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 16:47:20,620 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:20,620 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,621 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,621 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:20,621 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:20,714 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:20,807 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:20,900 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:20,901 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:21,000 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:47:21,102 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,102 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 16:47:21,102 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 16:47:21,397 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,399 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:47:21,400 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,507 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,507 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,507 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:21,507 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,508 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,508 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:47:21,508 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,599 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:47:21,600 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:47:21,692 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,786 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,786 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,786 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:21,786 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,786 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,787 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:47:21,787 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:47:21,881 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:47:21,975 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:47:21,975 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 16:47:21,975 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:47:22,255 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 16:47:22,257 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 16:47:25,260 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:47:25,260 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:25,260 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:47:25,260 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 16:47:25,260 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 16:47:28,266 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:47:28,266 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:28,266 [test_set_gripper_pose.py-->line:71]:test_pose:0
ERROR 2025-03-21 16:47:28,312 [test_set_gripper_pose.py-->line:77]:断言失败：用例设置is_free参数超限未触发异常
INFO 2025-03-21 16:47:28,312 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 16:47:31,326 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 16:47:31,326 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:31,326 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 16:47:31,326 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 16:47:31,372 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:47:31,372 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 16:47:31,372 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 16:47:34,378 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:47:34,378 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:34,378 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 16:47:34,378 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 16:47:34,426 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:47:34,426 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 16:47:34,426 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:47:37,438 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:47:37,439 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:37,439 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 16:47:37,439 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 16:47:37,486 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:47:37,486 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 16:47:37,486 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:47:40,500 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:47:40,500 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:40,500 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 16:47:40,500 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 16:47:40,547 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:47:40,547 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 16:47:40,547 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 16:47:43,559 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 16:47:43,559 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:47:43,559 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 16:47:43,559 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 16:47:43,606 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:47:43,606 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 16:47:43,606 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 16:47:49,623 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:55:40,833 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:55:40,836 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:55:40,836 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:40,836 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:55:40,837 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 16:55:40,837 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 16:55:43,842 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:55:43,842 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:43,842 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:55:43,843 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 16:55:43,843 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 16:55:46,846 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:55:46,847 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:46,847 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 16:55:46,847 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 16:55:46,847 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 16:55:49,857 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 16:55:49,857 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:49,857 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 16:55:49,857 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 16:55:49,904 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:55:49,904 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 16:55:49,904 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 16:55:52,913 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:55:52,913 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:52,913 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 16:55:52,913 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 16:55:52,959 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:55:52,959 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 16:55:52,959 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:55:55,967 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:55:55,967 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:55,967 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 16:55:55,967 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 16:55:56,014 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:55:56,014 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 16:55:56,014 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:55:59,017 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:55:59,017 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:55:59,018 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 16:55:59,018 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 16:55:59,064 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:55:59,064 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 16:55:59,064 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 16:56:02,070 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 16:56:02,070 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:56:02,070 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 16:56:02,070 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 16:56:02,116 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:56:02,117 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 16:56:02,117 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 16:56:05,168 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,213 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,213 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,213 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 16:56:19,213 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:56:19,264 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:56:19,264 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 16:56:19,264 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 16:56:19,265 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,265 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,266 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,266 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 16:56:19,310 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 16:56:19,311 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 1, 0]

First differing element 4:
0
1

- [0, 0, 0, 0, 0, 0]
?              ^

+ [0, 0, 0, 0, 1, 0]
?              ^

DEBUG 2025-03-21 16:56:19,312 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 16:56:19,312 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 1, 0]
INFO 2025-03-21 16:56:19,312 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:56:19,314 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,316 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,316 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,316 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 16:56:19,316 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:56:19,358 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:56:19,358 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 16:56:19,358 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 16:56:19,359 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,361 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,361 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,361 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 16:56:19,361 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:56:19,405 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:56:19,405 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 16:56:19,405 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 16:56:19,405 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,407 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,407 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,407 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,407 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:19,451 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,451 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,467 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:19,513 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,513 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,514 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,560 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,561 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:19,607 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,607 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,608 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:19,655 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,655 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,656 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,656 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,656 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,657 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,657 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,657 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:19,701 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:19,702 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:19,703 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:19,703 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,703 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,703 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:19,748 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,748 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,760 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,811 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:19,857 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,857 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,858 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,858 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,858 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,859 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,859 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,859 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:19,904 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,904 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,905 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:19,951 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:19,951 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 16:56:19,951 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:19,952 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 16:56:19,952 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,952 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,952 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,952 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:19,998 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:19,998 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 16:56:19,998 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 16:56:19,998 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 16:56:19,999 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,000 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:20,001 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:20,001 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,001 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,002 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:20,044 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,044 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 200
DEBUG 2025-03-21 16:56:20,058 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 16:56:20,058 [test_get_gripper_joint_d.py-->line:52]:实际结果：200
INFO 2025-03-21 16:56:20,058 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,059 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,059 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,059 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:20,107 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,107 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 200
DEBUG 2025-03-21 16:56:20,107 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 16:56:20,107 [test_get_gripper_joint_d.py-->line:52]:实际结果：200
INFO 2025-03-21 16:56:20,108 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,108 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,108 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,108 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:20,154 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,154 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 200
DEBUG 2025-03-21 16:56:20,154 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 16:56:20,154 [test_get_gripper_joint_d.py-->line:52]:实际结果：200
INFO 2025-03-21 16:56:20,154 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,155 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,155 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,155 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:20,201 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,201 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 200
DEBUG 2025-03-21 16:56:20,201 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 16:56:20,201 [test_get_gripper_joint_d.py-->line:52]:实际结果：200
INFO 2025-03-21 16:56:20,201 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,202 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,202 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,202 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:20,247 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,247 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 200
DEBUG 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:52]:实际结果：200
INFO 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,248 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 16:56:20,293 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,295 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:20,296 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:20,296 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,296 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,296 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,341 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:20,386 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,386 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 16:56:20,386 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,386 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,387 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,387 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,433 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,480 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,526 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 16:56:20,574 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,575 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:20,576 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:20,576 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,576 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,576 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:20,622 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,622 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 16:56:20,635 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:20,635 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 16:56:20,635 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,635 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,635 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,636 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:20,684 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,684 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,685 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:20,732 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,732 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 16:56:20,732 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:20,733 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 16:56:20,733 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,733 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,733 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,733 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,778 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,825 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,873 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,874 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:56:20,874 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:20,874 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:56:20,874 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:20,874 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:20,877 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:20,877 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,877 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:20,877 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:20,919 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:20,965 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:21,013 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:21,059 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:21,105 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,105 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 150
DEBUG 2025-03-21 16:56:21,107 [test_get_gripper_joint_p.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,107 [test_get_gripper_joint_p.py-->line:52]:实际结果：150
INFO 2025-03-21 16:56:21,107 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:21,108 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,108 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:21,108 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:21,152 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,153 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:21,154 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:21,154 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,155 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,155 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:21,199 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,199 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 99
DEBUG 2025-03-21 16:56:21,200 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,200 [test_get_gripper_joint_speed.py-->line:52]:实际结果：99
INFO 2025-03-21 16:56:21,200 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,201 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,201 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,201 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:21,246 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,246 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-21 16:56:21,246 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,246 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-21 16:56:21,247 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,247 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,247 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,247 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:21,292 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,292 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-21 16:56:21,292 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,292 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-21 16:56:21,292 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,293 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,293 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,293 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:21,338 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,338 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-21 16:56:21,338 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,338 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-21 16:56:21,338 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,339 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,339 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,339 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:21,384 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,384 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-21 16:56:21,384 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,385 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-21 16:56:21,385 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,385 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,385 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,385 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:21,431 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,431 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-21 16:56:21,431 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,431 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-21 16:56:21,431 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,432 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:21,433 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:21,433 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,433 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,433 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:56:21,476 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,477 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 188
DEBUG 2025-03-21 16:56:21,490 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,490 [test_get_gripper_joint_torque.py-->line:52]:实际结果：188
INFO 2025-03-21 16:56:21,490 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,490 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,490 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,491 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:56:21,539 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,539 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 188
DEBUG 2025-03-21 16:56:21,539 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,539 [test_get_gripper_joint_torque.py-->line:52]:实际结果：188
INFO 2025-03-21 16:56:21,539 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,540 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,540 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,540 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,586 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:56:21,632 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,632 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 188
DEBUG 2025-03-21 16:56:21,633 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,633 [test_get_gripper_joint_torque.py-->line:52]:实际结果：188
INFO 2025-03-21 16:56:21,633 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,634 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,634 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,634 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:56:21,679 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,679 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 60
DEBUG 2025-03-21 16:56:21,679 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,679 [test_get_gripper_joint_torque.py-->line:52]:实际结果：60
INFO 2025-03-21 16:56:21,679 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,680 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,680 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,680 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:56:21,726 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 16:56:21,726 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 188
DEBUG 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:52]:实际结果：188
INFO 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 16:56:21,727 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:56:21,728 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:56:21,729 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:56:21,730 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:56:21,730 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 16:56:21,730 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 16:56:22,053 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:56:22,053 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 16:56:22,053 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:56:25,053 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:56:25,053 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 16:56:25,053 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 16:56:30,110 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 16:56:30,110 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 16:56:30,110 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:56:33,121 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:56:33,121 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 16:56:33,121 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 16:56:50,590 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-21 16:56:50,590 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 16:56:50,590 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-21 16:56:50,591 [test_get_gripper_status.py-->line:120]:实际结果：1
INFO 2025-03-21 16:56:50,591 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:56:53,600 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 16:56:53,600 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 16:56:53,600 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 16:56:57,961 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-21 16:56:57,961 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 16:56:57,961 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 16:57:01,472 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:57:01,474 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:57:01,474 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 16:57:01,474 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 16:57:01,474 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:57:01,526 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:57:01,526 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 16:57:01,526 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 16:57:01,527 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:57:01,528 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:57:01,528 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:01,528 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:57:01,528 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 16:57:01,528 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 16:57:01,529 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 16:57:06,543 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:06,543 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:57:06,543 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 16:57:06,543 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 16:57:06,544 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 16:57:11,555 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:57:11,555 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:57:11,555 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 16:57:11,555 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 16:57:14,904 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 16:57:14,904 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 7, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 7, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 16:57:14,905 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 16:57:14,905 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 16:57:14,905 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:57:19,911 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:57:19,911 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 16:57:19,911 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 16:57:19,911 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 16:57:24,761 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 16:57:24,761 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 46, 49] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 46, 49]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 16:57:24,762 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 16:57:24,762 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 16:57:24,762 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:57:30,338 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:57:30,339 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:57:30,339 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,339 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:57:30,339 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 16:57:30,340 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 16:57:30,438 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 16:57:30,438 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 16:57:30,438 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 16:57:30,485 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 16:57:30,487 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:30,488 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 16:57:37,062 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 16:57:37,062 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 16:57:37,063 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 16:57:37,063 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 16:57:37,063 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 16:57:37,064 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:57:37,064 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:37,065 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 16:57:46,514 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:57:46,514 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 16:57:46,514 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 16:57:46,514 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:57:46,514 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:46,515 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:57:55,972 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:58:00,498 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 16:58:06,897 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:06,897 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 16:58:06,897 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 16:58:06,897 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 16:58:06,897 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 16:58:06,898 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 16:58:12,939 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:12,939 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 16:58:12,939 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 16:58:12,940 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 16:58:12,941 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:12,942 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 16:58:12,942 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:58:12,942 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 16:58:12,986 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 16:58:13,032 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:58:13,032 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 16:58:13,032 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 16:58:13,032 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 16:58:13,035 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 16:58:13,036 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 16:58:13,125 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 16:58:13,125 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 16:58:13,125 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 16:58:13,171 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 16:58:13,172 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 16:58:13,173 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:58:15,278 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:15,278 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:58:15,279 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:15,279 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:15,279 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:58:15,279 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-21 16:58:15,280 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:15,280 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 16:58:15,280 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 16:58:17,377 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:17,377 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 16:58:17,377 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:17,377 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:17,378 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-21 16:58:17,378 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:58:17,378 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:17,378 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 16:58:17,378 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:58:19,479 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:19,479 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:58:19,479 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:19,479 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:19,479 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:58:19,481 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:58:19,481 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:19,481 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 16:58:19,481 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:58:21,573 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:21,573 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:58:21,573 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:21,573 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:21,573 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:58:21,575 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:58:21,575 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:21,575 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 16:58:21,575 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:58:23,678 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:23,678 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 16:58:23,679 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 16:58:25,778 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 16:58:25,778 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 16:58:25,778 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 16:58:25,778 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 16:58:25,779 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-21 16:58:38,113 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:38,114 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,115 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,116 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:38,117 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:38,205 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,299 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:38,300 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:38,392 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:38,487 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:38,580 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:38,674 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:38,674 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 16:58:38,674 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 16:58:38,954 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:38,956 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:38,956 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,956 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,957 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:38,957 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,957 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,957 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,957 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,958 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:38,960 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:39,064 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:39,158 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:39,252 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,347 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,347 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 16:58:39,347 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,347 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,348 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:39,348 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:39,348 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:39,440 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:39,532 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,532 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 16:58:39,532 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 16:58:39,814 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:39,816 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,817 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:39,818 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:39,907 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:40,000 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:40,094 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,186 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,186 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 16:58:40,186 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:40,186 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,186 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:40,187 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:40,187 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,280 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,280 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 16:58:40,280 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:40,280 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,280 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 16:58:40,281 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:40,281 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,372 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,372 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 16:58:40,372 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 16:58:40,650 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:40,651 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:40,651 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,651 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,652 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:40,653 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:40,744 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:40,838 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:40,933 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,026 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:41,027 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:41,121 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,213 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,213 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 16:58:41,213 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 16:58:41,493 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,495 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,496 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:41,498 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:41,587 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:41,681 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,775 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,775 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 16:58:41,775 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:41,775 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,776 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,776 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:41,776 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:41,869 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:41,963 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 16:58:42,056 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,056 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 16:58:42,056 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 16:58:42,333 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,335 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:58:42,336 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:42,339 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,427 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:42,428 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,520 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,520 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 16:58:42,520 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:42,522 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,522 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,522 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:42,522 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:42,614 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,708 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,708 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 16:58:42,708 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:42,709 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,709 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,709 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:42,709 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:42,801 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:42,895 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:42,895 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 16:58:42,895 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 16:58:43,177 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:43,178 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,179 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:43,180 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:43,182 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:43,271 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:43,366 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:43,459 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:43,551 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,645 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,645 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 16:58:43,645 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:43,645 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 16:58:43,645 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 16:58:43,646 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:43,646 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 16:58:43,739 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:43,739 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 16:58:43,739 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 16:58:44,039 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,041 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:44,042 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 16:58:44,043 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,144 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,144 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,144 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,144 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,144 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,145 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 16:58:44,145 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,237 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 16:58:44,238 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 16:58:44,332 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 16:58:44,424 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,517 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,517 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,517 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,517 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,517 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:58:44,518 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 16:58:44,518 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 16:58:44,611 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 16:58:44,611 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 16:58:44,611 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:58:44,890 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 16:58:44,892 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:47,892 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:47,892 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:58:47,892 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 16:58:47,892 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 16:58:47,892 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:50,902 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 16:58:50,902 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:58:50,902 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 16:58:50,902 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 16:58:50,902 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 16:58:53,912 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 16:58:53,912 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:58:53,912 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 16:58:53,912 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 16:58:53,959 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:58:53,959 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 16:58:53,959 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 16:58:56,968 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:58:56,968 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:58:56,968 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 16:58:56,968 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 16:58:57,014 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:58:57,014 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 16:58:57,014 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:59:00,028 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:59:00,028 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:59:00,028 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 16:59:00,028 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 16:59:00,074 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:59:00,074 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 16:59:00,074 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 16:59:03,080 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 16:59:03,080 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:59:03,080 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 16:59:03,080 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 16:59:03,127 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:59:03,127 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 16:59:03,127 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 16:59:06,136 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 16:59:06,136 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 16:59:06,136 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 16:59:06,136 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 16:59:06,182 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 16:59:06,182 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 16:59:06,182 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 16:59:09,240 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,247 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,248 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,248 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 16:59:58,248 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:59:58,301 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:59:58,301 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 16:59:58,301 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 16:59:58,302 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,303 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,303 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,305 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 16:59:58,348 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 16:59:58,348 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 2, 0]

First differing element 4:
0
2

- [0, 0, 0, 0, 0, 0]
?              ^

+ [0, 0, 0, 0, 2, 0]
?              ^

DEBUG 2025-03-21 16:59:58,350 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 16:59:58,350 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 2, 0]
INFO 2025-03-21 16:59:58,350 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 16:59:58,351 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,353 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,353 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,353 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 16:59:58,353 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:59:58,395 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:59:58,395 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 16:59:58,395 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 16:59:58,395 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,398 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,398 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,398 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 16:59:58,398 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 16:59:58,440 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 16:59:58,440 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 16:59:58,440 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 16:59:58,441 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,442 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,442 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,442 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,442 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:58,487 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,487 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-21 16:59:58,487 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,488 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,488 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,488 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,533 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,581 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,628 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,674 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 16:59:58,721 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:58,722 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:58,723 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:58,723 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,723 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,723 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,768 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,815 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:58,861 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,861 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-21 16:59:58,861 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:58,862 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,862 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,862 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,907 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:58,955 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:59:59,001 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 16:59:59,002 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,003 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:59,004 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:59,004 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,005 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,005 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:59,048 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,048 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 16:59:59,048 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,048 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,049 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,049 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,095 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:59,141 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,141 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 16:59:59,141 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,141 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,141 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,142 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,188 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,234 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,281 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 16:59:59,282 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,284 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:59,284 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:59,285 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,285 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,285 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,329 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:59,376 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,376 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 16:59:59,376 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,376 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,377 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,377 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,422 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:59:59,470 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,471 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 16:59:59,471 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,471 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,471 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,471 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:59:59,516 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,516 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 16:59:59,516 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,517 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,517 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,517 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,563 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 16:59:59,564 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,565 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:59,566 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:59,566 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,566 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,567 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,609 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,656 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,703 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,750 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 16:59:59,797 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,797 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,797 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,797 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,798 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,798 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,843 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 16:59:59,844 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 16:59:59,844 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 16:59:59,844 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 16:59:59,845 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 16:59:59,846 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 16:59:59,846 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,846 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:59:59,846 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:59:59,890 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:59:59,937 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 16:59:59,984 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 16:59:59,985 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 16:59:59,985 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 16:59:59,985 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 16:59:59,985 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 16:59:59,985 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:00:00,032 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:00:00,079 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:00:00,126 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 17:00:00,127 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,128 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:00:00,130 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:00:00,130 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,130 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,130 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 17:00:00,172 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,172 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,173 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,219 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,220 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,220 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 17:00:00,266 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,266 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,266 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,267 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,267 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,267 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,267 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,267 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:00:00,312 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,312 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,313 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:00:00,359 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,359 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,359 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,359 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,360 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,360 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,360 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,360 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 17:00:00,406 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,407 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:00:00,409 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:00:00,409 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,409 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,409 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,453 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,500 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,548 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,595 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,640 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 17:00:00,686 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:00:00,688 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:00:00,689 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:00:00,690 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 17:00:00,690 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 17:00:00,690 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 17:00:01,014 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:00:01,014 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 17:00:01,014 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 17:00:04,019 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 17:00:04,019 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 17:00:04,019 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 17:00:09,072 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 17:00:09,072 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 17:00:09,072 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 17:00:12,077 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 17:00:12,077 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 17:00:12,077 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 17:00:26,594 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-21 17:00:26,594 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 17:00:26,595 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-21 17:00:26,595 [test_get_gripper_status.py-->line:120]:实际结果：1
INFO 2025-03-21 17:00:26,595 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 17:00:29,609 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 17:00:29,609 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 17:00:29,610 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 17:00:35,828 [test_get_gripper_status.py-->line:140]:请求类型断言成功
ERROR 2025-03-21 17:00:35,828 [test_get_gripper_status.py-->line:148]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 146, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-21 17:00:35,829 [test_get_gripper_status.py-->line:149]:期望数据：3
DEBUG 2025-03-21 17:00:35,829 [test_get_gripper_status.py-->line:150]:实际结果：1
INFO 2025-03-21 17:00:35,829 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 17:00:39,328 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:00:39,330 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:00:39,332 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 17:00:39,332 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 17:00:39,332 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 17:00:39,378 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 17:00:39,378 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 17:00:39,378 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 17:00:39,378 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:00:39,381 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:00:39,381 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:00:39,381 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 17:00:39,381 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 17:00:39,381 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 17:00:39,382 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 17:00:44,392 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 17:00:44,392 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 17:00:44,392 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 17:00:44,392 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 17:00:44,392 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 17:00:49,401 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 17:00:49,401 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 17:00:49,401 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 17:00:49,401 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 17:00:52,734 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 17:00:52,734 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 7, 10] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 7, 10]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 17:00:52,736 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 17:00:52,737 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 17:00:52,737 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 17:00:57,742 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 17:00:57,743 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 17:00:57,743 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 17:00:57,743 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 17:01:02,603 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 17:01:02,603 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 47, 49] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 47, 49]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 17:01:02,603 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 17:01:02,605 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 17:01:02,605 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 17:01:08,165 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:01:08,167 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:01:08,167 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,167 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 17:01:08,167 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,168 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 17:01:08,169 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 17:01:08,258 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 17:01:08,258 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 17:01:08,258 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 17:01:08,304 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 17:01:08,306 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:01:08,306 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,306 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:08,306 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:08,307 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 17:01:14,860 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 17:01:14,860 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 17:01:14,860 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 17:01:14,861 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 17:01:14,861 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:14,861 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:14,861 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:14,861 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:24,308 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:33,752 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:38,292 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:01:44,723 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 17:01:50,988 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:01:50,988 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 17:01:50,988 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 17:01:50,989 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 17:01:50,990 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 17:01:51,034 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 17:01:51,082 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 17:01:51,082 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 17:01:51,082 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 17:01:51,082 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 17:01:51,085 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 17:01:51,086 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 17:01:51,174 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 17:01:51,175 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 17:01:51,175 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 17:01:51,221 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 17:01:51,223 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 17:01:51,224 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 17:01:53,320 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:01:53,320 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 17:01:53,321 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:01:53,321 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:01:53,321 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-21 17:01:53,322 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-21 17:01:53,322 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:53,322 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 17:01:53,322 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 17:01:55,429 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:01:55,429 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 17:01:55,430 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:01:55,430 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:01:55,430 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-21 17:01:55,431 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 17:01:55,431 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:55,431 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 17:01:55,431 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 17:01:57,528 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:01:57,528 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 17:01:57,528 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:01:57,530 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:01:57,530 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-21 17:01:57,530 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 17:01:57,531 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:57,531 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 17:01:57,531 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 17:01:59,635 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:01:59,635 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 17:01:59,635 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:01:59,635 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:01:59,635 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-21 17:01:59,637 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 17:01:59,637 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:01:59,637 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 17:01:59,637 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 17:02:01,733 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:02:01,733 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-21 17:02:01,733 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:02:01,733 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:02:01,733 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-21 17:02:01,735 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 17:02:01,735 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 17:02:01,735 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 17:02:01,735 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 17:02:03,833 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 17:02:03,833 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 17:02:03,833 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 17:02:03,833 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 17:02:03,833 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-21 17:02:16,160 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,162 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,164 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:16,165 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,253 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,253 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 17:02:16,253 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,253 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,254 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,254 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:16,254 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:16,346 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:16,440 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:16,533 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,626 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,626 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 17:02:16,626 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,626 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 17:02:16,626 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 17:02:16,627 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:16,627 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:16,720 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:16,720 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 17:02:16,720 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 17:02:16,999 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,001 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,002 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,003 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:17,004 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:17,091 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,185 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:17,186 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:17,279 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,373 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,373 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 17:02:17,373 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,373 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,373 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,374 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:17,374 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:17,465 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:17,558 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,558 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 17:02:17,558 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 17:02:17,839 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:17,841 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:17,841 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,841 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,841 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,842 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,843 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:17,846 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:17,947 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:17,947 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 17:02:17,947 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:17,947 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:17,947 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:17,948 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:17,948 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:18,040 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:18,133 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,226 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,226 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 17:02:18,226 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:18,226 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,227 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:18,227 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:18,227 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,320 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,320 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 17:02:18,320 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:18,320 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,320 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 17:02:18,321 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:18,321 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,413 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,413 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 17:02:18,413 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 17:02:18,695 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,697 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,698 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,702 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,703 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:18,703 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:18,804 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,897 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:18,897 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 17:02:18,897 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:18,897 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:18,897 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:18,898 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:18,898 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:18,991 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 17:02:18,991 [test_set_gripper_joint_i.py-->line:53]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_i.py", line 50, in test_set_gripper_joint_i
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:54]:期望数据：1
DEBUG 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:55]:实际结果：0
INFO 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:19,005 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,099 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,099 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 17:02:19,099 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:19,099 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,100 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:19,100 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:19,100 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:19,193 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,287 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,287 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 17:02:19,287 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 17:02:19,563 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:19,565 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,566 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,568 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:19,569 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,655 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,655 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 17:02:19,655 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:19,655 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,655 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,656 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:19,656 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:19,749 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:19,843 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:19,937 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:20,032 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 17:02:20,126 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,126 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 17:02:20,126 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 17:02:20,406 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:20,408 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:20,408 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,408 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,408 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,409 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,410 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 17:02:20,414 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:20,415 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,415 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,415 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:20,415 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:20,516 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,609 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:20,610 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:20,702 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:20,797 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:20,891 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:20,985 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:20,985 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 17:02:20,985 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 17:02:21,265 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:21,267 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:21,267 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,268 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,269 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,270 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:21,271 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:21,358 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:21,451 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:21,546 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:21,640 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:21,735 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 17:02:21,827 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:21,827 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 17:02:21,827 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 17:02:22,113 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:22,114 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:22,114 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,115 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,116 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 17:02:22,117 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,204 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,204 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,205 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,205 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,205 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,205 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 17:02:22,205 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 17:02:22,299 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 17:02:22,393 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,487 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,487 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,487 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,487 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,487 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,488 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 17:02:22,488 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,580 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,580 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,580 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,580 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,580 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 17:02:22,581 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 17:02:22,581 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 17:02:22,673 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:02:22,673 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 17:02:22,673 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 17:02:22,956 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 17:02:22,958 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:02:22,958 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:02:22,958 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:22,958 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:02:22,959 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 17:02:22,959 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 17:02:25,965 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:02:25,965 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:25,965 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:02:25,965 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 17:02:25,965 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 17:02:28,979 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:02:28,979 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:28,979 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 17:02:28,979 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 17:02:28,979 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 17:02:31,981 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 17:02:31,981 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:31,981 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 17:02:31,981 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 17:02:32,027 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:02:32,027 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 17:02:32,027 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 17:02:35,036 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:02:35,036 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:35,036 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 17:02:35,036 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 17:02:35,082 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:02:35,082 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 17:02:35,082 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:02:38,087 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:02:38,087 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:38,087 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 17:02:38,087 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 17:02:38,134 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:02:38,134 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 17:02:38,134 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:02:41,145 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:02:41,145 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:41,145 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 17:02:41,145 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 17:02:41,192 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:02:41,192 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 17:02:41,192 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 17:02:44,204 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 17:02:44,204 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:02:44,204 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 17:02:44,204 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 17:02:44,251 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:02:44,251 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 17:02:44,251 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 17:02:47,305 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:32:20,083 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:32:20,084 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,084 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,084 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,132 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 17:32:20,180 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,180 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 17:32:20,180 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,181 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,181 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,181 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,226 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,272 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:32:20,320 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,320 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 17:32:20,320 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,320 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,321 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,321 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,367 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 17:32:20,368 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:20,369 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:32:28,341 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:32:28,343 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,343 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,343 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,395 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,441 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 17:32:28,488 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,488 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 17:32:28,488 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,488 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,489 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,489 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:32:28,535 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,535 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 17:32:28,535 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,536 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,536 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,536 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:32:28,582 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,582 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 17:32:28,582 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,583 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,583 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,583 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:32:28,629 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:28,629 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 17:32:28,629 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 17:32:28,629 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,629 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 17:32:28,630 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:28,631 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:32:33,457 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 17:32:33,459 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,459 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,459 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 17:32:33,500 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,500 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 17:32:33,500 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,501 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,501 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,501 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,547 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,592 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 17:32:33,639 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,639 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 17:32:33,639 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,639 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,639 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,640 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,685 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:33,732 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 17:32:33,734 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 17:32:33,734 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 17:32:33,734 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 17:32:33,734 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 17:32:33,734 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 17:34:24,068 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:34:24,070 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:34:24,070 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:24,070 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:34:24,070 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 17:34:24,070 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 17:34:27,082 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:34:27,082 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:27,082 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:34:27,082 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 17:34:27,082 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 17:34:30,096 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:34:30,096 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:30,096 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 17:34:30,096 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 17:34:30,096 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 17:34:33,111 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 17:34:33,111 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:33,111 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 17:34:33,111 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 17:34:33,157 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:34:33,157 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 17:34:33,157 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 17:34:36,163 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:34:36,163 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:36,163 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 17:34:36,164 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 17:34:36,210 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:34:36,210 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 17:34:36,211 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:34:39,213 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:34:39,214 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:39,214 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 17:34:39,214 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 17:34:39,260 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:34:39,260 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 17:34:39,260 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:34:42,264 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:34:42,264 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:42,264 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 17:34:42,264 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 17:34:42,311 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:34:42,311 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 17:34:42,313 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 17:34:45,314 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 17:34:45,314 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:34:45,314 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 17:34:45,314 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 17:34:45,359 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:34:45,359 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 17:34:45,359 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 17:34:48,418 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:54:31,501 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:54:31,503 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:54:31,503 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:31,503 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:54:31,503 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 17:54:31,503 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 17:54:34,505 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:54:34,505 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:34,505 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:54:34,505 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 17:54:34,505 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 17:54:37,513 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:54:37,514 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:37,514 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 17:54:37,514 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 17:54:37,514 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 17:54:40,518 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 17:54:40,518 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:40,518 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 17:54:40,518 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 17:54:40,564 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:54:40,565 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 17:54:40,565 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 17:54:43,568 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:54:43,568 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:43,568 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 17:54:43,569 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 17:54:43,615 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:54:43,615 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 17:54:43,615 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:54:46,621 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:54:46,622 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:46,622 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 17:54:46,622 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 17:54:46,667 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:54:46,667 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 17:54:46,667 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:54:49,675 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:54:49,675 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:49,676 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 17:54:49,676 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 17:54:49,721 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:54:49,721 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 17:54:49,721 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 17:54:52,728 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 17:54:52,728 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:54:52,728 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 17:54:52,728 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 17:54:52,776 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:54:52,776 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 17:54:52,776 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 17:54:55,828 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:59:04,180 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:59:04,181 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:59:04,181 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:04,181 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:59:04,181 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 17:59:04,181 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 17:59:07,194 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:59:07,194 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:07,194 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 17:59:07,194 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 17:59:07,194 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 17:59:10,196 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 17:59:10,196 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:10,196 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 17:59:10,196 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 17:59:10,196 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 17:59:13,207 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 17:59:13,208 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:13,208 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 17:59:13,208 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 17:59:13,254 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:59:13,254 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 17:59:13,254 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 17:59:16,257 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:59:16,257 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:16,257 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 17:59:16,257 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 17:59:16,304 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:59:16,304 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 17:59:16,304 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:59:19,317 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:59:19,317 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:19,317 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 17:59:19,317 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 17:59:19,364 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:59:19,364 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 17:59:19,364 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 17:59:22,375 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 17:59:22,376 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:22,376 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 17:59:22,376 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 17:59:22,422 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:59:22,422 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 17:59:22,422 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 17:59:25,432 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 17:59:25,432 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 17:59:25,432 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 17:59:25,432 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 17:59:25,479 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 17:59:25,479 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 17:59:25,479 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 17:59:31,497 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 17:59:42,291 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 17:59:42,292 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:59:42,292 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:59:42,294 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 17:59:42,294 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 17:59:42,294 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 17:59:42,294 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 17:59:42,294 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:59:42,295 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 17:59:42,296 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 17:59:42,296 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 17:59:42,296 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:59:42,296 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:59:42,296 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 17:59:48,512 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 17:59:48,521 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 17:59:48,526 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 17:59:48,526 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 17:59:48,526 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 17:59:48,528 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:59:48,528 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:59:48,529 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 17:59:58,075 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 17:59:58,075 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 17:59:58,075 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 17:59:58,076 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 17:59:58,076 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 17:59:58,076 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 18:00:05,118 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:00:05,118 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 18:00:05,118 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 18:00:05,119 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:00:05,119 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:00:05,119 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 18:00:09,703 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:00:09,703 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 18:00:09,703 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 18:00:09,704 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:00:09,704 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:00:09,704 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 18:00:16,336 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:00:16,336 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 18:00:16,336 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 18:00:16,337 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:00:16,337 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:00:16,337 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 18:00:22,737 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:00:22,737 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 18:00:22,737 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 18:00:22,738 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 18:00:39,971 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:00:39,972 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:00:39,972 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:39,973 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:00:39,973 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:00:39,973 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:00:42,976 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:00:42,976 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:42,977 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:00:42,977 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:00:42,977 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:00:45,979 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:00:45,979 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:45,980 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:00:45,980 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:00:45,980 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:00:48,986 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:00:48,987 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:48,987 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:00:48,987 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 18:00:49,033 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:00:49,033 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:00:49,033 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:00:52,040 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:00:52,040 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:52,041 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:00:52,041 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 18:00:52,087 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:00:52,087 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:00:52,087 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:00:55,094 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:00:55,094 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:55,095 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:00:55,095 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 18:00:55,139 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:00:55,139 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:00:55,139 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:00:58,142 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:00:58,142 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:00:58,142 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:00:58,142 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 18:00:58,188 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:00:58,189 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:00:58,189 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:01:01,201 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:01:01,201 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:01:01,201 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:01:01,201 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:01:01,249 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:01:01,249 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:01:01,249 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:01:07,258 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:09:39,955 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:09:39,958 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:09:39,959 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 18:09:46,210 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 18:09:46,212 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "D:\PyCharm Community Edition 2024.2.1\plugins\python-ce\helpers\pycharm\teamcity\diff_tools.py", line 33, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 18:09:46,214 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 18:09:46,214 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 18:09:46,214 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 18:09:46,215 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:09:46,215 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:09:46,217 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 18:09:55,793 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:09:55,793 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 18:09:55,793 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 18:09:55,795 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:09:55,795 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:09:55,795 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 18:10:04,956 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:10:04,956 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 18:10:04,956 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 18:10:04,956 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:10:04,958 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:10:04,958 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 18:10:09,521 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:10:09,521 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 18:10:09,521 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 18:10:09,522 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:10:09,522 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:10:09,522 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:10:16,169 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 18:10:22,605 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:10:22,605 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 18:10:22,605 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 18:10:22,607 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 18:12:38,694 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 18:12:38,696 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:12:38,697 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:12:38,697 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:12:38,697 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:12:38,697 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:12:45,994 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:12:55,538 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 18:13:04,723 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:04,724 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 18:13:04,724 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:04,725 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:04,725 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:04,725 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 18:13:09,294 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:09,294 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 18:13:09,294 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:09,295 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:09,295 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:09,295 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 18:13:15,084 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:15,084 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 18:13:15,084 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:15,085 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:15,085 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:15,085 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 18:13:21,336 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:21,336 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 18:13:21,336 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:21,337 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 18:13:28,735 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:13:28,737 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:13:28,737 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:28,737 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 18:13:28,737 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:13:28,737 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:28,738 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 18:13:35,022 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:35,022 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-21 18:13:35,022 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:35,022 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:35,023 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:35,023 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 18:13:43,546 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:43,546 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 18:13:43,546 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:43,547 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:43,547 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:43,547 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 18:13:51,718 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:51,718 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 18:13:51,718 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:51,719 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:51,719 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:51,719 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:13:55,271 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 18:14:00,034 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:14:00,034 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 18:14:00,034 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 18:14:00,035 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:14:00,035 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:14:00,035 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 18:14:05,272 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:14:05,272 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 18:14:05,272 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 18:14:05,273 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:53,554 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:53,555 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,555 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-21 18:23:53,555 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 18:23:53,610 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:23:53,610 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-21 18:23:53,610 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-21 18:23:53,610 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:53,612 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:53,613 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,613 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-21 18:23:53,656 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-21 18:23:53,656 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [46, 0, 59, 98, 100, 75]

First differing element 0:
0
46

- [0, 0, 0, 0, 0, 0]
+ [46, 0, 59, 98, 100, 75]
DEBUG 2025-03-21 18:23:53,658 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-21 18:23:53,658 [test_get_gripper_angles.py-->line:51]:实际结果：[46, 0, 59, 98, 100, 75]
INFO 2025-03-21 18:23:53,659 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-21 18:23:53,660 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:53,661 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:53,662 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,662 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-21 18:23:53,662 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 18:23:53,703 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:23:53,703 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-21 18:23:53,703 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-21 18:23:53,704 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:53,705 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:53,707 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,707 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-21 18:23:53,707 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 18:23:53,750 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:23:53,750 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-21 18:23:53,750 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-21 18:23:53,751 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:53,753 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:53,753 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,753 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,753 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:53,797 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:53,797 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,799 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,844 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:53,890 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:53,891 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:53,891 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:53,891 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:53,891 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:53,892 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,892 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,892 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:53,937 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:53,937 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:53,938 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:53,938 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:53,938 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:53,938 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,938 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,939 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:53,985 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,031 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:54,034 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:54,034 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,034 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,034 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:54,077 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,078 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:54,080 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,080 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:54,080 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,081 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,081 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,081 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:54,124 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,125 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:54,170 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,170 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:54,170 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,170 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:54,171 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,171 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,171 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,171 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:54,216 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,216 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 3
DEBUG 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,217 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,263 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-21 18:23:54,310 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,311 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:54,312 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:54,313 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,313 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,313 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,355 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:54,401 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,401 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-21 18:23:54,401 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,401 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,401 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,402 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:54,447 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,447 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-21 18:23:54,447 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,447 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,448 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,448 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,494 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,539 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,586 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-21 18:23:54,587 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:54,587 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-21 18:23:54,587 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,587 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:54,589 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:54,589 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,589 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,589 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:54,633 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,633 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-21 18:23:54,633 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,633 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,633 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,634 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,679 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,726 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:54,771 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,771 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-21 18:23:54,771 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,771 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,771 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,772 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,819 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,866 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:54,867 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:54,868 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:54,870 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,870 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:54,870 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:54,913 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,913 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 18:23:54,915 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,915 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 18:23:54,915 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:54,916 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,916 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:54,916 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:54,959 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:54,959 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 18:23:54,959 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:54,960 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 18:23:54,960 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:54,960 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:54,960 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:54,960 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:55,005 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:55,051 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,051 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:55,052 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:55,098 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,098 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-21 18:23:55,098 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:55,098 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,098 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:55,099 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:23:55,144 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,146 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:55,148 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:55,148 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,148 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,148 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,190 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,237 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,286 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,333 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,380 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-21 18:23:55,426 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,427 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:55,428 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:55,429 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,429 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,429 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:55,472 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,472 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 10
DEBUG 2025-03-21 18:23:55,472 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,472 [test_get_gripper_joint_speed.py-->line:52]:实际结果：10
INFO 2025-03-21 18:23:55,473 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,473 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,473 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,473 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:55,519 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,519 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 18:23:55,519 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,519 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 18:23:55,520 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,521 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,521 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,521 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:55,566 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,566 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 18:23:55,566 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,566 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 18:23:55,568 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,568 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,568 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,568 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:55,612 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,612 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 40
DEBUG 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:52]:实际结果：40
INFO 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,613 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:55,659 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,659 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 18:23:55,659 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,659 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 18:23:55,660 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,660 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,660 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,660 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:55,707 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-21 18:23:55,707 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-21 18:23:55,707 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-21 18:23:55,707 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-21 18:23:55,707 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-21 18:23:55,708 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,709 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:55,710 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:55,710 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,710 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,710 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,753 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,799 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,847 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,895 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,941 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-21 18:23:55,988 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:23:55,989 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:23:55,990 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:23:55,991 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 18:23:55,991 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-21 18:23:55,991 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-21 18:23:57,047 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:23:57,047 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-21 18:23:57,047 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 18:24:00,056 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 18:24:00,056 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-21 18:24:00,056 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-21 18:24:05,114 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-21 18:24:05,114 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-21 18:24:05,114 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-21 18:24:08,119 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 18:24:08,119 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-21 18:24:08,119 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-21 18:24:22,013 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-21 18:24:22,013 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-21 18:24:22,015 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-21 18:24:22,015 [test_get_gripper_status.py-->line:120]:实际结果：1
INFO 2025-03-21 18:24:22,015 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-21 18:24:25,018 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-21 18:24:25,018 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-21 18:24:25,018 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-21 18:25:30,319 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-21 18:25:30,319 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-21 18:25:30,319 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-21 18:25:33,741 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:25:33,742 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:25:33,743 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-21 18:25:33,743 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-21 18:25:33,743 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-21 18:25:33,794 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:25:33,794 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-21 18:25:33,794 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-21 18:25:33,795 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-21 18:25:33,797 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-21 18:25:38,812 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-21 18:25:38,812 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-21 18:25:38,812 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-21 18:25:38,812 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-21 18:25:38,812 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-21 18:25:43,819 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 18:25:43,819 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 18:25:43,819 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-21 18:25:43,819 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-21 18:25:47,126 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 18:25:47,127 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 10, 10, 9, 10, 8] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 10, 10, 9, 10, 8]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-21 18:25:47,128 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 18:25:47,128 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 18:25:47,128 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 18:25:52,141 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-21 18:25:52,141 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-21 18:25:52,141 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-21 18:25:52,141 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-21 18:25:56,954 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-21 18:25:56,955 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 40, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 40, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-21 18:25:56,955 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-21 18:25:56,955 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-21 18:25:56,955 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-21 18:26:02,405 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:26:02,406 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 18:26:02,407 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-21 18:26:02,408 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-21 18:26:02,500 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-21 18:26:02,500 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-21 18:26:02,500 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-21 18:26:02,546 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-21 18:26:02,547 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-21 18:26:02,549 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:26:02,550 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:26:02,550 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:02,550 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:02,550 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-21 18:26:08,074 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 18:26:08,074 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 18:26:08,075 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-21 18:26:08,075 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-21 18:26:08,075 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:08,076 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:08,076 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:08,076 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:16,571 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:24,761 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-21 18:26:28,310 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:26:28,310 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-21 18:26:28,310 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:28,310 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:28,310 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:28,311 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-21 18:26:33,952 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-21 18:26:39,391 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:26:39,391 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-21 18:26:39,391 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-21 18:26:39,392 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,394 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 18:26:39,395 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-21 18:26:39,437 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-21 18:26:39,486 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-21 18:26:39,486 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-21 18:26:39,486 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-21 18:26:39,486 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-21 18:26:39,487 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-21 18:26:39,488 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-21 18:26:39,578 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-21 18:26:39,578 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-21 18:26:39,578 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-21 18:26:39,625 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:26:39,626 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:26:39,626 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,626 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:39,626 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-21 18:26:39,626 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-21 18:26:39,627 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 18:26:41,731 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:41,731 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 18:26:41,733 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:41,733 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:41,733 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-21 18:26:41,734 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-21 18:26:41,734 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:41,734 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-21 18:26:41,734 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-21 18:26:43,831 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:43,831 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-21 18:26:43,832 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:43,832 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:43,832 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-21 18:26:43,833 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 18:26:43,833 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:43,833 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-21 18:26:43,834 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 18:26:45,934 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:45,934 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 18:26:45,934 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:45,934 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:45,935 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-21 18:26:45,935 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 18:26:45,935 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:45,936 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-21 18:26:45,936 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 18:26:48,038 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:48,038 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 18:26:48,038 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:48,038 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:48,039 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-21 18:26:48,039 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 18:26:48,039 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:48,039 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-21 18:26:48,039 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-21 18:26:50,137 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-21 18:26:52,242 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-21 18:26:52,242 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-21 18:26:52,243 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-21 18:26:52,243 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-21 18:26:52,244 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-21 18:27:04,572 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:04,574 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:04,574 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,575 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,576 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:04,578 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,681 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:04,682 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:04,777 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:04,777 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-21 18:27:04,777 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:04,777 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,778 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,778 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:04,778 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:04,870 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:04,964 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
ERROR 2025-03-21 18:27:04,964 [test_set_gripper_joint_cw.py-->line:53]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_cw.py", line 50, in test_set_gripper_joint_cw
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:54]:期望数据：1
DEBUG 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:55]:实际结果：0
INFO 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:04,980 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:05,072 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,166 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,166 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-21 18:27:05,166 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-21 18:27:05,447 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:05,448 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:05,448 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,449 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,450 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:05,451 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:05,540 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:05,633 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:05,726 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,818 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,818 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-21 18:27:05,818 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:05,819 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,819 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,819 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:05,819 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:05,910 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:05,910 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-21 18:27:05,910 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:05,910 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-21 18:27:05,910 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-21 18:27:05,911 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:05,911 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:06,003 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,003 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-21 18:27:06,004 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-21 18:27:06,283 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:06,285 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:06,285 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,285 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,286 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,287 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,288 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:06,289 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,376 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:06,377 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,470 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,470 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-21 18:27:06,470 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:06,470 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,470 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,471 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:06,471 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:06,564 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:06,657 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,751 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,751 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-21 18:27:06,751 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:06,751 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-21 18:27:06,752 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-21 18:27:06,752 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:06,752 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:06,845 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:06,845 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-21 18:27:06,845 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-21 18:27:07,126 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,128 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,129 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:07,131 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:07,220 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:07,312 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:07,405 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,498 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,498 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-21 18:27:07,498 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,498 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,498 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,499 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:07,499 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:07,592 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:07,687 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:07,687 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-21 18:27:07,687 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-21 18:27:07,966 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,969 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,970 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,971 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:07,972 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:08,060 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:08,152 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:08,246 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:08,341 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,435 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,435 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-21 18:27:08,435 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,435 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,436 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-21 18:27:08,436 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:08,436 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-21 18:27:08,528 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,528 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-21 18:27:08,528 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-21 18:27:08,809 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:08,811 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,812 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:08,813 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:08,902 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:08,995 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:08,996 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:09,089 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,183 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,183 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-21 18:27:09,184 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:09,184 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,184 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:09,184 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:09,184 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:09,276 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,368 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,368 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-21 18:27:09,368 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-21 18:27:09,651 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:09,653 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:09,653 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,653 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,653 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,655 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:09,656 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:09,743 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:09,839 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:09,930 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:10,023 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:10,024 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:10,117 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,117 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-21 18:27:10,117 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:10,118 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,118 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-21 18:27:10,118 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:10,118 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-21 18:27:10,211 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,211 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-21 18:27:10,211 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-21 18:27:10,505 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:10,506 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,507 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,508 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,509 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-21 18:27:10,510 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-21 18:27:10,617 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-21 18:27:10,710 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-21 18:27:10,804 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-21 18:27:10,897 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-21 18:27:10,990 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-21 18:27:11,082 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-21 18:27:11,082 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-21 18:27:11,082 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-21 18:27:11,360 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-21 18:27:11,361 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:27:11,361 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:27:11,362 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:11,362 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:27:11,362 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:27:11,362 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:27:14,365 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:27:14,365 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:14,365 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:27:14,365 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:27:14,365 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:27:17,380 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:27:17,380 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:17,380 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:27:17,380 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:27:17,380 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:27:20,387 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:27:20,387 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:20,387 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:27:20,387 [test_set_gripper_pose.py-->line:43]:test_rank:1
DEBUG 2025-03-21 18:27:20,434 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:27:20,434 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:27:20,434 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:27:23,442 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:27:23,442 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:23,442 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:27:23,442 [test_set_gripper_pose.py-->line:43]:test_rank:2
DEBUG 2025-03-21 18:27:23,489 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:27:23,489 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:27:23,489 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:27:26,499 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:27:26,500 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:26,500 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:27:26,500 [test_set_gripper_pose.py-->line:43]:test_rank:3
DEBUG 2025-03-21 18:27:26,546 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:27:26,547 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:27:26,547 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:27:29,552 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:27:29,552 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:29,552 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:27:29,552 [test_set_gripper_pose.py-->line:43]:test_rank:4
DEBUG 2025-03-21 18:27:29,599 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:27:29,599 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:27:29,599 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:27:32,605 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:27:32,605 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:27:32,605 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:27:32,605 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:27:32,651 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:27:32,651 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:27:32,651 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:27:38,667 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:28:23,977 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:28:23,979 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:28:23,979 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:23,979 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:28:23,979 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:28:23,979 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:28:26,986 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:28:26,986 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:26,987 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-21 18:28:26,987 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:28:26,987 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:28:29,991 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:28:29,991 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:29,991 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:28:29,991 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:28:29,991 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:28:33,000 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:28:33,000 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:33,000 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:28:33,000 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:28:33,046 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:28:33,046 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:28:33,046 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:28:36,054 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:28:36,054 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:36,054 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:28:36,054 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:28:36,101 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:28:36,101 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:28:36,101 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:28:39,105 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:28:39,105 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:39,105 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:28:39,105 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:28:39,152 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:28:39,152 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:28:39,152 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:28:42,160 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:28:42,161 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:42,161 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:28:42,161 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:28:42,207 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:28:42,207 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:28:42,208 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:28:45,219 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:28:45,219 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:28:45,219 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:28:45,219 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-21 18:28:45,266 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:28:45,266 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:28:45,266 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:28:51,282 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:29:02,379 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:29:02,381 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:29:02,381 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:02,381 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:29:02,381 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:29:02,381 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:29:05,384 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:29:05,384 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:05,384 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-21 18:29:05,384 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:29:05,384 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:29:08,396 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:29:08,396 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:08,397 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:29:08,397 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:29:08,397 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:29:11,411 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:29:11,412 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:11,412 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:29:11,412 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:29:11,457 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:29:11,457 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:29:11,457 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:29:14,471 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:29:14,472 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:14,472 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:29:14,472 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:29:14,518 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:29:14,518 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:29:14,518 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:29:17,526 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:29:17,526 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:17,526 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:29:17,526 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:29:17,574 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:29:17,574 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:29:17,574 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:29:20,579 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:29:20,579 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:20,579 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:29:20,579 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:29:20,623 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:29:20,623 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:29:20,624 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:29:23,641 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:29:23,641 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:23,641 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:29:23,641 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-21 18:29:23,685 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:29:23,686 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:29:23,686 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:29:29,711 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:29:57,993 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:29:57,994 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:29:57,994 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:29:57,994 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:29:57,994 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:29:57,994 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:30:01,002 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:30:01,003 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:01,003 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-21 18:30:01,003 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:30:01,003 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:30:04,010 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:30:04,010 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:04,011 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:30:04,011 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:30:04,011 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:30:07,017 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:30:07,017 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:07,018 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:30:07,018 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:30:07,065 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:30:07,065 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:30:07,065 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:30:10,075 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:30:10,075 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:10,075 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:30:10,075 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:30:10,122 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:30:10,122 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:30:10,122 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:30:13,130 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:30:13,130 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:13,130 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:30:13,130 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:30:13,176 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:30:13,176 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:30:13,176 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:30:16,185 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:30:16,187 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:16,187 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:30:16,187 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:30:16,232 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:30:16,232 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:30:16,232 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:30:19,245 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:30:19,246 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:19,246 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:30:19,246 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-21 18:30:19,293 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:30:19,293 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:30:19,293 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:30:25,318 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-21 18:30:55,897 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-21 18:30:55,898 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:30:55,898 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:55,898 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-21 18:30:55,899 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-21 18:30:55,899 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-21 18:30:59,907 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:30:59,908 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:30:59,908 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-21 18:30:59,908 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-21 18:30:59,908 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-21 18:31:03,916 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-21 18:31:03,916 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:03,916 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-21 18:31:03,916 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-21 18:31:03,916 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-21 18:31:07,918 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-21 18:31:07,919 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:07,919 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-21 18:31:07,919 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:31:07,965 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:31:07,965 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-21 18:31:07,965 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-21 18:31:11,980 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:31:11,980 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:11,981 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-21 18:31:11,981 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:31:12,026 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:31:12,026 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-21 18:31:12,026 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:31:16,032 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:31:16,032 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:16,032 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-21 18:31:16,032 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:31:16,078 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:31:16,078 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-21 18:31:16,078 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-21 18:31:20,088 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-21 18:31:20,088 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:20,088 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-21 18:31:20,088 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-21 18:31:20,135 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:31:20,135 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-21 18:31:20,135 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-21 18:31:24,144 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-21 18:31:24,144 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-21 18:31:24,144 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-21 18:31:24,144 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-21 18:31:24,190 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-21 18:31:24,190 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-21 18:31:24,190 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-21 18:31:31,204 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,117 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,117 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,117 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 14:55:53,117 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 14:55:53,163 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:55:53,163 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 14:55:53,163 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 14:55:53,164 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,165 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,165 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,166 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 14:55:53,210 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 14:55:53,210 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 5, 43, 70]

First differing element 3:
0
5

- [0, 0, 0, 0, 0, 0]
?           ^  ^

+ [0, 0, 0, 5, 43, 70]
?           ^  ^^  +

DEBUG 2025-03-24 14:55:53,237 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 14:55:53,237 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 5, 43, 70]
INFO 2025-03-24 14:55:53,237 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 14:55:53,249 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,250 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,251 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,251 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 14:55:53,251 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 14:55:53,304 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:55:53,304 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 14:55:53,304 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 14:55:53,305 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,306 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,307 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,307 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 14:55:53,307 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 14:55:53,351 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:55:53,351 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 14:55:53,351 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 14:55:53,351 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,353 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,353 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,353 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,353 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,398 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,445 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:53,491 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,491 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 14:55:53,492 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,492 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,492 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,492 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,537 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,585 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 14:55:53,633 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:53,634 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,635 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,635 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,635 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,635 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,679 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,725 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:53,774 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,774 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 14:55:53,774 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,774 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,774 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,775 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,820 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,867 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 14:55:53,913 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:53,914 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:53,916 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:53,916 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,916 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:53,917 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:53,959 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,005 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,053 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,099 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,146 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,193 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,195 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 14:55:54,195 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:54,195 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 14:55:54,195 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,196 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:54,198 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:54,198 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,199 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,199 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:54,241 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,241 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 14:55:54,241 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,241 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,242 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,242 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,288 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,335 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,382 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,430 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,477 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 14:55:54,478 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,479 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:54,480 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:54,480 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,481 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,481 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,523 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,571 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:54,619 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,619 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,619 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,619 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,619 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,620 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,666 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,714 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:54,761 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:54,762 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:54,764 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:54,764 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,764 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,764 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,808 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:54,856 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,857 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 14:55:54,857 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:54,857 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,857 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,857 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,903 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:54,949 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,949 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 14:55:54,949 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:54,949 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,950 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,950 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:54,996 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 14:55:55,043 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,044 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:55,046 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:55,046 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,046 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,046 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:55,090 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,090 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 40
DEBUG 2025-03-24 14:55:55,103 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,103 [test_get_gripper_joint_speed.py-->line:52]:实际结果：40
INFO 2025-03-24 14:55:55,103 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,104 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,104 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,104 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:55,153 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,153 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-24 14:55:55,153 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,153 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-24 14:55:55,153 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,154 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,154 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,154 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:55,199 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,199 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-24 14:55:55,200 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,200 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-24 14:55:55,200 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,201 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,201 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,201 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,247 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:55,294 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,294 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-24 14:55:55,294 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,294 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-24 14:55:55,294 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,295 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,295 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,295 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 50
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:52]:实际结果：50
INFO 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 14:55:55,342 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:55,344 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 14:55:55,344 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,344 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:55,345 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:55,345 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,345 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,345 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,390 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,437 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,483 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 14:55:55,531 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,531 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 14:55:55,531 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,531 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,531 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,532 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,579 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 14:55:55,626 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 14:55:55,628 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 14:55:55,628 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:55:55,628 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:55:55,630 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:55:55,630 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 14:55:55,630 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 14:55:55,630 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 14:55:55,719 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:55:55,719 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 14:55:55,719 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 14:55:58,734 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 14:55:58,734 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 14:55:58,734 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 14:56:03,786 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 14:56:03,786 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 14:56:03,786 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 14:56:06,795 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 14:56:06,795 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 14:56:06,795 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 14:56:15,866 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-24 14:56:15,866 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 3
DEBUG 2025-03-24 14:56:15,884 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-24 14:56:15,884 [test_get_gripper_status.py-->line:120]:实际结果：3
INFO 2025-03-24 14:56:15,884 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 14:56:18,897 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 14:56:18,897 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 14:56:18,897 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 14:56:32,364 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 14:56:32,364 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 14:56:32,364 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 14:56:35,739 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 14:56:35,741 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:56:35,741 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 14:56:35,741 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 14:56:35,741 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 14:56:35,792 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:56:35,792 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 14:56:35,792 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 14:56:35,793 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:56:35,794 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:56:35,794 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 14:56:35,794 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 14:56:35,794 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 14:56:35,794 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 14:56:35,795 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 14:56:40,797 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 14:56:40,797 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 14:56:40,797 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 14:56:40,797 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 14:56:40,797 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 14:56:45,809 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 14:56:45,809 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 14:56:45,809 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 14:56:45,809 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 14:56:49,114 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 14:56:49,114 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 9, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 9, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 14:56:49,131 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 14:56:49,131 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 14:56:49,131 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 14:56:54,134 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 14:56:54,134 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 14:56:54,135 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 14:56:54,135 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 14:56:58,886 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 14:56:58,887 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [41, 39, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
41
40

- [41, 39, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 14:56:58,888 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 14:56:58,888 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 14:56:58,888 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 14:57:04,334 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 14:57:04,335 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 14:57:04,336 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 14:57:04,337 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 14:57:04,431 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 14:57:04,431 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 14:57:04,431 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 14:57:04,477 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,480 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:04,481 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-24 14:57:10,005 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-24 14:57:10,005 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-24 14:57:10,022 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-24 14:57:10,022 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-24 14:57:10,022 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:10,022 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:10,022 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:10,023 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:18,506 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:26,680 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:30,220 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 14:57:35,870 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-24 14:57:41,389 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:57:41,389 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 14:57:41,389 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 14:57:41,390 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-24 14:57:41,391 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 14:57:41,392 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 14:57:41,435 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:57:41,436 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 14:57:41,436 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 14:57:41,436 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,436 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 14:57:41,436 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 14:57:41,483 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 14:57:41,483 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 14:57:41,483 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 14:57:41,483 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 14:57:41,485 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 14:57:41,486 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,487 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 14:57:41,487 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 14:57:41,577 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 14:57:41,578 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 14:57:41,578 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 14:57:41,624 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:57:41,625 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:57:41,625 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 14:57:41,626 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 14:57:43,730 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:43,730 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 14:57:43,746 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:43,746 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:43,746 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 14:57:43,747 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 14:57:43,747 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:43,747 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 14:57:43,747 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 14:57:45,849 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:45,849 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 14:57:45,850 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:45,850 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:45,850 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 14:57:45,850 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 14:57:45,851 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:45,851 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 14:57:45,851 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 14:57:47,958 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:47,958 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 14:57:47,958 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:47,958 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:47,958 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 14:57:47,959 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 14:57:47,959 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:47,959 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 14:57:47,959 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 14:57:50,055 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:50,055 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 14:57:50,056 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:50,056 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:50,056 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 14:57:50,057 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 14:57:50,057 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:50,057 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 14:57:50,057 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 14:57:52,156 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:52,156 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 14:57:52,157 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:52,157 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:52,157 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 14:57:52,158 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 14:57:52,158 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 14:57:52,158 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 14:57:52,158 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 14:57:54,255 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 14:57:54,255 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 14:57:54,255 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 14:57:54,255 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 14:57:54,255 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 14:58:06,566 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:06,568 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,569 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:06,570 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,661 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:06,662 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:06,753 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:06,753 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 14:58:06,753 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:06,753 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,754 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,754 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:06,754 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:06,847 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:06,940 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:06,941 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:07,034 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,127 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,127 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 14:58:07,127 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 14:58:07,409 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:07,410 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,411 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,412 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,413 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:07,414 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:07,502 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:07,597 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:07,690 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:07,783 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,878 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,878 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 14:58:07,878 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:07,878 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 14:58:07,878 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 14:58:07,879 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:07,879 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:07,971 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:07,971 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 14:58:07,971 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 14:58:08,251 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:08,253 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 14:58:08,254 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:08,255 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,255 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,255 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:08,255 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,345 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,345 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 14:58:08,345 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:08,345 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,345 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,346 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:08,346 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,439 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:08,440 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:08,533 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:08,627 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:08,720 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:08,813 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:08,813 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 14:58:08,813 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 14:58:09,095 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,098 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,099 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:09,101 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,188 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,188 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 14:58:09,189 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,189 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,189 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,189 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:09,189 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:09,282 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:09,376 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:09,470 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,563 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,563 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 14:58:09,563 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,563 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,563 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 14:58:09,564 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:09,564 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:09,656 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:09,656 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 14:58:09,656 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 14:58:09,936 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:09,937 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:09,937 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,937 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,938 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,939 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:09,941 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,028 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,028 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 14:58:10,028 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,028 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,028 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:10,030 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:10,030 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:10,123 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:10,217 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:10,311 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,405 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,405 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 14:58:10,405 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,405 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,405 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 14:58:10,406 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:10,406 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 14:58:10,499 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,499 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 14:58:10,499 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 14:58:10,779 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:10,781 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,782 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,783 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:10,784 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,785 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,785 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:10,785 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:10,872 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:10,966 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:11,061 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,156 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,156 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 14:58:11,156 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:11,156 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,156 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:11,157 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:11,157 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:11,250 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,344 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,344 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 14:58:11,344 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 14:58:11,635 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:11,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 14:58:11,638 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:11,638 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,638 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,638 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:11,638 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,779 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,779 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 14:58:11,780 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:11,780 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,780 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,780 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:11,780 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:11,876 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:11,970 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:12,064 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:12,157 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 14:58:12,250 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,250 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 14:58:12,250 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 14:58:12,548 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:12,549 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,550 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,551 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,552 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 14:58:12,553 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 14:58:12,656 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 14:58:12,750 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 14:58:12,843 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:12,936 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 14:58:12,937 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 14:58:13,032 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 14:58:13,126 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 14:58:13,126 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 14:58:13,126 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 14:58:13,409 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 14:58:13,411 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 14:58:13,411 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:58:13,411 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:13,412 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 14:58:13,412 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 14:58:13,412 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 14:58:18,425 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:58:18,425 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:18,425 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 14:58:18,425 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 14:58:18,426 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 14:58:23,439 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 14:58:23,439 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:23,439 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 14:58:23,439 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 14:58:23,439 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 14:58:28,451 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 14:58:28,451 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:28,451 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 14:58:28,451 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 14:58:28,498 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:58:28,498 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 14:58:28,498 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 14:58:33,511 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 14:58:33,511 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:33,511 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 14:58:33,511 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 14:58:33,558 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:58:33,558 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 14:58:33,558 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 14:58:38,569 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 14:58:38,569 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:38,569 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 14:58:38,569 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 14:58:38,617 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:58:38,617 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 14:58:38,617 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 14:58:43,629 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 14:58:43,629 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:43,629 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 14:58:43,629 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 14:58:43,675 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:58:43,675 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 14:58:43,675 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 14:58:48,675 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 14:58:48,675 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 14:58:48,675 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 14:58:48,675 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 14:58:48,724 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 14:58:48,724 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 14:58:48,724 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 14:58:56,741 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:54,599 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:54,600 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,600 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 15:01:54,600 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:01:54,642 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:01:54,642 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 15:01:54,642 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 15:01:54,642 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:54,645 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:54,645 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,645 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 15:01:54,688 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 15:01:54,688 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 82, 26, 65]

First differing element 3:
0
82

- [0, 0, 0, 0, 0, 0]
?           ^  ^  ^

+ [0, 0, 0, 82, 26, 65]
?           ^^  ^^  ^^

DEBUG 2025-03-24 15:01:54,689 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 15:01:54,689 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 82, 26, 65]
INFO 2025-03-24 15:01:54,689 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:01:54,691 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:54,693 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:54,693 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,693 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 15:01:54,693 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:01:54,735 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:01:54,735 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 15:01:54,735 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 15:01:54,735 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:54,737 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:54,737 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,737 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 15:01:54,737 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:01:54,782 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:01:54,782 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 15:01:54,782 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 15:01:54,782 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:54,784 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:54,784 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,784 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:54,784 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:54,829 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:54,876 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:54,923 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:54,968 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:54,969 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 15:01:54,969 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:54,969 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:54,969 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:54,969 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:55,015 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:55,062 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,062 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-24 15:01:55,062 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 15:01:55,062 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,062 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 15:01:55,063 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,065 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:55,066 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:55,066 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,066 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,066 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,109 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,156 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,203 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,250 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:55,298 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,298 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-24 15:01:55,298 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,298 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,299 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,299 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 15:01:55,345 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,346 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:55,347 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:55,347 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,347 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,347 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,392 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,439 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,486 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,532 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,580 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:55,627 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 15:01:55,628 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,629 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:55,630 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:55,631 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,631 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,631 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,673 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:55,721 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,721 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 15:01:55,721 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,721 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,721 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,722 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,768 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,815 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,862 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:55,909 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 15:01:55,910 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:55,910 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:55,912 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:55,912 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,912 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:55,912 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:55,956 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,003 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,051 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,097 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,144 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:56,191 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,191 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 15:01:56,191 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:01:56,192 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,193 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:56,194 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:56,195 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,195 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,195 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,238 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,285 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,331 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:56,377 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,378 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 15:01:56,378 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,378 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,378 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,378 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:56,425 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,425 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 15:01:56,425 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,425 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,425 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,426 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:56,471 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,471 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 15:01:56,473 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,474 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:56,475 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:56,475 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,475 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,475 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,518 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,566 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,613 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,660 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,706 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:56,753 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 15:01:56,754 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:56,754 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:56,755 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:56,755 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,755 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,756 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,800 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,846 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,893 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,939 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:56,986 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 15:01:57,033 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:57,034 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:01:57,034 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:01:57,034 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 15:01:57,034 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 15:01:57,034 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:01:57,035 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:01:57,036 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:01:57,036 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:01:57,036 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 15:01:57,036 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 15:01:57,126 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:01:57,126 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 15:01:57,126 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:02:00,135 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:02:00,135 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 15:02:00,135 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 15:02:05,192 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 15:02:05,192 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 15:02:05,192 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:02:08,192 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:02:08,192 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 15:02:08,192 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 15:02:17,815 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-24 15:02:17,815 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-24 15:02:17,815 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:02:20,829 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:02:20,829 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 15:02:20,829 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 15:02:31,051 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 15:02:31,051 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 15:02:31,051 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:02:34,444 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:02:34,445 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:02:34,446 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 15:02:34,446 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 15:02:34,446 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:02:34,487 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:02:34,487 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 15:02:34,487 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 15:02:34,488 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 15:02:34,490 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 15:02:39,504 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 15:02:39,504 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:02:39,504 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 15:02:39,505 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 15:02:39,505 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 15:02:44,518 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:02:44,518 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:02:44,518 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 15:02:44,518 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 15:02:47,811 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 15:02:47,812 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 9, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 9, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 15:02:47,812 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 15:02:47,812 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 15:02:47,812 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:02:52,819 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:02:52,819 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:02:52,819 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 15:02:52,819 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 15:02:57,626 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 15:02:57,626 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 15:02:57,627 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 15:02:57,627 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 15:02:57,627 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:03:03,087 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:03:03,088 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:03:03,088 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 15:03:03,089 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,090 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:03:03,090 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 15:03:03,188 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 15:03:03,188 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 15:03:03,188 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 15:03:03,235 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:67]:test_joints:7
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:64]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:66]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:67]:test_joints:-1
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:79]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:81]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:03,237 [test_set_gripper_calibrate.py-->line:38]:test_joints:1
DEBUG 2025-03-24 15:03:08,736 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
ERROR 2025-03-24 15:03:08,736 [test_set_gripper_calibrate.py-->line:52]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_calibrate.py", line 50, in test_set_gripper_joint_calibration
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-24 15:03:08,737 [test_set_gripper_calibrate.py-->line:53]:期望数据：1
DEBUG 2025-03-24 15:03:08,737 [test_set_gripper_calibrate.py-->line:54]:实际结果：0
INFO 2025-03-24 15:03:08,737 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:08,738 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:08,738 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:08,738 [test_set_gripper_calibrate.py-->line:38]:test_joints:2
DEBUG 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:17,257 [test_set_gripper_calibrate.py-->line:38]:test_joints:3
DEBUG 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:25,422 [test_set_gripper_calibrate.py-->line:38]:test_joints:4
DEBUG 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:28,970 [test_set_gripper_calibrate.py-->line:38]:test_joints:5
DEBUG 2025-03-24 15:03:34,659 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:03:34,659 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 15:03:34,659 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:34,659 [test_set_gripper_calibrate.py-->line:35]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:03:34,660 [test_set_gripper_calibrate.py-->line:37]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:03:34,660 [test_set_gripper_calibrate.py-->line:38]:test_joints:6
DEBUG 2025-03-24 15:03:40,100 [test_set_gripper_calibrate.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:03:40,100 [test_set_gripper_calibrate.py-->line:57]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 15:03:40,100 [test_set_gripper_calibrate.py-->line:59]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 15:03:40,101 [test_set_gripper_calibrate.py-->line:30]:环境清理完成，接口测试结束
INFO 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:03:40,103 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:03:40,148 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 15:03:40,194 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:03:40,194 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 15:03:40,194 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 15:03:40,195 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:03:40,196 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:03:40,196 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 15:03:40,197 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 15:03:40,198 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,198 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 15:03:40,198 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 15:03:40,288 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 15:03:40,288 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 15:03:40,288 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 15:03:40,335 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:03:40,337 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:03:40,337 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,337 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 15:03:40,338 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:03:40,339 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:40,339 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 15:03:40,339 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:03:42,444 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:03:42,444 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:42,445 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 15:03:42,446 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 15:03:44,550 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:03:44,550 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 15:03:44,550 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:03:44,550 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:03:44,550 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 15:03:44,551 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:03:44,551 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:44,551 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 15:03:44,551 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:03:46,658 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:03:46,660 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:46,660 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 15:03:46,660 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:03:48,763 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:03:48,763 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 15:03:48,764 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
INFO 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:63]:请求结果断言成功，用例【设置5关节运动到20度】测试成功
INFO 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 15:03:50,864 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:03:52,970 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:03:52,970 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 15:03:52,971 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:03:52,971 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:03:52,971 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:04:05,314 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:05,315 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:05,316 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,317 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,318 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:05,319 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,407 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:05,408 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:05,502 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,596 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,596 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 15:04:05,596 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:05,596 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,596 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,597 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:05,597 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:05,690 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,783 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,783 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 15:04:05,783 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:05,783 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:04:05,784 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:04:05,784 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:05,784 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:05,877 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:05,877 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 15:04:05,877 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 15:04:06,160 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:06,163 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:06,163 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:06,164 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:06,165 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,166 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:06,168 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:06,269 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:06,364 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:06,458 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:06,554 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:04:06,649 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:06,650 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:06,742 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:06,742 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 15:04:06,742 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 15:04:07,023 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:07,026 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:07,026 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,026 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,026 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:07,026 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:07,027 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,028 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:07,029 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:07,116 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:07,210 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:07,304 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,398 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,398 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 15:04:07,398 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,398 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,398 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,399 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:07,399 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:07,490 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,584 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,584 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 15:04:07,584 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 15:04:07,867 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:07,868 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:07,868 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,868 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,869 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,870 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,871 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:07,872 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:07,959 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:08,053 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:08,146 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,238 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,238 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 15:04:08,238 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:08,238 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,239 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:08,239 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:08,239 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,332 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,332 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 15:04:08,333 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:08,333 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,333 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:04:08,333 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:08,333 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,426 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,426 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 15:04:08,426 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 15:04:08,707 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:08,710 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:08,710 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,710 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,710 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,711 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,712 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,713 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,715 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:08,716 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:08,815 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:08,909 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:09,002 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:09,096 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:09,190 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,190 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 15:04:09,190 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:09,191 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,191 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:04:09,191 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:09,191 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:04:09,285 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,285 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 15:04:09,285 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 15:04:09,569 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:09,571 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:09,571 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,571 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,571 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,572 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,573 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:04:09,574 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 15:04:09,575 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:09,575 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,575 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,575 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:09,575 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:09,662 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,662 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 15:04:09,662 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:09,662 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,663 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,663 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:09,663 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:09,757 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:09,852 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,852 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 15:04:09,852 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:09,852 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,853 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,853 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:09,853 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:09,947 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:09,947 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 15:04:09,947 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:09,947 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:09,948 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:09,948 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:09,948 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:10,042 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,136 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,136 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 15:04:10,136 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 15:04:10,459 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:10,460 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:10,460 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,460 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,460 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:04:10,460 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,461 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:04:10,462 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,463 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:10,464 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:10,573 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,669 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,669 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 15:04:10,669 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:10,669 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,670 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,670 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:10,670 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,764 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:10,765 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:10,858 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:10,953 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:10,953 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 15:04:10,953 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:10,953 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:04:10,954 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:04:10,954 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:10,954 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:04:11,047 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,047 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 15:04:11,047 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 15:04:11,337 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,339 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,340 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:04:11,341 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:04:11,342 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:04:11,342 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,342 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,342 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:04:11,342 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,441 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,441 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,442 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:11,442 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,442 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,442 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:04:11,442 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,535 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:04:11,536 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:04:11,628 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:04:11,723 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,816 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,816 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,816 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:11,816 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:04:11,817 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:04:11,817 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:04:11,817 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:04:11,910 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:04:11,910 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 15:04:11,910 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:04:12,192 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:04:12,194 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:04:12,194 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:04:12,195 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:12,195 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 15:04:12,195 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 15:04:12,195 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 15:04:17,206 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:04:17,206 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:17,206 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 15:04:17,206 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 15:04:17,207 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 15:04:22,209 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:04:22,209 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:22,209 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 15:04:22,209 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 15:04:22,210 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 15:04:27,214 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 15:04:27,214 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:27,214 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 15:04:27,214 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:04:27,262 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:04:27,262 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 15:04:27,262 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 15:04:32,276 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:04:32,276 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:32,276 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 15:04:32,276 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:04:32,323 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:04:32,323 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 15:04:32,323 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 15:04:37,325 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:04:37,325 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:37,325 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 15:04:37,325 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:04:37,373 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:04:37,373 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 15:04:37,373 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 15:04:42,376 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:04:42,376 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:42,376 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 15:04:42,376 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:04:42,424 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:04:42,424 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 15:04:42,424 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 15:04:47,433 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 15:04:47,433 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:04:47,433 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 15:04:47,433 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 15:04:47,480 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:04:47,480 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 15:04:47,480 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 15:04:55,503 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:10,582 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:10,582 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,582 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 15:06:10,582 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:06:10,635 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:06:10,635 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 15:06:10,635 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 15:06:10,636 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:10,637 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:10,638 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,638 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 15:06:10,682 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:06:10,682 [test_get_gripper_angles.py-->line:54]:请求结果断言成功，用例【正确获取夹爪全角度】测试成功
INFO 2025-03-24 15:06:10,682 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:06:10,683 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:10,685 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:10,686 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,686 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 15:06:10,686 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:06:10,729 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:06:10,729 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 15:06:10,729 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 15:06:10,729 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:10,732 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:10,732 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,732 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 15:06:10,732 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:06:10,776 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:06:10,776 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 15:06:10,776 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 15:06:10,777 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:10,778 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:10,778 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,778 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:10,779 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:10,823 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:10,871 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:10,917 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:10,918 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 15:06:10,918 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:10,918 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,918 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:10,918 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:10,965 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:11,013 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,013 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-24 15:06:11,013 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:11,013 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,013 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:11,014 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,060 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 15:06:11,061 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:11,061 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 15:06:11,061 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,061 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:11,062 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:11,062 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,062 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,062 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,107 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,154 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,201 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,248 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,294 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 15:06:11,341 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,342 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:11,344 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:11,344 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,344 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,344 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:11,387 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,387 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 15:06:11,388 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,389 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,389 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,389 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,434 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,481 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,528 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:11,574 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,575 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 15:06:11,575 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,575 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,575 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,575 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:11,621 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 15:06:11,622 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,622 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:11,623 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:11,624 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,624 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,624 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,668 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,714 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:11,760 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,760 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 15:06:11,760 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,761 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,761 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,761 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,807 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,853 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:11,900 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,900 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 15:06:11,900 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 15:06:11,900 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,900 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 15:06:11,901 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:11,902 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:11,904 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:11,904 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,904 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:11,904 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:11,947 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:11,993 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:12,041 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:12,088 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:12,134 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,134 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:12,134 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:12,134 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,134 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:12,135 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:12,181 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:12,182 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:06:12,182 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,182 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,182 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:06:12,183 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:12,183 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:06:12,183 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,183 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:12,184 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:12,184 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,186 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,186 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,228 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,276 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,323 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,370 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,417 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 15:06:12,464 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,465 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:12,466 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:12,466 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,466 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,466 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,510 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,556 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,603 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:12,650 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,650 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 15:06:12,650 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,650 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,650 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,651 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,697 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:12,744 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 15:06:12,745 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:12,746 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:12,747 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:12,747 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,747 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,747 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,791 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:06:12,837 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,837 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 15:06:12,837 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:12,837 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,837 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,838 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,885 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,931 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:12,979 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 15:06:13,026 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 15:06:13,028 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 15:06:13,028 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:06:13,029 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:06:13,029 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:06:13,030 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:06:13,030 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 15:06:13,030 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 15:06:13,339 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:06:13,339 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 15:06:13,339 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:06:16,349 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:06:16,349 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 15:06:16,349 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 15:06:21,409 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 15:06:21,409 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 15:06:21,409 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:06:24,410 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:06:24,410 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 15:06:24,410 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 15:06:40,675 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-24 15:06:40,675 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-24 15:06:40,677 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-24 15:06:40,677 [test_get_gripper_status.py-->line:120]:实际结果：1
INFO 2025-03-24 15:06:40,677 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:06:43,679 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 15:06:43,679 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 15:06:43,679 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 15:07:05,611 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 15:07:05,611 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 15:07:05,611 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 15:07:08,998 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:07:09,000 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:07:09,000 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 15:07:09,000 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 15:07:09,000 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 15:07:09,044 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:07:09,044 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 15:07:09,044 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 15:07:09,045 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:07:09,046 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:07:09,047 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:09,047 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:07:09,047 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 15:07:09,047 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 15:07:09,047 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 15:07:14,058 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:14,058 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:07:14,058 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 15:07:14,058 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 15:07:14,059 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 15:07:19,064 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:07:19,064 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:07:19,064 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 15:07:19,064 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 15:07:22,365 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 15:07:22,365 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [11, 9, 9, 9, 9, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
11
10

- [11, 9, 9, 9, 9, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 15:07:22,367 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 15:07:22,367 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 15:07:22,367 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:07:27,373 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 15:07:27,373 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 15:07:27,374 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 15:07:27,374 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 15:07:32,146 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 15:07:32,146 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 49, 43] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 49, 43]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 15:07:32,147 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 15:07:32,147 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 15:07:32,147 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 15:07:37,593 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:07:37,594 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 15:07:37,595 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 15:07:37,596 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 15:07:37,596 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 15:07:37,596 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 15:07:37,596 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 15:07:37,688 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 15:07:37,688 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 15:07:37,688 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 15:07:37,735 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:07:38,794 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:07:38,795 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:07:45,997 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:07:54,522 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:08:02,697 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:08:08,693 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 15:08:14,332 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 15:08:19,813 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 15:08:19,813 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 15:08:19,813 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 15:08:19,814 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,816 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:08:19,817 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 15:08:19,860 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:08:19,860 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 15:08:19,860 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 15:08:19,860 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,861 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 15:08:19,861 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 15:08:19,908 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 15:08:19,908 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 15:08:19,908 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 15:08:19,909 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:19,910 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:19,910 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,910 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 15:08:19,910 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 15:08:19,911 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 15:08:20,001 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 15:08:20,002 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 15:08:20,002 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 15:08:20,048 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:20,051 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:20,051 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 15:08:20,052 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:08:22,154 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
INFO 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:63]:请求结果断言成功，用例【设置1关节运动到20度】测试成功
INFO 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 15:08:22,155 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 15:08:24,256 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:08:24,256 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 15:08:24,257 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:08:24,257 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:08:24,258 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 15:08:24,258 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:08:24,258 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:24,258 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 15:08:24,259 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:08:26,358 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:08:26,358 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:08:26,359 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:08:26,359 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:08:26,359 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:08:26,359 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:08:26,360 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:26,360 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 15:08:26,360 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:08:28,460 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:08:28,460 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:28,461 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 15:08:28,462 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:08:30,555 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:08:30,555 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 15:08:30,555 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:08:30,555 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:08:30,555 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:08:30,557 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 15:08:30,557 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 15:08:30,557 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 15:08:30,557 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 15:08:32,663 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 15:08:32,663 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 15:08:32,663 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 15:08:32,663 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 15:08:32,663 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 15:08:44,995 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:44,997 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:44,998 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:44,999 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,000 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:45,001 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,089 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:45,090 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:45,182 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:45,277 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:45,370 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:45,464 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,556 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,556 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 15:08:45,556 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 15:08:45,839 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,841 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,842 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:45,845 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:45,935 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:45,935 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 15:08:45,935 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:45,936 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:45,936 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:45,936 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:45,936 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:46,030 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:46,123 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:46,124 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:46,217 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:46,312 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:46,407 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,407 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 15:08:46,407 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 15:08:46,692 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:46,694 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:46,694 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,694 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,694 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:46,694 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:46,695 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:46,696 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,697 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:46,698 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:46,786 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,786 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 15:08:46,787 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:46,787 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,787 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,787 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:46,787 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:46,882 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,882 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 15:08:46,882 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:46,883 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,883 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,883 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:46,883 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:46,976 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:47,070 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:47,166 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,260 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,260 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 15:08:47,260 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 15:08:47,544 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:47,545 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,546 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,547 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,548 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,549 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:47,551 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,654 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,654 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 15:08:47,654 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:47,654 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,655 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,655 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:47,655 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,750 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,750 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 15:08:47,750 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:47,750 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,751 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,751 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:47,751 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:47,844 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:47,939 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:48,033 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,127 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,127 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 15:08:48,127 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 15:08:48,411 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:48,413 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:48,413 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,413 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,414 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:48,415 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:48,507 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,603 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,604 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 15:08:48,604 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:48,604 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,605 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,605 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:48,605 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,697 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,697 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 15:08:48,697 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:48,697 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,698 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,698 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:48,698 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:48,791 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:48,886 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 15:08:48,980 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:48,980 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 15:08:48,980 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 15:08:49,263 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:49,265 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:08:49,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:49,267 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:49,359 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:49,452 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,554 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,554 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 15:08:49,554 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:49,554 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,555 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,555 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:49,555 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,655 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:49,656 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:49,749 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:49,843 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:49,843 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 15:08:49,843 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 15:08:50,136 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,138 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,139 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:50,140 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:50,141 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:50,250 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,347 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,347 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 15:08:50,347 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:50,347 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,348 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,348 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:50,348 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,440 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:50,441 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,534 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:50,535 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 15:08:50,629 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:50,630 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 15:08:50,723 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:50,723 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 15:08:50,723 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 15:08:51,028 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:51,029 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,030 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,031 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,032 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 15:08:51,033 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 15:08:51,132 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 15:08:51,226 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,319 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 15:08:51,320 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 15:08:51,413 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 15:08:51,508 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 15:08:51,509 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 15:08:51,602 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 15:08:51,602 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 15:08:51,602 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 15:08:51,884 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 15:08:51,886 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 15:08:51,886 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:51,886 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:08:51,886 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 15:08:51,887 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 15:08:51,887 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 15:08:56,892 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:08:56,892 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:08:56,892 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 15:08:56,892 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 15:08:56,892 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 15:09:01,901 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 15:09:01,901 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:01,901 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 15:09:01,901 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 15:09:01,901 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 15:09:06,914 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 15:09:06,914 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:06,914 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 15:09:06,914 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:09:06,962 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:09:06,962 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 15:09:06,962 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 15:09:11,971 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:09:11,971 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:11,972 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 15:09:11,972 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:09:12,017 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:09:12,017 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 15:09:12,017 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 15:09:17,019 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:09:17,019 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:17,019 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 15:09:17,019 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:09:17,066 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:09:17,066 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 15:09:17,066 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 15:09:22,073 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 15:09:22,073 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:22,073 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 15:09:22,073 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 15:09:22,119 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:09:22,119 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 15:09:22,119 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 15:09:27,134 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 15:09:27,134 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 15:09:27,134 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 15:09:27,134 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 15:09:27,181 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 15:09:27,181 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 15:09:27,181 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 15:09:35,204 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 15:10:23,339 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 15:10:23,342 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,342 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,342 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 15:10:23,388 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,388 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 15:10:23,388 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,388 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,388 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,390 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,435 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,481 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 15:10:23,528 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,528 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 15:10:23,528 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,529 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,529 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,529 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 15:10:23,574 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,574 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 15:10:23,574 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,575 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,575 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,575 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 15:10:23,621 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 15:10:23,621 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 15:10:23,621 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:10:23,622 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 15:10:23,623 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 15:10:23,623 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 15:10:23,623 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 15:10:23,623 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 15:10:23,624 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:02:30,959 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 16:02:30,961 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:02:30,961 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:30,961 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 16:02:30,961 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:02:30,961 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:30,962 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 16:02:38,233 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:02:38,233 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 16:02:38,233 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 16:02:38,234 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:02:38,234 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:38,234 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 16:02:46,790 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:02:46,790 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 16:02:46,790 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 16:02:46,791 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:02:46,791 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:46,791 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:02:54,962 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 16:03:00,937 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:03:00,937 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 16:03:00,937 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 16:03:00,938 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:03:00,938 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:03:00,938 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 16:03:06,060 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:03:06,060 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 16:03:06,060 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 16:03:06,061 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:03:06,061 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:03:06,061 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 16:03:11,529 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:03:11,529 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 16:03:11,529 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 16:03:11,530 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,081 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,082 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,082 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 16:45:29,082 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 16:45:29,134 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:45:29,134 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 16:45:29,134 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 16:45:29,135 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,138 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,138 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,138 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 16:45:29,181 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 16:45:29,181 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [46, 0, 59, 98, 96, 75]

First differing element 0:
0
46

- [0, 0, 0, 0, 0, 0]
+ [46, 0, 59, 98, 96, 75]
DEBUG 2025-03-24 16:45:29,184 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 16:45:29,184 [test_get_gripper_angles.py-->line:51]:实际结果：[46, 0, 59, 98, 96, 75]
INFO 2025-03-24 16:45:29,184 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 16:45:29,185 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,186 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,187 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,187 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 16:45:29,187 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 16:45:29,227 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:45:29,227 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 16:45:29,227 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 16:45:29,228 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,229 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,229 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,229 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 16:45:29,229 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 16:45:29,275 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:45:29,275 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 16:45:29,275 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 16:45:29,275 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,277 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,277 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,277 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,277 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,323 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,370 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:29,416 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,417 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 16:45:29,417 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,417 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,417 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,417 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,463 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:29,509 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:29,510 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 0
DEBUG 2025-03-24 16:45:29,523 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 16:45:29,524 [test_get_gripper_joint_cw.py-->line:52]:实际结果：0
INFO 2025-03-24 16:45:29,524 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,524 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,524 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,524 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:29,571 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:29,571 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 0
DEBUG 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:52]:实际结果：0
INFO 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,572 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:29,573 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,574 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,574 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,574 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,574 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,618 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,664 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:29,710 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,711 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 16:45:29,711 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,711 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,711 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,711 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,757 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:29,805 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:29,805 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 0
DEBUG 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:52]:实际结果：0
INFO 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,817 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:29,868 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:29,868 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 0
DEBUG 2025-03-24 16:45:29,868 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 16:45:29,868 [test_get_gripper_joint_cww.py-->line:52]:实际结果：0
INFO 2025-03-24 16:45:29,868 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:29,869 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:29,870 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:29,870 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,870 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:29,870 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:29,914 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:29,960 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:30,007 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:30,054 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,054 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 16:45:30,054 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:30,054 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,055 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:30,055 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:30,102 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 16:45:30,150 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,151 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,151 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 16:45:30,151 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:30,151 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 16:45:30,151 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,152 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:30,153 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:30,153 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,153 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,153 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,196 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,244 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,292 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,338 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,385 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 16:45:30,432 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,433 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:30,434 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:30,435 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,435 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,435 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:30,478 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,478 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 16:45:30,478 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,478 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,479 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,479 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:30,525 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:30,526 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 16:45:30,539 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 16:45:30,539 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 16:45:30,539 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,540 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,540 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,540 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:30,587 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,587 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 16:45:30,587 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,587 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,587 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,588 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,634 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,679 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:45:30,726 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:30,727 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:30,728 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:30,728 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,728 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,728 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:30,772 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,772 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 16:45:30,772 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:30,772 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,772 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,773 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,819 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,866 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,913 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:30,961 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:30,961 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 16:45:30,961 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:30,961 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:45:30,962 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:30,962 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:31,007 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,007 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 16:45:31,007 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 16:45:31,007 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 16:45:31,008 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,009 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:31,011 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:31,011 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,011 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,011 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,055 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,101 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,148 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:31,194 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,194 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 16:45:31,194 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,196 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,196 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,196 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:31,242 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,242 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 16:45:31,242 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,242 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,243 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,243 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:31,289 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,289 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 16:45:31,289 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:31,290 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 16:45:31,291 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,291 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:31,292 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:31,292 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,292 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,293 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 16:45:31,336 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,336 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 16:45:31,336 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,336 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,336 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,337 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,382 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 16:45:31,430 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,430 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 16:45:31,430 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,430 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,430 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,431 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,477 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,524 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 16:45:31,571 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 16:45:31,571 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 16:45:31,571 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 16:45:31,572 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:45:31,573 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:45:31,575 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 16:45:31,575 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 16:45:31,575 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 16:45:31,575 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 16:45:32,638 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:45:32,638 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 16:45:32,638 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 16:45:35,644 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 16:45:35,644 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 16:45:35,644 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 16:45:40,706 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 16:45:40,706 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 16:45:40,706 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 16:45:43,707 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 16:45:43,707 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 16:45:43,707 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 16:45:51,557 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-24 16:45:51,557 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-24 16:45:51,557 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 16:45:54,558 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 16:45:54,558 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 16:45:54,558 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 16:46:04,011 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 16:46:04,011 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 16:46:04,011 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 16:46:07,462 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 16:46:07,465 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:46:07,465 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 16:46:07,465 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 16:46:07,465 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 16:46:07,511 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:46:07,511 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 16:46:07,511 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 16:46:07,512 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 16:46:07,513 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 16:46:12,524 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:12,524 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 16:46:12,524 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 16:46:12,524 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 16:46:12,524 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 16:46:17,532 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 16:46:17,532 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 16:46:17,532 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 16:46:17,532 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 16:46:20,845 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 16:46:20,845 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 10, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 10, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 16:46:20,847 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 16:46:20,847 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 16:46:20,847 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 16:46:25,858 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 16:46:25,859 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 16:46:25,859 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 16:46:25,859 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 16:46:30,688 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 16:46:30,688 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 50, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 50, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 16:46:30,688 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 16:46:30,689 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 16:46:30,689 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 16:46:36,180 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 16:46:36,181 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 16:46:36,181 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:36,181 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 16:46:36,182 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 16:46:36,284 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 16:46:36,284 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 16:46:36,284 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 16:46:36,331 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:46:37,407 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:46:37,408 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 16:46:44,663 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:46:44,663 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 16:46:44,663 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 16:46:44,663 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:46:44,663 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:46:44,664 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 16:46:53,188 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:46:53,188 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 16:46:53,188 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 16:46:53,188 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:46:53,188 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:46:53,189 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 16:47:01,386 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:47:01,387 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 16:47:01,387 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 16:47:01,387 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:47:01,387 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:47:01,387 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:47:07,429 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:47:13,029 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 16:47:18,424 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:47:18,424 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 16:47:18,424 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 16:47:18,425 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:18,426 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 16:47:18,427 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,428 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 16:47:18,428 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 16:47:18,471 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:47:18,471 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 16:47:18,471 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 16:47:18,472 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,472 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 16:47:18,472 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 16:47:18,518 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 16:47:18,518 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 16:47:18,518 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 16:47:18,519 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:18,521 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:18,521 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,521 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 16:47:18,521 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 16:47:18,522 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 16:47:18,611 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 16:47:18,611 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 16:47:18,611 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 16:47:18,657 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 16:47:18,660 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 16:47:20,753 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:20,753 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 16:47:20,754 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:20,754 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:20,754 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 16:47:20,755 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 16:47:20,755 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:20,755 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 16:47:20,755 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 16:47:22,855 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:22,855 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 16:47:22,856 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:22,856 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:22,856 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 16:47:22,856 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 16:47:22,857 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:22,857 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 16:47:22,857 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 16:47:24,950 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:24,950 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 16:47:24,950 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 16:47:24,951 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 16:47:27,048 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:27,048 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 16:47:27,048 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:27,050 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:27,050 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 16:47:27,051 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 16:47:27,051 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:27,051 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 16:47:27,052 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 16:47:29,156 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:29,156 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 21 != 20
DEBUG 2025-03-24 16:47:29,157 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:29,157 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:29,157 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 16:47:29,159 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 16:47:29,159 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 16:47:29,159 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 16:47:29,159 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 16:47:31,263 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 16:47:31,263 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 16:47:31,264 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 16:47:31,264 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 16:47:31,264 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 16:47:43,612 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:43,614 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,615 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,627 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:43,628 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:43,723 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:43,723 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 16:47:43,723 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:43,723 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,723 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,724 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:43,724 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:43,817 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:43,910 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,003 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,003 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 16:47:44,003 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:44,003 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,003 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:44,004 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:44,004 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,097 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,097 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 16:47:44,097 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:44,097 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,098 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 16:47:44,098 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:44,098 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,191 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,191 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 16:47:44,191 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 16:47:44,472 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,474 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,475 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 16:47:44,487 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:44,488 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,488 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,488 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:44,488 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:44,579 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,672 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,672 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 16:47:44,672 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:44,672 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,672 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,673 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:44,673 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:44,768 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,863 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,863 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 16:47:44,863 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:44,863 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,864 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,864 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:44,864 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:44,956 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:45,049 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,050 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 16:47:45,050 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 16:47:45,331 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,333 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,334 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,335 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:45,347 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,348 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,348 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:45,348 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,440 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,440 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 16:47:45,440 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:45,440 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,440 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,441 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:45,441 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:45,534 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,626 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,626 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 16:47:45,626 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:45,626 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,627 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,627 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:45,627 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,720 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:45,721 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:45,814 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:45,909 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:45,909 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 16:47:45,909 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 16:47:46,189 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,191 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:46,192 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,193 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,204 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:46,205 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,298 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,298 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 16:47:46,298 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:46,298 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,298 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,299 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:46,299 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,393 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,393 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 16:47:46,393 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:46,394 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,394 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,394 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:46,394 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,485 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,485 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 16:47:46,485 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:46,485 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,486 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,486 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:46,486 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,579 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,579 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 16:47:46,579 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:46,579 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,579 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,580 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:46,580 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,672 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,672 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 16:47:46,672 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:46,672 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 16:47:46,672 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 16:47:46,673 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:46,673 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:46,765 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:46,765 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 16:47:46,765 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 16:47:47,048 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:47,051 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,052 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,053 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,054 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,063 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:47,064 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,156 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:47,157 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:47,249 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,342 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:47,343 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:47,437 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,529 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,529 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 16:47:47,529 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,529 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,529 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 16:47:47,530 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:47,530 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 16:47:47,623 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:47,623 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 16:47:47,623 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 16:47:47,904 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 16:47:47,906 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 16:47:47,907 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:47,920 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:47,921 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:47,921 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:47,921 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,014 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,014 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 16:47:48,014 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,014 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,014 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:48,015 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:48,015 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:48,109 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:48,201 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:48,295 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:48,296 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,387 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,387 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 16:47:48,387 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,387 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,388 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 16:47:48,388 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:48,388 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,480 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,480 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 16:47:48,480 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 16:47:48,772 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:48,773 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:48,773 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:48,774 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:48,775 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:48,778 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,888 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,888 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 16:47:48,889 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:48,889 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,889 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,889 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:48,889 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:48,982 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:49,074 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:49,075 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:49,168 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:49,260 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:49,261 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 16:47:49,354 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,354 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 16:47:49,354 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 16:47:49,679 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,681 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,682 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 16:47:49,697 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 16:47:49,698 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 16:47:49,698 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,698 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,698 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 16:47:49,698 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 16:47:49,791 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:49,886 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,887 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:49,888 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:49,888 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,888 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,888 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 16:47:49,888 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 16:47:49,980 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:50,073 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:50,073 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:50,073 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:50,074 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:50,074 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:50,074 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 16:47:50,074 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:50,166 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:50,166 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:50,167 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:50,167 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 16:47:50,167 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 16:47:50,167 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 16:47:50,167 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 16:47:50,259 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 16:47:50,259 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 16:47:50,259 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 16:47:50,542 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 16:47:50,544 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 16:47:55,550 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:47:55,550 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:47:55,550 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 16:47:55,550 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 16:47:55,550 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 16:48:00,559 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 16:48:00,559 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:00,559 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 16:48:00,559 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 16:48:00,559 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 16:48:05,566 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 16:48:05,566 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:05,566 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 16:48:05,566 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 16:48:05,613 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:48:05,613 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 16:48:05,613 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 16:48:10,613 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 16:48:10,613 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:10,613 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 16:48:10,613 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 16:48:10,660 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:48:10,660 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 16:48:10,661 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 16:48:15,670 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 16:48:15,670 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:15,670 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 16:48:15,670 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 16:48:15,717 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:48:15,717 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 16:48:15,717 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 16:48:20,724 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 16:48:20,724 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:20,724 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 16:48:20,724 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 16:48:20,770 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:48:20,770 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 16:48:20,770 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 16:48:25,775 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 16:48:25,775 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 16:48:25,775 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 16:48:25,775 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 16:48:25,821 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 16:48:25,821 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 16:48:25,821 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 16:48:33,836 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 16:52:43,777 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 16:52:43,779 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:52:43,780 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:52:43,780 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 16:52:43,780 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:52:43,780 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:52:43,780 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:52:43,781 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 16:52:51,032 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:52:51,032 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 16:52:51,032 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 16:52:51,033 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:52:51,033 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:52:51,034 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 16:52:59,509 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:52:59,509 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 16:52:59,509 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 16:52:59,510 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:52:59,510 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:52:59,510 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 16:53:07,685 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:53:07,685 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 16:53:07,685 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 16:53:07,686 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:53:07,686 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:53:07,686 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 16:53:13,717 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:53:13,718 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 16:53:13,718 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 16:53:13,718 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:53:13,719 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:53:13,719 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 16:53:19,213 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:53:19,213 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 16:53:19,213 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 16:53:19,214 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:53:19,214 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:53:19,214 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 16:53:24,515 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:53:24,515 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 16:53:24,516 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 16:53:24,517 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 16:55:24,706 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 16:55:24,708 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:55:24,709 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:24,709 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 16:55:24,709 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:55:24,709 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:55:24,710 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 16:55:24,710 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:24,710 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 16:55:24,710 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 16:55:24,710 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 16:55:24,711 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:55:24,711 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:24,711 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 16:55:31,961 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:55:31,961 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 16:55:31,961 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 16:55:31,962 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:55:31,962 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:31,962 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 16:55:40,498 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:55:40,498 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 16:55:40,498 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 16:55:40,499 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:55:40,499 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:40,499 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 16:55:48,688 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:55:48,688 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 16:55:48,688 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 16:55:48,689 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:55:48,689 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:48,689 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 16:55:54,726 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:55:54,726 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 16:55:54,726 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 16:55:54,727 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:55:54,727 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:55:54,728 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 16:56:00,352 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:56:00,352 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 16:56:00,352 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 16:56:00,353 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 16:56:00,353 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 16:56:00,353 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 16:56:05,635 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 16:56:05,635 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 16:56:05,635 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 16:56:05,636 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:01:40,710 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:01:40,712 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:01:40,712 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:01:40,713 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:01:40,714 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:01:40,714 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:01:40,714 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:01:47,969 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:01:47,969 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:01:47,969 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:01:47,970 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:01:47,970 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:01:47,970 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:01:56,482 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:01:56,482 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:01:56,482 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:01:56,483 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:01:56,483 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:01:56,483 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:02:04,684 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:02:04,684 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:02:04,684 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:02:04,685 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:02:04,685 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:02:04,685 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:02:10,677 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:02:10,677 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:02:10,677 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:02:10,678 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:02:10,678 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:02:10,678 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:02:16,408 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:02:16,408 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:02:16,408 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:02:16,408 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:02:16,410 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:02:16,410 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:02:21,762 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:02:21,762 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:02:21,762 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:02:21,764 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:04:35,380 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:04:35,382 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,382 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,382 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:04:35,382 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,382 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,383 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,384 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,384 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,384 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:04:35,384 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,384 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:04:35,396 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:04:35,397 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
INFO 2025-03-24 17:04:45,473 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:04:45,474 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:45,474 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:04:45,474 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
INFO 2025-03-24 17:04:55,517 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:04:55,517 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:04:55,517 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:04:55,517 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
INFO 2025-03-24 17:05:05,571 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:05,571 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:05,572 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:05:05,572 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:05,664 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:05,664 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:05,664 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:05,664 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:05,666 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:05,666 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:05:05,666 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:05:05,760 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:05,853 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:05,853 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:05,853 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:06,139 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:10,097 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:10,099 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,099 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,099 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:05:10,099 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,099 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,100 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,101 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,101 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,101 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:05:10,101 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,101 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,112 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,112 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,112 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:05:10,112 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,112 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:05:10,113 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:05:10,205 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,298 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:05:10,300 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,393 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,393 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,393 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,393 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,394 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,394 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:05:10,394 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:05:10,486 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,581 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,581 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,581 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,582 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:10,582 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:10,582 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:05:10,582 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:05:10,674 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:05:10,674 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:10,674 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:10,954 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,179 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,179 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,179 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 17:05:41,179 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:05:41,220 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:05:41,220 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 17:05:41,220 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 17:05:41,221 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,222 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,222 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,222 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 17:05:41,268 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 17:05:41,269 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 0, 1]

First differing element 5:
0
1

- [0, 0, 0, 0, 0, 0]
?                 ^

+ [0, 0, 0, 0, 0, 1]
?                 ^

DEBUG 2025-03-24 17:05:41,270 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 17:05:41,270 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 0, 1]
INFO 2025-03-24 17:05:41,270 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:05:41,272 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,273 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,273 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,274 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 17:05:41,274 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:05:41,315 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:05:41,315 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 17:05:41,315 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 17:05:41,316 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,319 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,319 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,319 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 17:05:41,319 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:05:41,362 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:05:41,362 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 17:05:41,362 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 17:05:41,362 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,364 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,364 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,364 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,364 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,409 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,456 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,503 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,551 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:41,598 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:05:41,598 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:05:41,600 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:05:41,600 [test_get_gripper_joint_cw.py-->line:52]:实际结果：5
INFO 2025-03-24 17:05:41,600 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,601 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,601 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,601 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:41,645 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:05:41,645 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:05:41,645 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:05:41,645 [test_get_gripper_joint_cw.py-->line:52]:实际结果：5
INFO 2025-03-24 17:05:41,645 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 17:05:41,646 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:41,647 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,648 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,648 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,648 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,649 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,692 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,739 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,786 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,833 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:41,881 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:05:41,881 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:05:41,882 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:05:41,882 [test_get_gripper_joint_cww.py-->line:52]:实际结果：5
INFO 2025-03-24 17:05:41,882 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,883 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,883 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,883 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:41,928 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:05:41,928 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:05:41,928 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:05:41,928 [test_get_gripper_joint_cww.py-->line:52]:实际结果：5
INFO 2025-03-24 17:05:41,928 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 17:05:41,929 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:41,930 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:41,931 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:41,931 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,931 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:41,931 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:41,976 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:41,976 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 17:05:41,976 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:41,977 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:41,977 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:41,977 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,023 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,069 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,115 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,163 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:42,211 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,211 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 17:05:42,211 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 17:05:42,211 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:05:42,212 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:42,213 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 17:05:42,213 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,213 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:42,215 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:42,215 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,215 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,215 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,257 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,303 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,350 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,397 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:42,443 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,443 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 17:05:42,443 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,443 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,443 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,444 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:05:42,490 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:42,491 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 17:05:42,491 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,491 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:42,493 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:42,493 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,493 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,493 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,536 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,583 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,630 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,678 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,725 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,772 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:05:42,773 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:42,774 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:42,775 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:42,775 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,775 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:42,775 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:42,820 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:42,867 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:42,914 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:42,961 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:43,009 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,055 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,057 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:05:43,057 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:43,057 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 17:05:43,057 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,058 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:43,059 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:43,059 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,059 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,059 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,102 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,149 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,195 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:43,242 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,243 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 17:05:43,243 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,243 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,243 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,243 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:43,288 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,288 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 17:05:43,288 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,288 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,289 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,289 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 17:05:43,336 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,337 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:43,339 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:43,339 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,339 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,339 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:05:43,382 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,383 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 17:05:43,383 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,383 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,383 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,383 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,429 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:05:43,475 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,476 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 17:05:43,476 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,476 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,476 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,476 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,521 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,568 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:05:43,615 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:05:43,615 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 17:05:43,615 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:05:43,615 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,615 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:05:43,616 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:05:43,617 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:05:43,617 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:05:43,617 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 17:05:43,617 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 17:05:43,943 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:05:43,943 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 17:05:43,943 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:05:46,954 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:05:46,954 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 17:05:46,955 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 17:05:52,016 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 17:05:52,016 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 17:05:52,016 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:05:55,024 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:05:55,024 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 17:05:55,024 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 17:06:03,737 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-24 17:06:03,737 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1
DEBUG 2025-03-24 17:06:03,739 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-24 17:06:03,740 [test_get_gripper_status.py-->line:120]:实际结果：1
INFO 2025-03-24 17:06:03,740 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:06:06,749 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:06:06,750 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 17:06:06,750 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 17:06:10,867 [test_get_gripper_status.py-->line:140]:请求类型断言成功
ERROR 2025-03-24 17:06:10,867 [test_get_gripper_status.py-->line:148]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 146, in test_get_gripper_status_3
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 3 != 1
DEBUG 2025-03-24 17:06:10,868 [test_get_gripper_status.py-->line:149]:期望数据：3
DEBUG 2025-03-24 17:06:10,868 [test_get_gripper_status.py-->line:150]:实际结果：1
INFO 2025-03-24 17:06:10,868 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:06:14,279 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:06:14,281 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:06:14,281 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 17:06:14,281 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 17:06:14,281 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:06:14,329 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:06:14,329 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 17:06:14,329 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 17:06:14,329 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 17:06:14,331 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 17:06:19,339 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:19,339 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:06:19,339 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 17:06:19,339 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 17:06:19,340 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 17:06:24,346 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:06:24,346 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:06:24,346 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 17:06:24,346 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 17:06:27,670 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:06:27,670 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 10, 9, 9, 8, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 10, 9, 9, 8, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 17:06:27,671 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:06:27,671 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:06:27,671 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:06:32,680 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:06:32,680 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:06:32,680 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 17:06:32,680 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 17:06:37,501 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:06:37,501 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 48, 48, 44] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 48, 48, 44]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 17:06:37,502 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:06:37,502 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:06:37,502 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:06:42,989 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:42,991 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:06:42,992 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 17:06:43,081 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 17:06:43,081 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 17:06:43,081 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 17:06:43,128 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:06:44,176 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:06:44,177 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:06:51,431 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:06:59,918 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:07:08,112 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:07:08,112 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:07:08,112 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:07:08,112 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:07:08,112 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:07:08,113 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:07:14,185 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:07:14,185 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:07:14,185 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:07:14,186 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:07:14,186 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:07:14,186 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:07:19,775 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:07:19,775 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:07:19,775 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:07:19,775 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:07:19,775 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:07:19,776 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:07:25,077 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:07:25,077 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:07:25,077 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:07:25,078 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:25,079 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:07:25,080 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 17:07:25,124 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:07:25,125 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 17:07:25,125 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 17:07:25,125 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,125 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:07:25,125 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 17:07:25,170 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:07:25,170 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 17:07:25,170 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 17:07:25,171 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:25,172 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:07:25,174 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 17:07:25,175 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:07:25,175 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:07:25,175 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,175 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 17:07:25,175 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 17:07:25,265 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 17:07:25,265 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 17:07:25,265 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 17:07:25,312 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,314 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 17:07:25,315 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:07:27,419 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:27,419 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:07:27,420 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:27,420 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:27,420 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:07:27,421 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 17:07:27,421 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:27,421 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 17:07:27,421 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 17:07:29,522 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:29,522 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 17:07:29,523 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:29,523 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:29,523 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 17:07:29,524 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:07:29,524 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:29,524 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 17:07:29,524 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:07:31,628 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:31,629 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 17:07:31,629 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:07:33,734 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:33,734 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:07:33,735 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:33,735 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:33,735 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:07:33,736 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:07:33,736 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:33,736 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 17:07:33,736 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:07:35,828 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:35,828 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 17:07:35,829 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:35,829 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:35,829 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:07:35,830 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:07:35,830 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:07:35,830 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 17:07:35,830 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:07:37,937 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:07:37,937 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 17:07:37,938 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:07:37,938 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:07:37,938 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:07:50,248 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:50,249 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:50,249 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,249 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,249 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,250 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,251 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,263 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:50,264 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,357 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:50,358 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:50,451 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:50,542 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,635 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,635 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 17:07:50,635 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:50,635 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,636 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,636 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:50,636 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,729 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,729 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 17:07:50,729 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:50,729 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:07:50,730 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:07:50,730 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:50,730 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:50,824 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:50,824 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 17:07:50,824 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:07:51,106 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:51,109 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,110 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,111 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,111 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,111 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,111 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,111 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,123 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,124 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,124 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:51,124 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:51,215 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,309 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:51,310 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:51,403 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:51,496 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,589 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:51,590 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:51,684 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:51,684 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 17:07:51,684 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:07:51,965 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:51,966 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:51,966 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,967 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,968 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,968 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,968 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,968 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,968 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,980 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,981 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,981 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,981 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,981 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:51,982 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:51,983 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:51,983 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:51,984 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:52,073 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:52,169 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:52,170 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,262 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,262 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 17:07:52,262 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,262 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,262 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:52,263 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:52,263 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,357 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,357 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 17:07:52,357 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,357 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,358 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:52,358 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:52,358 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:07:52,451 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:52,452 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,545 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,545 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 17:07:52,545 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 17:07:52,826 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,828 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,829 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,830 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,841 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:52,842 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:52,935 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:52,936 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:53,027 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,121 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
ERROR 2025-03-24 17:07:53,121 [test_set_gripper_joint_i.py-->line:53]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_i.py", line 50, in test_set_gripper_joint_i
    self.assertEqual(case['expect_data'], set_res)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 0
DEBUG 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:54]:期望数据：1
DEBUG 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:55]:实际结果：0
INFO 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:53,133 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,229 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,229 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 17:07:53,229 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:53,229 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,230 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:53,230 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:53,230 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:53,324 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,419 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,419 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 17:07:53,419 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 17:07:53,701 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:53,702 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:53,702 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,703 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,704 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,716 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:53,717 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,809 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:53,810 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,904 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:53,905 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:53,999 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:54,093 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:54,187 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,187 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 17:07:54,187 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:54,187 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,187 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:07:54,188 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:54,188 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:07:54,282 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,282 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 17:07:54,282 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 17:07:54,562 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:54,564 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,565 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:07:54,566 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,579 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:54,580 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:54,672 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:54,766 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,766 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 17:07:54,766 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:54,767 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,767 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,767 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:54,767 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,861 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:54,862 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:54,954 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:55,046 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,140 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,140 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 17:07:55,140 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:07:55,441 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,443 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:55,444 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:55,453 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,454 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,454 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:55,454 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,555 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:55,556 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,658 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,658 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 17:07:55,658 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:55,658 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,658 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,659 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:55,659 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:55,752 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,852 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,852 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 17:07:55,852 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:55,853 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,853 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,853 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:55,853 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:55,939 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:07:56,034 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,034 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 17:07:56,034 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:07:56,329 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:56,331 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,332 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,333 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,334 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:07:56,335 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,336 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,336 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:07:56,336 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:07:56,443 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:07:56,537 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,633 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:07:56,634 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:07:56,727 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:07:56,820 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:07:56,915 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:07:56,915 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:07:56,915 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:07:57,198 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:07:57,200 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:07:57,201 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:07:57,201 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:07:57,201 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 17:07:57,201 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 17:07:57,201 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 17:08:02,207 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:08:02,207 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:02,207 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 17:08:02,207 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 17:08:02,207 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 17:08:07,213 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:08:07,213 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:07,213 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 17:08:07,213 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 17:08:07,213 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 17:08:12,221 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 17:08:12,222 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:12,222 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 17:08:12,222 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:08:12,267 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:08:12,267 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 17:08:12,267 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 17:08:17,267 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:08:17,267 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:17,267 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 17:08:17,267 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:08:17,315 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:08:17,315 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 17:08:17,315 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:08:22,323 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:08:22,323 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:22,323 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 17:08:22,323 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:08:22,369 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:08:22,369 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 17:08:22,369 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:08:27,377 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:08:27,377 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:27,377 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 17:08:27,377 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:08:27,424 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:08:27,424 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 17:08:27,424 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 17:08:32,433 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 17:08:32,433 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:08:32,433 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 17:08:32,433 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 17:08:32,480 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:08:32,481 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 17:08:32,481 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 17:08:40,494 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:08:59,150 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:08:59,154 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:08:59,154 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:08:59,154 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:08:59,154 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:08:59,154 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:08:59,155 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:08:59,155 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:08:59,155 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:08:59,155 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:08:59,155 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:08:59,156 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:08:59,156 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:08:59,156 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:09:06,404 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:06,404 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:09:06,404 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:06,405 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:09:06,405 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:09:06,405 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:09:14,957 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:14,958 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:09:14,958 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:14,958 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:09:14,958 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:09:14,959 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:09:23,125 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:23,125 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:09:23,125 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:23,126 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:09:23,126 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:09:23,126 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:09:29,147 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:29,147 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:09:29,147 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:29,148 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:09:29,148 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:09:29,148 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:09:34,785 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:09:40,245 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:09:40,246 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:09:40,246 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:09:40,247 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:10:44,761 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:10:44,763 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:10:44,763 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:10:44,763 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 17:10:44,763 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 17:10:44,763 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 17:10:49,770 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:10:49,770 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:10:49,770 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 17:10:49,770 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 17:10:49,771 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 17:10:54,774 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:10:54,775 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:10:54,775 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 17:10:54,775 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 17:10:54,775 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 17:10:59,779 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 17:10:59,779 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:10:59,780 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 17:10:59,780 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:11:02,788 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:11:02,788 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 17:11:02,788 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 17:11:07,791 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:11:07,791 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:11:07,792 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 17:11:07,792 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:11:07,838 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:11:07,838 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 17:11:07,838 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:11:12,850 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:11:12,850 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:11:12,850 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 17:11:12,850 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:11:12,897 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:11:12,897 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 17:11:12,897 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:11:17,910 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:11:17,910 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:11:17,911 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 17:11:17,911 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:11:17,956 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:11:17,956 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 17:11:17,956 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 17:11:22,964 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 17:11:22,964 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:11:22,964 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 17:11:22,965 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 17:11:23,011 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:11:23,011 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 17:11:23,011 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 17:11:31,023 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:32:24,171 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:32:24,174 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:32:24,174 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:24,174 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:32:24,174 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:32:24,175 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:32:24,176 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:24,176 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:24,176 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:31,088 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:32:39,397 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:32:39,397 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:32:39,397 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:32:39,398 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:39,398 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:39,398 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:47,802 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:53,754 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:32:59,373 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:32:59,373 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:32:59,373 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:32:59,374 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:32:59,374 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:32:59,374 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:33:04,912 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:33:04,913 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:33:04,913 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:33:04,914 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:27,702 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:27,702 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,702 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 17:37:27,702 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:37:27,752 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:37:27,752 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 17:37:27,752 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 17:37:27,753 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:27,754 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:27,754 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,754 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 17:37:27,799 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 17:37:27,799 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 100, 65]

First differing element 4:
0
100

- [0, 0, 0, 0, 0, 0]
?                 ^

+ [0, 0, 0, 0, 100, 65]
?              ++   ^^

DEBUG 2025-03-24 17:37:27,801 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 17:37:27,801 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 100, 65]
INFO 2025-03-24 17:37:27,801 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:37:27,803 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:27,804 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:27,804 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,804 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 17:37:27,804 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:37:27,846 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:37:27,846 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 17:37:27,846 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 17:37:27,846 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:27,848 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:27,849 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,849 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 17:37:27,849 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:37:27,894 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:37:27,894 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 17:37:27,894 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 17:37:27,895 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:27,897 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:27,897 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,897 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:27,897 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:27,940 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:27,940 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:27,942 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:27,942 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:27,942 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:27,943 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,943 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:27,943 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:27,988 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:27,988 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:27,989 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:28,035 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,036 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,037 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,037 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,037 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:28,038 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,038 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:28,038 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:28,082 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,082 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,083 [test_get_gripper_joint_cw.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,083 [test_get_gripper_joint_cw.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,083 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:28,083 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,083 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:28,084 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:28,130 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 17:37:28,177 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,179 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:28,180 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:28,180 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,180 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,180 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:28,224 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,224 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,225 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,225 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,225 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,226 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,226 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,226 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:28,270 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,270 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,270 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,270 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,270 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,271 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,271 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,271 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:28,317 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,318 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,318 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,318 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,318 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,319 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,319 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,319 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:28,364 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,364 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 5 != 3
DEBUG 2025-03-24 17:37:28,366 [test_get_gripper_joint_cww.py-->line:51]:期望数据：5
DEBUG 2025-03-24 17:37:28,366 [test_get_gripper_joint_cww.py-->line:52]:实际结果：3
INFO 2025-03-24 17:37:28,366 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,367 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,367 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,367 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,411 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:28,458 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,458 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-24 17:37:28,458 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:37:28,458 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,458 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 17:37:28,459 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,460 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:28,461 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:28,461 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,461 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,461 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,504 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,550 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,598 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,644 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:28,692 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,692 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 8
DEBUG 2025-03-24 17:37:28,707 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-24 17:37:28,707 [test_get_gripper_joint_d.py-->line:52]:实际结果：8
INFO 2025-03-24 17:37:28,708 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,708 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,708 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,708 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:28,755 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:28,755 [test_get_gripper_joint_d.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_d.py", line 48, in test_get_gripper_joint_d
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 120 != 8
DEBUG 2025-03-24 17:37:28,755 [test_get_gripper_joint_d.py-->line:51]:期望数据：120
DEBUG 2025-03-24 17:37:28,756 [test_get_gripper_joint_d.py-->line:52]:实际结果：8
INFO 2025-03-24 17:37:28,756 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 17:37:28,756 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,756 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,756 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 17:37:28,757 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:28,758 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:28,759 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:28,759 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,759 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,759 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,801 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:28,848 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,848 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 17:37:28,848 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:28,849 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,849 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,849 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,895 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,941 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:28,988 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:28,988 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 17:37:28,989 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:28,989 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:37:28,989 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:28,989 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:29,035 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,035 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 17:37:29,035 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 17:37:29,035 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:29,036 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 17:37:29,037 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,037 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:29,038 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:29,039 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,039 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,039 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:29,081 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,081 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 17:37:29,082 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:37:29,082 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 17:37:29,082 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,083 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,083 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,083 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,128 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:29,175 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,175 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,176 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:29,222 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,222 [test_get_gripper_joint_mini_pressure.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_mini_pressure.py", line 48, in test_get_gripper_joint_mini_pressure
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 24
DEBUG 2025-03-24 17:37:29,222 [test_get_gripper_joint_mini_pressure.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:37:29,222 [test_get_gripper_joint_mini_pressure.py-->line:52]:实际结果：24
INFO 2025-03-24 17:37:29,222 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,223 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,223 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,223 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:29,269 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,269 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 17:37:29,269 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,269 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,269 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,270 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:29,316 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,316 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 17:37:29,316 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:37:29,316 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,317 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:29,318 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:29,319 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,319 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,319 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,363 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,409 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,456 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,503 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:29,550 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,550 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 32
DEBUG 2025-03-24 17:37:29,564 [test_get_gripper_joint_p.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,564 [test_get_gripper_joint_p.py-->line:52]:实际结果：32
INFO 2025-03-24 17:37:29,564 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,565 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,565 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,565 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:29,612 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,612 [test_get_gripper_joint_p.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_p.py", line 48, in test_get_gripper_joint_p
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 32
DEBUG 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:52]:实际结果：32
INFO 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,613 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,614 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:29,615 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:29,615 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,615 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,615 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:29,659 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,659 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,660 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,660 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,660 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,661 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,661 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,661 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:29,706 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,706 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,706 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,706 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,706 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,707 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,707 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,707 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:29,753 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,753 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,753 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,755 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,755 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,755 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,755 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,755 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:29,800 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,800 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,800 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,800 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,800 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,802 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,802 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,802 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:29,847 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,847 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,847 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,847 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,849 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,849 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,849 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,849 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:29,894 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,894 [test_get_gripper_joint_speed.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_speed.py", line 48, in test_get_gripper_joint_speed
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 20
DEBUG 2025-03-24 17:37:29,894 [test_get_gripper_joint_speed.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,894 [test_get_gripper_joint_speed.py-->line:52]:实际结果：20
INFO 2025-03-24 17:37:29,894 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:29,895 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 17:37:29,896 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:29,896 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:29,898 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:29,898 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,898 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:29,898 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:37:29,941 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:29,942 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:29,954 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:29,954 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:29,954 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:29,955 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:29,955 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:29,955 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:37:30,003 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:30,003 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:30,003 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:30,003 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:30,004 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:30,004 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,005 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,005 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:37:30,050 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:30,050 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:30,051 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:30,051 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:30,051 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:30,052 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,053 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,053 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:37:30,096 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:30,096 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:30,098 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:30,098 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:30,098 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:30,099 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,099 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,099 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:37:30,143 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:30,143 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:30,144 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:30,144 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:30,144 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:30,144 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,145 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,145 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:37:30,190 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:37:30,190 [test_get_gripper_joint_torque.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_torque.py", line 48, in test_get_gripper_joint_torque
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 100 != 44
DEBUG 2025-03-24 17:37:30,191 [test_get_gripper_joint_torque.py-->line:51]:期望数据：100
DEBUG 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:52]:实际结果：44
INFO 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:37:30,192 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 17:37:30,193 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 17:37:30,193 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:37:30,193 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:30,195 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:30,197 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:37:30,197 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 17:37:30,197 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 17:37:30,501 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:37:30,501 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 17:37:30,501 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:37:33,505 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:37:33,506 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 17:37:33,506 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 17:37:38,565 [test_get_gripper_status.py-->line:78]:请求类型断言成功
ERROR 2025-03-24 17:37:38,565 [test_get_gripper_status.py-->line:86]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 84, in test_get_gripper_status_1
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 3
DEBUG 2025-03-24 17:37:38,565 [test_get_gripper_status.py-->line:87]:期望数据：1
DEBUG 2025-03-24 17:37:38,565 [test_get_gripper_status.py-->line:88]:实际结果：3
INFO 2025-03-24 17:37:38,567 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:37:41,571 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:37:41,572 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 17:37:41,572 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 17:37:50,178 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-24 17:37:50,178 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 3
DEBUG 2025-03-24 17:37:50,179 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-24 17:37:50,179 [test_get_gripper_status.py-->line:120]:实际结果：3
INFO 2025-03-24 17:37:50,179 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:37:53,188 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:37:53,188 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 17:37:53,188 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 17:37:55,701 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 17:37:55,701 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 17:37:55,701 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:37:59,090 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:59,092 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:59,092 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 17:37:59,092 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 17:37:59,092 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:37:59,138 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:37:59,138 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 17:37:59,138 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 17:37:59,139 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 17:37:59,140 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 17:38:04,149 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 17:38:04,149 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:38:04,149 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 17:38:04,149 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 17:38:04,149 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 17:38:09,151 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:38:09,151 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:38:09,151 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 17:38:09,151 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 17:38:12,457 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:38:12,457 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 10, 9] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 10, 9]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 17:38:12,459 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:38:12,459 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:38:12,459 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:38:17,464 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:38:17,465 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:38:17,465 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 17:38:17,465 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 17:38:22,231 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:38:22,232 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 48, 48] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 48, 48]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 17:38:22,232 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:38:22,233 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:38:22,233 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:38:27,676 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:38:27,678 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:38:27,679 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 17:38:27,780 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 17:38:27,780 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 17:38:27,780 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 17:38:27,827 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:38:28,887 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:28,888 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:35,901 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:44,240 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:52,581 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:38:58,516 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:39:04,112 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:39:09,639 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:39:09,639 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:39:09,639 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:39:09,640 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,642 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:39:09,643 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:39:09,685 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 17:39:09,732 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:39:09,732 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 17:39:09,732 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 17:39:09,732 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:09,735 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:09,735 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,735 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:39:09,735 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 17:39:09,736 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 17:39:09,829 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 17:39:09,829 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 17:39:09,829 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 17:39:09,873 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:09,875 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:09,875 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,875 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 17:39:09,876 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:39:11,975 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:11,976 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:39:11,976 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:11,976 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:11,976 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:39:11,976 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 17:39:11,978 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:11,978 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 17:39:11,978 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 17:39:14,080 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:14,080 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 17:39:14,081 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:14,081 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:14,081 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 17:39:14,081 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:39:14,082 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:14,082 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 17:39:14,082 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:39:16,187 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:16,187 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 17:39:16,188 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:39:18,280 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:18,280 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:39:18,281 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:18,281 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:18,281 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:39:18,282 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:39:18,282 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:18,282 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 17:39:18,282 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:39:20,389 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:20,389 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 23 != 20
DEBUG 2025-03-24 17:39:20,390 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:20,390 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:20,390 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:39:20,390 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:39:20,390 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:39:20,391 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 17:39:20,391 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:39:22,488 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:39:22,488 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 17:39:22,488 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:39:22,488 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:39:22,488 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:39:34,824 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,826 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:34,827 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,828 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,829 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,829 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,829 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:34,829 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,829 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,839 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,839 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,839 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:34,840 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:34,933 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:35,027 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:35,028 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,120 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,120 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 17:39:35,120 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:35,121 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,121 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:35,121 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:35,121 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,214 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,214 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 17:39:35,214 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:35,214 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,214 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:35,215 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:35,215 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:35,308 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,401 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,401 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 17:39:35,401 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:39:35,682 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:35,684 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,685 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,686 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,687 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,697 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,697 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:35,698 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,790 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:35,791 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,884 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,884 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 17:39:35,884 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:35,885 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,885 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,885 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:35,885 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:35,979 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:36,074 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:36,075 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:36,167 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:36,168 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:36,260 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,260 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 17:39:36,260 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:39:36,541 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,542 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,543 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,558 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,558 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:36,558 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,558 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,558 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:36,559 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:36,651 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:36,745 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:36,838 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:36,839 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:36,933 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:36,934 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:37,028 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,123 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,123 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 17:39:37,123 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 17:39:37,406 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:37,408 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:37,408 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,409 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,410 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,411 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,423 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,424 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:37,425 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,516 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:37,517 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,610 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,610 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 17:39:37,610 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:37,610 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,610 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,611 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:37,611 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,705 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,705 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 17:39:37,705 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:37,706 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,706 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,706 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:37,706 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:37,799 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,894 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,894 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 17:39:37,894 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:37,894 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:39:37,894 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:39:37,895 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:37,895 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:37,989 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:37,989 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 17:39:37,989 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 17:39:38,269 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:38,271 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:38,271 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,271 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,272 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,273 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,274 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,286 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,286 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,286 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,287 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:38,288 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,379 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:38,380 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,472 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,472 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 17:39:38,472 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:38,472 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,473 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,473 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:38,473 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,568 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,568 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 17:39:38,568 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:38,569 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,569 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,569 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:38,569 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,662 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,662 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 17:39:38,662 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:38,662 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,663 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,663 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:38,663 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:38,756 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:39:38,849 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:38,849 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 17:39:38,849 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 17:39:39,130 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:39,131 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,132 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,133 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,134 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,145 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,145 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,145 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:39:39,145 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,146 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:39,147 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:39,239 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:39,331 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:39,424 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:39,517 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,613 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,613 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 17:39:39,613 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,613 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,613 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:39:39,614 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:39,614 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:39,707 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:39,707 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 17:39:39,707 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:39:39,986 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:39,988 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,989 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,990 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:39,991 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,002 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,002 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,002 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:40,002 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:40,002 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:40,003 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:40,094 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:40,188 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:40,282 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:40,377 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:40,472 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:39:40,565 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,565 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 17:39:40,565 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:39:40,878 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,880 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,881 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,882 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:39:40,883 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,883 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,883 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,883 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,895 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:40,895 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,895 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:39:40,896 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:39:40,897 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,897 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,897 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:39:40,897 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:40,988 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:40,988 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:40,988 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:40,988 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:40,988 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:40,989 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:39:40,989 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:39:41,083 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:41,177 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:41,177 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:41,177 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:41,177 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:41,177 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:41,178 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:39:41,178 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:39:41,270 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:41,363 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:41,363 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:41,363 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:41,363 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:39:41,363 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:39:41,364 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:39:41,364 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:39:41,457 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:39:41,457 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:39:41,457 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:39:41,738 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 17:39:41,741 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:46,747 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:46,747 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:39:46,747 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 17:39:46,747 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 17:39:46,747 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:51,749 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:39:51,749 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:39:51,749 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 17:39:51,749 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 17:39:51,749 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 17:39:56,760 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 17:39:56,760 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:39:56,760 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 17:39:56,760 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:39:56,807 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:39:56,807 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 17:39:56,807 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 17:40:01,807 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:40:01,807 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:40:01,807 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 17:40:01,807 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:40:01,854 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:40:01,854 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 17:40:01,854 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:40:06,868 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:40:06,868 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:40:06,868 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 17:40:06,868 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:40:06,916 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:40:06,916 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 17:40:06,916 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:40:11,926 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:40:11,926 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:40:11,926 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 17:40:11,926 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:40:11,973 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:40:11,973 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 17:40:11,973 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 17:40:16,985 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 17:40:16,985 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:40:16,985 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 17:40:16,985 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 17:40:17,031 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:40:17,031 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 17:40:17,031 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 17:40:25,044 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:49,721 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:49,722 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,722 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 17:40:49,722 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:40:49,766 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:40:49,766 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 17:40:49,766 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 17:40:49,767 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:49,768 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:49,769 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,769 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 17:40:49,813 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-24 17:40:49,813 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 3, 0]

First differing element 4:
0
3

- [0, 0, 0, 0, 0, 0]
?              ^

+ [0, 0, 0, 0, 3, 0]
?              ^

DEBUG 2025-03-24 17:40:49,815 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-24 17:40:49,815 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 3, 0]
INFO 2025-03-24 17:40:49,815 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:40:49,817 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:49,818 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:49,819 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,819 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 17:40:49,819 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:40:49,860 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:40:49,860 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 17:40:49,860 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 17:40:49,861 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:49,862 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:49,862 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,863 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 17:40:49,863 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:40:49,907 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:40:49,907 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 17:40:49,907 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 17:40:49,908 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:49,909 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:49,909 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,909 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:49,909 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:49,954 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,001 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,049 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,096 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:50,142 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:40:50,142 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:40:50,144 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:40:50,144 [test_get_gripper_joint_cw.py-->line:52]:实际结果：5
INFO 2025-03-24 17:40:50,144 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:50,144 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,145 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,145 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:50,189 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:40:50,189 [test_get_gripper_joint_cw.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cw.py", line 48, in test_get_gripper_joint_cw
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:40:50,190 [test_get_gripper_joint_cw.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:40:50,190 [test_get_gripper_joint_cw.py-->line:52]:实际结果：5
INFO 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 17:40:50,191 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,192 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,192 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:40:50,192 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:50,192 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 17:40:50,192 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,193 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:50,194 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:50,194 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,195 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,195 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,236 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:50,283 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,283 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 17:40:50,283 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,283 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,284 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,284 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,329 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,376 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:50,423 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:40:50,423 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:52]:实际结果：5
INFO 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,425 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:50,470 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
ERROR 2025-03-24 17:40:50,470 [test_get_gripper_joint_cww.py-->line:50]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_joint_cww.py", line 48, in test_get_gripper_joint_cww
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 5
DEBUG 2025-03-24 17:40:50,470 [test_get_gripper_joint_cww.py-->line:51]:期望数据：0
DEBUG 2025-03-24 17:40:50,471 [test_get_gripper_joint_cww.py-->line:52]:实际结果：5
INFO 2025-03-24 17:40:50,471 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:40:50,471 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,471 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 17:40:50,472 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,473 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:50,475 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:50,475 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,475 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,475 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:50,516 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,517 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 17:40:50,517 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,517 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,517 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,517 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:50,562 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,563 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 17:40:50,563 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,563 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,563 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,563 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:50,610 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,610 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 17:40:50,610 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,610 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,610 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,611 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,657 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,703 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:50,750 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,750 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 17:40:50,751 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:50,752 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:50,754 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:50,754 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,754 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,754 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:50,797 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,797 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 17:40:50,797 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:50,797 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,797 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,798 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,844 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,890 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:50,937 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,937 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 17:40:50,937 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:50,937 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,938 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,938 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:50,983 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:51,031 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 17:40:51,032 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,033 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:51,034 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:51,034 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,034 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,034 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,077 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,124 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,171 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,219 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:51,265 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,265 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,265 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,266 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,266 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,266 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,311 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:40:51,312 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,313 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:51,314 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:51,314 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,315 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,315 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,359 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:51,405 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,405 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 17:40:51,405 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,405 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,406 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,406 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:51,452 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,452 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 17:40:51,452 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,452 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,452 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,453 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:51,500 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,500 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 17:40:51,500 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,500 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,500 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,501 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:51,546 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,547 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 17:40:51,547 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,547 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,547 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,547 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:51,593 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,593 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 17:40:51,593 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 17:40:51,593 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,593 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 17:40:51,594 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,595 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:51,596 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:51,597 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,597 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,597 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,640 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:51,687 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,687 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 17:40:51,687 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,687 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,687 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,688 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,735 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,781 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:51,828 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,828 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 17:40:51,828 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,828 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,828 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,829 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,874 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 17:40:51,875 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:51,876 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:51,877 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:51,877 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,877 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:51,877 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:40:51,922 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,922 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 17:40:51,922 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:51,922 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,922 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:51,923 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:40:51,968 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:51,968 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 17:40:51,968 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:51,969 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:51,969 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:51,969 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:52,015 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:52,061 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:40:52,108 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:52,108 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 17:40:52,108 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:52,108 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,109 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:52,109 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,155 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:40:52,156 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 17:40:52,156 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 17:40:52,156 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:40:52,157 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:40:52,158 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:40:52,158 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:40:52,158 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 17:40:52,159 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 17:40:52,358 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:40:52,358 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 17:40:52,358 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:40:55,370 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:40:55,370 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 17:40:55,370 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 17:41:00,424 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 17:41:00,424 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 17:41:00,424 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:41:03,438 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:41:03,438 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 17:41:03,438 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 17:41:19,426 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-24 17:41:19,426 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-24 17:41:19,426 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:41:22,437 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:41:22,437 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 17:41:22,437 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 17:41:31,045 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 17:41:31,045 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 17:41:31,045 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:41:34,463 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:41:34,465 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:41:34,465 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 17:41:34,465 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 17:41:34,465 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:41:34,509 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:41:34,509 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 17:41:34,509 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 17:41:34,510 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 17:41:34,512 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 17:41:39,525 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 17:41:39,525 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:41:39,525 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 17:41:39,525 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 17:41:39,525 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 17:41:44,535 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:41:44,535 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:41:44,535 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 17:41:44,535 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 17:41:47,742 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:41:47,743 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [8, 9, 9, 9, 6, 7] != [10, 10, 10, 10, 10, 10]

First differing element 0:
8
10

- [8, 9, 9, 9, 6, 7]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 17:41:47,744 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:41:47,744 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:41:47,744 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:41:52,753 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:41:52,753 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:41:52,753 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 17:41:52,753 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 17:41:56,468 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:41:56,468 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 47, 47] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 47, 47]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 17:41:56,469 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:41:56,469 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:41:56,469 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:42:01,930 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:42:01,932 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:42:01,933 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 17:42:02,030 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 17:42:02,030 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 17:42:02,030 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 17:42:02,075 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:42:03,124 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:42:03,124 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:03,124 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:03,124 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:42:03,125 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:42:03,126 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:42:03,126 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:03,126 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:03,126 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:10,171 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:18,542 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:42:26,913 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:26,913 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:42:26,913 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:26,913 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:26,914 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:26,914 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:42:32,855 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:32,855 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:42:32,855 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:32,855 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:32,856 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:32,856 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:42:38,495 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:42:44,051 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:42:44,051 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:42:44,051 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:42:44,052 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:42:44,053 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:42:44,098 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 17:42:44,145 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:42:44,145 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 17:42:44,145 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 17:42:44,146 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 17:42:44,148 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:42:44,149 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:42:44,149 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,149 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 17:42:44,149 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 17:42:44,238 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 17:42:44,238 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 17:42:44,238 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 17:42:44,285 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:44,288 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 17:42:44,289 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:42:46,381 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:46,381 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 17:42:46,381 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 17:42:46,382 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 17:42:48,487 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:48,487 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 17:42:48,488 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:42:50,597 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:50,597 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 17:42:50,598 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:42:52,692 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:52,692 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:42:52,692 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:52,692 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:52,692 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:42:52,694 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:42:52,694 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:52,694 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 17:42:52,694 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:42:54,794 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:54,794 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 15 != 20
DEBUG 2025-03-24 17:42:54,794 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 17:42:54,795 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:42:56,897 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:42:56,897 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 20
DEBUG 2025-03-24 17:42:56,898 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:42:56,898 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:42:56,898 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:43:09,222 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:09,224 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,225 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,226 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:09,227 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,227 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,238 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:09,239 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:09,332 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:09,425 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:09,518 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,612 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:09,613 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,707 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,707 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 17:43:09,707 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:09,707 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:43:09,707 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:43:09,708 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:09,708 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:09,798 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:09,798 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 17:43:09,798 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:43:10,080 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,082 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,083 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:43:10,084 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,085 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,096 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,096 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,096 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:10,098 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,190 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,190 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 17:43:10,190 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,191 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,191 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,191 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:10,191 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:10,284 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,380 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,380 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 17:43:10,380 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,380 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,380 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,381 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:10,381 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:10,474 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,567 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,567 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 17:43:10,567 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,567 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,567 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:43:10,568 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:10,568 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:10,661 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:10,661 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 17:43:10,661 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:43:10,941 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:10,945 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:10,945 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,945 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,946 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,947 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,948 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,948 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,948 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,948 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,957 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,957 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:10,958 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:11,051 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,146 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,146 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 17:43:11,146 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,147 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,147 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:11,147 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:11,147 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:11,240 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:11,334 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:11,429 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,524 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,524 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 17:43:11,524 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 17:43:11,806 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:11,808 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:11,808 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,808 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,808 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:11,808 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,809 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,810 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,822 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:11,823 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:11,916 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:11,917 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:12,009 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:12,104 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,198 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,198 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 17:43:12,198 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:12,199 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,199 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:12,199 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:12,199 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,292 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,292 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 17:43:12,292 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:12,292 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,292 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:43:12,293 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:12,293 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,385 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,385 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 17:43:12,385 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 17:43:12,667 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,670 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,671 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:43:12,672 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,673 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:12,674 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,775 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,775 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 17:43:12,775 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:12,775 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,775 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,776 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:12,776 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:12,868 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:12,961 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:12,962 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:13,055 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,055 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 17:43:13,055 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:13,055 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,055 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:13,056 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:13,056 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:13,149 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:43:13,243 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,243 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 17:43:13,244 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 17:43:13,523 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,525 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,526 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,527 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,541 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,541 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,541 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:43:13,541 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,541 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:13,542 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:13,631 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:13,632 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:13,724 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:13,818 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:13,911 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:13,911 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 17:43:13,911 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:13,911 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:13,912 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:13,912 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:13,912 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,004 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,004 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 17:43:14,004 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:14,004 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,004 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:43:14,005 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:14,005 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,098 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,098 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 17:43:14,098 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:43:14,378 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:14,381 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:14,381 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,381 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,381 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:43:14,381 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,382 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,383 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,384 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,384 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:14,384 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,384 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,396 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,396 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,396 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:14,396 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:14,397 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:14,488 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:14,581 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:14,674 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:14,767 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,862 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,862 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 17:43:14,862 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:14,863 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:43:14,863 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:43:14,863 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:14,863 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:43:14,953 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:14,953 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 17:43:14,953 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:43:15,234 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,236 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,237 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,238 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:43:15,251 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,252 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,252 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:43:15,252 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,342 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,342 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,342 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:15,342 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,342 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,343 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:43:15,343 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:43:15,435 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:43:15,529 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:43:15,621 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:43:15,715 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:43:15,808 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:43:15,808 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:43:15,808 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:43:16,091 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:43:16,093 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:43:16,093 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:43:16,093 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:16,093 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 17:43:16,093 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 17:43:16,094 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 17:43:21,101 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:43:21,101 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:21,101 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 17:43:21,101 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 17:43:21,101 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 17:43:26,114 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:43:26,114 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:26,114 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 17:43:26,114 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 17:43:26,114 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 17:43:31,119 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 17:43:31,119 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:31,119 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 17:43:31,119 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:43:31,167 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:43:31,167 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 17:43:31,167 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 17:43:36,167 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:43:36,167 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:36,167 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 17:43:36,167 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:43:36,213 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:43:36,213 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 17:43:36,213 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:43:41,227 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:43:41,227 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:41,227 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 17:43:41,227 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:43:41,273 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:43:41,273 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 17:43:41,273 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:43:46,288 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:43:46,288 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:46,288 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 17:43:46,288 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:43:46,334 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:43:46,334 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 17:43:46,334 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 17:43:51,334 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 17:43:51,334 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:43:51,334 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 17:43:51,334 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 17:43:51,381 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:43:51,381 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 17:43:51,381 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 17:43:59,401 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:07,546 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:07,546 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,546 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-24 17:49:07,546 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:49:07,597 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:49:07,597 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-24 17:49:07,597 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-24 17:49:07,598 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:07,599 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:07,599 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,599 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-24 17:49:07,644 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:49:07,644 [test_get_gripper_angles.py-->line:54]:请求结果断言成功，用例【正确获取夹爪全角度】测试成功
INFO 2025-03-24 17:49:07,644 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:49:07,645 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:07,647 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:07,647 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,647 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-24 17:49:07,647 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:49:07,691 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:49:07,691 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-24 17:49:07,691 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-24 17:49:07,692 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:07,693 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:07,693 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,694 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-24 17:49:07,694 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:49:07,736 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:49:07,736 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-24 17:49:07,736 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-24 17:49:07,736 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:07,739 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:07,739 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,739 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,739 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,783 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:07,829 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:07,829 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-24 17:49:07,829 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:07,829 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,830 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,830 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,875 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,923 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:07,970 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-24 17:49:08,017 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:08,018 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-24 17:49:08,018 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,018 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:08,021 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:08,021 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,021 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,021 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,064 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,112 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:08,158 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,158 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-24 17:49:08,158 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,158 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,159 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,159 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,205 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:08,252 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,252 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-24 17:49:08,252 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,252 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,252 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,253 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,299 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-24 17:49:08,300 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,301 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:08,302 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:08,303 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,303 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,303 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,347 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,393 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,440 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,488 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:08,535 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,535 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-24 17:49:08,535 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,535 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,535 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,536 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,582 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-24 17:49:08,583 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,584 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:08,586 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:08,586 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,586 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,586 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,629 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:08,676 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,676 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-24 17:49:08,676 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,677 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,677 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,677 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,724 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,769 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,815 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,863 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-24 17:49:08,864 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:08,865 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:08,866 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:08,867 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,867 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:08,867 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:08,910 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:08,957 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:09,005 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:09,052 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:09,099 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,099 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:09,099 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:09,100 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,100 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:09,100 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:49:09,147 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,148 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:09,149 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:09,149 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,149 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,149 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,194 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,241 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,287 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,334 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,382 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-24 17:49:09,429 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,430 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:09,432 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:09,432 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,432 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,432 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,475 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:09,521 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,522 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-24 17:49:09,522 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,522 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,522 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,522 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:09,567 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,567 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-24 17:49:09,567 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,568 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,568 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,568 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:09,614 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,614 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-24 17:49:09,614 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,614 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,615 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,615 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,661 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:09,707 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,707 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-24 17:49:09,707 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:49:09,707 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,707 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-24 17:49:09,708 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,709 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:09,710 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:09,710 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,710 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,710 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,755 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,802 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,848 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,894 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,941 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-24 17:49:09,988 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:49:09,989 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:09,990 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:09,991 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:49:09,991 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-24 17:49:09,991 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-24 17:49:10,287 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:49:10,287 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-24 17:49:10,287 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:49:13,294 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:49:13,294 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-24 17:49:13,294 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-24 17:49:18,347 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-24 17:49:18,347 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-24 17:49:18,347 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:49:21,361 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:49:21,361 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-24 17:49:21,361 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-24 17:49:27,948 [test_get_gripper_status.py-->line:110]:请求类型断言成功
INFO 2025-03-24 17:49:27,948 [test_get_gripper_status.py-->line:123]:请求结果断言成功，用例【获取夹爪停止运动且夹到物体时的夹持状态】测试成功
INFO 2025-03-24 17:49:27,948 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:49:30,958 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-24 17:49:30,958 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-24 17:49:30,958 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-24 17:49:36,817 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-24 17:49:36,817 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-24 17:49:36,817 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-24 17:49:40,838 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:40,840 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:40,840 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-24 17:49:40,840 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-24 17:49:40,840 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-24 17:49:40,885 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:49:40,885 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-24 17:49:40,885 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-24 17:49:40,886 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:49:40,887 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:49:40,887 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:49:40,887 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:49:40,887 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-24 17:49:40,888 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-24 17:49:40,888 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-24 17:49:45,902 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-24 17:49:45,902 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:49:45,902 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-24 17:49:45,902 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-24 17:49:45,903 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-24 17:49:50,914 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:49:50,914 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:49:50,914 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-24 17:49:50,914 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-24 17:49:54,208 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:49:54,208 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [8, 9, 9, 9, 4, 4] != [10, 10, 10, 10, 10, 10]

First differing element 0:
8
10

- [8, 9, 9, 9, 4, 4]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-24 17:49:54,211 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:49:54,211 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:49:54,211 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:49:59,225 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-24 17:49:59,225 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-24 17:49:59,225 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-24 17:49:59,225 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-24 17:50:04,031 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-24 17:50:04,031 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 39, 39, 49, 45, 45] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 39, 39, 49, 45, 45]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-24 17:50:04,032 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-24 17:50:04,032 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-24 17:50:04,032 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-24 17:50:09,480 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:50:09,482 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-24 17:50:09,483 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-24 17:50:09,578 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-24 17:50:09,578 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-24 17:50:09,578 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-24 17:50:09,624 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:50:10,673 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:10,674 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-24 17:50:17,706 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:17,706 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-24 17:50:17,706 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:17,706 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:17,707 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:17,707 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:26,020 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:34,393 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:40,309 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-24 17:50:45,953 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:45,953 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-24 17:50:45,953 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:45,954 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-24 17:50:45,954 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-24 17:50:45,954 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-24 17:50:51,523 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-24 17:50:51,523 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-24 17:50:51,523 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-24 17:50:51,525 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-24 17:50:51,527 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,528 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:50:51,528 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-24 17:50:51,570 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-24 17:50:51,617 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-24 17:50:51,617 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-24 17:50:51,617 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-24 17:50:51,618 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-24 17:50:51,620 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-24 17:50:51,710 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-24 17:50:51,710 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-24 17:50:51,710 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-24 17:50:51,757 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-24 17:50:51,759 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-24 17:50:51,760 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:50:53,861 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:50:53,861 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 18 != 20
DEBUG 2025-03-24 17:50:53,862 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:50:53,862 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:50:53,862 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:50:53,863 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-24 17:50:53,863 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:53,863 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-24 17:50:53,863 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-24 17:50:55,968 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:50:55,968 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-24 17:50:55,969 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:50:55,969 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:50:55,969 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-24 17:50:55,970 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:50:55,970 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:55,970 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-24 17:50:55,970 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:50:58,077 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:50:58,077 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:50:58,077 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:50:58,079 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:50:58,079 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:50:58,079 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:50:58,079 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:50:58,079 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-24 17:50:58,080 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:51:00,174 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:51:00,174 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-24 17:51:00,174 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-24 17:51:00,175 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:51:02,279 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:51:02,279 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 15 != 20
DEBUG 2025-03-24 17:51:02,280 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:51:02,280 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:51:02,280 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:51:02,280 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-24 17:51:02,281 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-24 17:51:02,281 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-24 17:51:02,281 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-24 17:51:04,386 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-24 17:51:04,386 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 14 != 20
DEBUG 2025-03-24 17:51:04,386 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-24 17:51:04,386 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-24 17:51:04,386 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-24 17:51:16,727 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:16,730 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:16,730 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,730 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,730 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,731 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,732 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:16,732 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,732 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,732 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,733 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,744 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:16,745 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,838 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:16,839 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:16,931 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:17,024 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,118 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:17,119 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,212 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,212 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-24 17:51:17,212 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:17,212 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,212 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-24 17:51:17,213 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:17,213 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,306 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,306 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-24 17:51:17,306 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-24 17:51:17,585 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:17,586 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,587 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,588 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,589 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-24 17:51:17,600 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:17,601 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,601 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,601 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:17,601 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:17,693 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:17,789 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:17,882 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:17,977 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:17,978 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:18,070 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:18,163 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,163 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-24 17:51:18,163 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-24 17:51:18,445 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,447 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,448 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,449 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:18,450 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,450 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,461 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,461 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,461 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:18,462 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,554 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:18,555 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,648 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:18,649 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:18,743 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:18,837 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:18,930 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:18,930 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-24 17:51:18,930 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:18,931 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-24 17:51:18,931 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-24 17:51:18,931 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:18,931 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,024 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,024 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-24 17:51:19,024 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-24 17:51:19,303 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:19,305 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:19,305 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,305 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,305 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,306 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,307 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,308 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,308 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,308 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:19,308 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,308 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:19,318 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-24 17:51:19,319 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:19,319 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,319 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,319 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:19,319 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,412 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,412 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-24 17:51:19,413 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:19,413 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,413 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,413 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:19,413 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:19,505 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,599 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,599 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-24 17:51:19,599 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:19,599 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,599 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,600 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:19,600 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:19,694 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-24 17:51:19,787 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:19,788 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:19,879 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:19,879 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-24 17:51:19,879 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-24 17:51:20,160 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,162 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,164 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,165 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:20,166 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,166 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,176 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:20,177 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:20,270 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:20,362 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:20,457 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:20,551 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:20,646 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-24 17:51:20,741 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:20,741 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-24 17:51:20,741 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-24 17:51:21,022 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:21,024 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,025 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:51:21,026 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,037 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:21,038 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,129 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:21,131 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,221 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:21,222 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:21,314 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,408 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,408 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-24 17:51:21,408 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,408 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,409 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,409 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:21,409 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,500 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,500 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-24 17:51:21,500 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,500 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,501 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-24 17:51:21,501 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:21,501 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:21,593 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:21,593 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-24 17:51:21,593 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-24 17:51:21,875 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:21,877 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:21,877 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,877 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,877 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,878 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,879 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,880 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:21,880 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-24 17:51:21,890 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:21,891 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:21,891 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:21,891 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:21,891 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:22,016 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:22,110 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:22,204 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:22,205 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,298 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,298 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-24 17:51:22,298 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,298 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,299 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:22,299 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:22,299 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-24 17:51:22,392 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:22,393 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-24 17:51:22,486 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,486 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-24 17:51:22,486 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-24 17:51:22,768 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,771 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,772 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,773 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,779 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-24 17:51:22,780 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-24 17:51:22,873 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-24 17:51:22,967 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-24 17:51:23,061 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-24 17:51:23,154 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:23,247 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:23,247 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:23,247 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:23,248 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-24 17:51:23,248 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-24 17:51:23,248 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-24 17:51:23,248 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-24 17:51:23,341 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-24 17:51:23,341 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-24 17:51:23,341 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-24 17:51:23,624 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-24 17:51:23,625 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-24 17:51:23,626 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:51:23,626 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:23,626 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-24 17:51:23,626 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-24 17:51:23,626 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-24 17:51:28,635 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:51:28,635 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:28,635 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-24 17:51:28,635 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-24 17:51:28,635 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-24 17:51:33,649 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-24 17:51:33,649 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:33,649 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-24 17:51:33,649 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-24 17:51:33,649 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-24 17:51:38,662 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-24 17:51:38,662 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:38,662 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-24 17:51:38,662 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:51:38,709 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:51:38,709 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-24 17:51:38,709 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-24 17:51:43,715 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:51:43,715 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:43,715 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-24 17:51:43,715 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:51:43,760 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:51:43,760 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-24 17:51:43,760 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:51:48,760 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:51:48,760 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:48,760 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-24 17:51:48,760 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:51:48,807 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:51:48,807 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-24 17:51:48,807 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-24 17:51:53,819 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-24 17:51:53,819 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:53,819 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-24 17:51:53,819 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-24 17:51:53,866 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:51:53,866 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-24 17:51:53,866 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-24 17:51:58,868 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-24 17:51:58,868 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-24 17:51:58,868 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-24 17:51:58,868 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-24 17:51:58,914 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-24 17:51:58,914 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-24 17:51:58,914 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-24 17:52:06,929 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:21,794 [test_get_firmware_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:21,794 [test_get_firmware_version.py-->line:32]:》》》》》用例【正确获取固件版本号】开始测试《《《《《
DEBUG 2025-03-25 10:02:21,794 [test_get_firmware_version.py-->line:34]:test_api:get_firmware_version
DEBUG 2025-03-25 10:02:21,794 [test_get_firmware_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-25 10:02:21,846 [test_get_firmware_version.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:02:21,846 [test_get_firmware_version.py-->line:54]:请求结果断言成功，用例【正确获取固件版本号】测试成功
INFO 2025-03-25 10:02:21,846 [test_get_firmware_version.py-->line:56]:》》》》》用例【正确获取固件版本号】测试完成《《《《《
INFO 2025-03-25 10:02:21,847 [test_get_firmware_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:21,849 [test_get_gripper_angles.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:21,850 [test_get_gripper_angles.py-->line:33]:》》》》》用例【正确获取夹爪全角度】开始测试《《《《《
DEBUG 2025-03-25 10:02:21,850 [test_get_gripper_angles.py-->line:35]:test_api:get_gripper_angles
DEBUG 2025-03-25 10:02:21,891 [test_get_gripper_angles.py-->line:41]:请求类型断言成功
ERROR 2025-03-25 10:02:21,892 [test_get_gripper_angles.py-->line:49]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_angles.py", line 47, in test_get_gripper_angles
    self.assertEqual(eval(case['expect_data']), response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [0, 0, 0, 0, 0, 0] != [0, 0, 0, 0, 100, 83]

First differing element 4:
0
100

- [0, 0, 0, 0, 0, 0]
?                 ^

+ [0, 0, 0, 0, 100, 83]
?              ++   ^^

DEBUG 2025-03-25 10:02:21,895 [test_get_gripper_angles.py-->line:50]:期望数据：[0,0,0,0,0,0]
DEBUG 2025-03-25 10:02:21,895 [test_get_gripper_angles.py-->line:51]:实际结果：[0, 0, 0, 0, 100, 83]
INFO 2025-03-25 10:02:21,895 [test_get_gripper_angles.py-->line:56]:》》》》》用例【正确获取夹爪全角度】测试完成《《《《《
INFO 2025-03-25 10:02:21,897 [test_get_gripper_angles.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:21,898 [test_get_gripper_baud.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:21,898 [test_get_gripper_baud.py-->line:32]:》》》》》用例【正确获取固件波特率】开始测试《《《《《
DEBUG 2025-03-25 10:02:21,899 [test_get_gripper_baud.py-->line:34]:test_api:get_gripper_baud
DEBUG 2025-03-25 10:02:21,899 [test_get_gripper_baud.py-->line:35]:test_parameters:None
DEBUG 2025-03-25 10:02:21,954 [test_get_gripper_baud.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:02:21,954 [test_get_gripper_baud.py-->line:54]:请求结果断言成功，用例【正确获取固件波特率】测试成功
INFO 2025-03-25 10:02:21,954 [test_get_gripper_baud.py-->line:56]:》》》》》用例【正确获取固件波特率】测试完成《《《《《
INFO 2025-03-25 10:02:21,955 [test_get_gripper_baud.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:21,957 [test_get_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:21,957 [test_get_gripper_id.py-->line:32]:》》》》》用例【正确获取固件ID号】开始测试《《《《《
DEBUG 2025-03-25 10:02:21,957 [test_get_gripper_id.py-->line:34]:test_api:get_gripper_id
DEBUG 2025-03-25 10:02:21,957 [test_get_gripper_id.py-->line:35]:test_parameters:None
DEBUG 2025-03-25 10:02:21,999 [test_get_gripper_id.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:02:21,999 [test_get_gripper_id.py-->line:54]:请求结果断言成功，用例【正确获取固件ID号】测试成功
INFO 2025-03-25 10:02:21,999 [test_get_gripper_id.py-->line:56]:》》》》》用例【正确获取固件ID号】测试完成《《《《《
INFO 2025-03-25 10:02:22,001 [test_get_gripper_id.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:22,004 [test_get_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:22,004 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取1关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,004 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,004 [test_get_gripper_joint_cw.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取1关节cw值】测试成功
INFO 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取1关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取2关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,046 [test_get_gripper_joint_cw.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取2关节cw值】测试成功
INFO 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取2关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取3关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,092 [test_get_gripper_joint_cw.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:22,138 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,138 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取3关节cw值】测试成功
INFO 2025-03-25 10:02:22,138 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取3关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,138 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取4关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,138 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,139 [test_get_gripper_joint_cw.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取4关节cw值】测试成功
INFO 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取4关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取5关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,185 [test_get_gripper_joint_cw.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取5关节cw值】测试成功
INFO 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取5关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:33]:》》》》》用例【获取6关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:35]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,232 [test_get_gripper_joint_cw.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:55]:请求结果断言成功，用例【获取6关节cw值】测试成功
INFO 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:57]:》》》》》用例【获取6关节cw值】测试完成《《《《《
INFO 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,280 [test_get_gripper_joint_cw.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取7关节cw值（超限）】测试成功
INFO 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:61]:》》》》》用例【获取0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:63]:test_api:get_gripper_joint_cw
DEBUG 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:76]:请求结果断言成功，用例【获取0关节cw值（超限）】测试成功
INFO 2025-03-25 10:02:22,281 [test_get_gripper_joint_cw.py-->line:78]:》》》》》用例【获取0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,282 [test_get_gripper_joint_cw.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:22,284 [test_get_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:22,284 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取1关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,284 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,284 [test_get_gripper_joint_cww.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取1关节cww值】测试成功
INFO 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取1关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取2关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,327 [test_get_gripper_joint_cww.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取2关节cww值】测试成功
INFO 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取2关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取3关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,372 [test_get_gripper_joint_cww.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取3关节cww值】测试成功
INFO 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取3关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取4关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,419 [test_get_gripper_joint_cww.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:22,465 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,465 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取4关节cww值】测试成功
INFO 2025-03-25 10:02:22,465 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取4关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,465 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取5关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,466 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,466 [test_get_gripper_joint_cww.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取5关节cww值】测试成功
INFO 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取5关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:33]:》》》》》用例【获取6关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:35]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,511 [test_get_gripper_joint_cww.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:55]:请求结果断言成功，用例【获取6关节cww值】测试成功
INFO 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:57]:》》》》》用例【获取6关节cww值】测试完成《《《《《
INFO 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,558 [test_get_gripper_joint_cww.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取7关节cww值（超限）】测试成功
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:61]:》》》》》用例【获取0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:63]:test_api:get_gripper_joint_cww
DEBUG 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:76]:请求结果断言成功，用例【获取0关节cww值（超限）】测试成功
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:78]:》》》》》用例【获取0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,559 [test_get_gripper_joint_cww.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:22,562 [test_get_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:22,562 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取1关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,562 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,562 [test_get_gripper_joint_d.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取1关节d值】测试成功
INFO 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取1关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取2关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,605 [test_get_gripper_joint_d.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取2关节d值】测试成功
INFO 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取2关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取3关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,652 [test_get_gripper_joint_d.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取3关节d值】测试成功
INFO 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取3关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取4关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,699 [test_get_gripper_joint_d.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取4关节d值】测试成功
INFO 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取4关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取5关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,745 [test_get_gripper_joint_d.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取5关节d值】测试成功
INFO 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取5关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:33]:》》》》》用例【获取6关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:35]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,793 [test_get_gripper_joint_d.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:55]:请求结果断言成功，用例【获取6关节d值】测试成功
INFO 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:57]:》》》》》用例【获取6关节d值】测试完成《《《《《
INFO 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取7关节d值（超限）】测试成功
INFO 2025-03-25 10:02:22,840 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取7关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:61]:》》》》》用例【获取0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:63]:test_api:get_gripper_joint_d
DEBUG 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:76]:请求结果断言成功，用例【获取0关节d值（超限）】测试成功
INFO 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:78]:》》》》》用例【获取0关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:22,841 [test_get_gripper_joint_d.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:22,843 [test_get_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:22,843 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取1关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,843 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:22,843 [test_get_gripper_joint_i.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取1关节i值】测试成功
INFO 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取1关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取2关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:22,887 [test_get_gripper_joint_i.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:22,933 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,934 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取2关节i值】测试成功
INFO 2025-03-25 10:02:22,934 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取2关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:22,934 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取3关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,934 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:22,934 [test_get_gripper_joint_i.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:22,981 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:22,981 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取3关节i值】测试成功
INFO 2025-03-25 10:02:22,981 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取3关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:22,981 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取4关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:22,982 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:22,982 [test_get_gripper_joint_i.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取4关节i值】测试成功
INFO 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取4关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取5关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:23,028 [test_get_gripper_joint_i.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:23,075 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,075 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取5关节i值】测试成功
INFO 2025-03-25 10:02:23,075 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取5关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:23,075 [test_get_gripper_joint_i.py-->line:33]:》》》》》用例【获取6关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,075 [test_get_gripper_joint_i.py-->line:35]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:23,076 [test_get_gripper_joint_i.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:23,121 [test_get_gripper_joint_i.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,121 [test_get_gripper_joint_i.py-->line:55]:请求结果断言成功，用例【获取6关节i值】测试成功
INFO 2025-03-25 10:02:23,121 [test_get_gripper_joint_i.py-->line:57]:》》》》》用例【获取6关节i值】测试完成《《《《《
INFO 2025-03-25 10:02:23,121 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,121 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取7关节i值（超限）】测试成功
INFO 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取7关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:61]:》》》》》用例【获取0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:63]:test_api:get_gripper_joint_i
DEBUG 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:76]:请求结果断言成功，用例【获取0关节i值（超限）】测试成功
INFO 2025-03-25 10:02:23,122 [test_get_gripper_joint_i.py-->line:78]:》》》》》用例【获取0关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,123 [test_get_gripper_joint_i.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:23,125 [test_get_gripper_joint_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:23,125 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,125 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,125 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取1关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,167 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:23,215 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,215 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取2关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,215 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,215 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,215 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,216 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:23,261 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,261 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取3关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,261 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,261 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,261 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,263 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:23,308 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,308 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取4关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,308 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,309 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,309 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,309 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:23,355 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,355 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取5关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,355 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,355 [test_get_gripper_joint_mini_pressure.py-->line:33]:》》》》》用例【获取6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,355 [test_get_gripper_joint_mini_pressure.py-->line:35]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,356 [test_get_gripper_joint_mini_pressure.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:55]:请求结果断言成功，用例【获取6关节mini_pressure值】测试成功
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:57]:》》》》》用例【获取6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取7关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:61]:》》》》》用例【获取0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,402 [test_get_gripper_joint_mini_pressure.py-->line:63]:test_api:get_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:02:23,404 [test_get_gripper_joint_mini_pressure.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:23,404 [test_get_gripper_joint_mini_pressure.py-->line:76]:请求结果断言成功，用例【获取0关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:02:23,404 [test_get_gripper_joint_mini_pressure.py-->line:78]:》》》》》用例【获取0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,405 [test_get_gripper_joint_mini_pressure.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:23,406 [test_get_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:23,406 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取1关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,407 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,407 [test_get_gripper_joint_p.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:23,449 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,449 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取1关节p值】测试成功
INFO 2025-03-25 10:02:23,451 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取1关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,451 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取2关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,451 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,451 [test_get_gripper_joint_p.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:23,496 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,496 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取2关节p值】测试成功
INFO 2025-03-25 10:02:23,496 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取2关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,496 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取3关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,496 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,497 [test_get_gripper_joint_p.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:23,543 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,543 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取3关节p值】测试成功
INFO 2025-03-25 10:02:23,543 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取3关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,543 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取4关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,543 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,544 [test_get_gripper_joint_p.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取4关节p值】测试成功
INFO 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取4关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取5关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,589 [test_get_gripper_joint_p.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取5关节p值】测试成功
INFO 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取5关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:33]:》》》》》用例【获取6关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:35]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,635 [test_get_gripper_joint_p.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:23,681 [test_get_gripper_joint_p.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,681 [test_get_gripper_joint_p.py-->line:55]:请求结果断言成功，用例【获取6关节p值】测试成功
INFO 2025-03-25 10:02:23,681 [test_get_gripper_joint_p.py-->line:57]:》》》》》用例【获取6关节p值】测试完成《《《《《
INFO 2025-03-25 10:02:23,681 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,682 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,682 [test_get_gripper_joint_p.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:23,682 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取7关节p值（超限）】测试成功
INFO 2025-03-25 10:02:23,682 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取7关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,682 [test_get_gripper_joint_p.py-->line:61]:》》》》》用例【获取0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,683 [test_get_gripper_joint_p.py-->line:63]:test_api:get_gripper_joint_p
DEBUG 2025-03-25 10:02:23,683 [test_get_gripper_joint_p.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:23,683 [test_get_gripper_joint_p.py-->line:76]:请求结果断言成功，用例【获取0关节p值（超限）】测试成功
INFO 2025-03-25 10:02:23,683 [test_get_gripper_joint_p.py-->line:78]:》》》》》用例【获取0关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,683 [test_get_gripper_joint_p.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:23,686 [test_get_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:23,686 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取1关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,686 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,686 [test_get_gripper_joint_speed.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取1关节speed值】测试成功
INFO 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取1关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取2关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,728 [test_get_gripper_joint_speed.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:23,774 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,774 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取2关节speed值】测试成功
INFO 2025-03-25 10:02:23,774 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取2关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,774 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取3关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,774 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,775 [test_get_gripper_joint_speed.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:23,821 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,821 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取3关节speed值】测试成功
INFO 2025-03-25 10:02:23,821 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取3关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,822 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取4关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,822 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,822 [test_get_gripper_joint_speed.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:23,868 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,869 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取4关节speed值】测试成功
INFO 2025-03-25 10:02:23,869 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取4关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,869 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取5关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,869 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,869 [test_get_gripper_joint_speed.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取5关节speed值】测试成功
INFO 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取5关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:33]:》》》》》用例【获取6关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:35]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,915 [test_get_gripper_joint_speed.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:55]:请求结果断言成功，用例【获取6关节speed值】测试成功
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:57]:》》》》》用例【获取6关节speed值】测试完成《《《《《
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取7关节speed值（超限）】测试成功
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,962 [test_get_gripper_joint_speed.py-->line:61]:》》》》》用例【获取0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,963 [test_get_gripper_joint_speed.py-->line:63]:test_api:get_gripper_joint_speed
DEBUG 2025-03-25 10:02:23,963 [test_get_gripper_joint_speed.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:23,963 [test_get_gripper_joint_speed.py-->line:76]:请求结果断言成功，用例【获取0关节speed值（超限）】测试成功
INFO 2025-03-25 10:02:23,963 [test_get_gripper_joint_speed.py-->line:78]:》》》》》用例【获取0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:23,964 [test_get_gripper_joint_speed.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:23,965 [test_get_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:23,965 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取1关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:23,965 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:23,965 [test_get_gripper_joint_torque.py-->line:36]:test_joint:1
DEBUG 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取1关节torque值】测试成功
INFO 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取1关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取2关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,010 [test_get_gripper_joint_torque.py-->line:36]:test_joint:2
DEBUG 2025-03-25 10:02:24,057 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,057 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取2关节torque值】测试成功
INFO 2025-03-25 10:02:24,057 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取2关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,057 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取3关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,057 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,058 [test_get_gripper_joint_torque.py-->line:36]:test_joint:3
DEBUG 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取3关节torque值】测试成功
INFO 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取3关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取4关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,105 [test_get_gripper_joint_torque.py-->line:36]:test_joint:4
DEBUG 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取4关节torque值】测试成功
INFO 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取4关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取5关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,152 [test_get_gripper_joint_torque.py-->line:36]:test_joint:5
DEBUG 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取5关节torque值】测试成功
INFO 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取5关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:33]:》》》》》用例【获取6关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:35]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,198 [test_get_gripper_joint_torque.py-->line:36]:test_joint:6
DEBUG 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:42]:请求类型断言成功
INFO 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:55]:请求结果断言成功，用例【获取6关节torque值】测试成功
INFO 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:57]:》》》》》用例【获取6关节torque值】测试完成《《《《《
INFO 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,245 [test_get_gripper_joint_torque.py-->line:64]:test_joint:7
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取7关节torque值（超限）】测试成功
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:61]:》》》》》用例【获取0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:63]:test_api:get_gripper_joint_torque
DEBUG 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:64]:test_joint:0
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:76]:请求结果断言成功，用例【获取0关节torque值（超限）】测试成功
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:78]:》》》》》用例【获取0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:02:24,246 [test_get_gripper_joint_torque.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:02:24,249 [test_get_gripper_status.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-25 10:02:24,249 [test_get_gripper_status.py-->line:39]:》》》》》用例【获取夹爪运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-25 10:02:24,250 [test_get_gripper_status.py-->line:41]:test_api:get_gripper_status
DEBUG 2025-03-25 10:02:24,250 [test_get_gripper_status.py-->line:42]:test_parameters:None
DEBUG 2025-03-25 10:02:24,572 [test_get_gripper_status.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:02:24,572 [test_get_gripper_status.py-->line:61]:请求结果断言成功，用例【获取夹爪运动时的夹持状态】测试成功
INFO 2025-03-25 10:02:24,572 [test_get_gripper_status.py-->line:63]:》》》》》用例【获取夹爪运动时的夹持状态】测试完成《《《《《
INFO 2025-03-25 10:02:27,577 [test_get_gripper_status.py-->line:68]:》》》》》用例【获取夹爪停止运动时的夹持状态】开始测试《《《《《
DEBUG 2025-03-25 10:02:27,577 [test_get_gripper_status.py-->line:70]:test_api:get_gripper_status
DEBUG 2025-03-25 10:02:27,577 [test_get_gripper_status.py-->line:71]:test_parameters:None
DEBUG 2025-03-25 10:02:32,635 [test_get_gripper_status.py-->line:78]:请求类型断言成功
INFO 2025-03-25 10:02:32,635 [test_get_gripper_status.py-->line:91]:请求结果断言成功，用例【获取夹爪停止运动时的夹持状态】测试成功
INFO 2025-03-25 10:02:32,635 [test_get_gripper_status.py-->line:93]:》》》》》用例【获取夹爪停止运动时的夹持状态】测试完成《《《《《
INFO 2025-03-25 10:02:35,644 [test_get_gripper_status.py-->line:98]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】开始测试《《《《《
DEBUG 2025-03-25 10:02:35,644 [test_get_gripper_status.py-->line:100]:test_api:get_gripper_status
DEBUG 2025-03-25 10:02:35,644 [test_get_gripper_status.py-->line:101]:test_parameters:None
DEBUG 2025-03-25 10:02:49,149 [test_get_gripper_status.py-->line:110]:请求类型断言成功
ERROR 2025-03-25 10:02:49,149 [test_get_gripper_status.py-->line:118]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_get_gripper_status.py", line 116, in test_get_gripper_status_2
    self.assertEqual(case['expect_data'], response)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 3
DEBUG 2025-03-25 10:02:49,151 [test_get_gripper_status.py-->line:119]:期望数据：2
DEBUG 2025-03-25 10:02:49,151 [test_get_gripper_status.py-->line:120]:实际结果：3
INFO 2025-03-25 10:02:49,151 [test_get_gripper_status.py-->line:125]:》》》》》用例【获取夹爪停止运动且夹到物体时的夹持状态】测试完成《《《《《
INFO 2025-03-25 10:02:52,156 [test_get_gripper_status.py-->line:130]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】开始测试《《《《《
DEBUG 2025-03-25 10:02:52,157 [test_get_gripper_status.py-->line:132]:test_api:get_gripper_status
DEBUG 2025-03-25 10:02:52,157 [test_get_gripper_status.py-->line:133]:test_parameters:None
DEBUG 2025-03-25 10:02:57,672 [test_get_gripper_status.py-->line:140]:请求类型断言成功
INFO 2025-03-25 10:02:57,672 [test_get_gripper_status.py-->line:153]:请求结果断言成功，用例【获取夹爪停止运动且物体掉落时的夹持状态】测试成功
INFO 2025-03-25 10:02:57,672 [test_get_gripper_status.py-->line:155]:》》》》》用例【获取夹爪停止运动且物体掉落时的夹持状态】测试完成《《《《《
INFO 2025-03-25 10:03:01,098 [test_get_gripper_status.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-25 10:03:01,100 [test_get_modified_version.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:03:01,100 [test_get_modified_version.py-->line:32]:》》》》》用例【正确获取固件次版本号】开始测试《《《《《
DEBUG 2025-03-25 10:03:01,100 [test_get_modified_version.py-->line:34]:test_api:get_modified_version
DEBUG 2025-03-25 10:03:01,100 [test_get_modified_version.py-->line:35]:test_parameters:None
DEBUG 2025-03-25 10:03:01,154 [test_get_modified_version.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:03:01,154 [test_get_modified_version.py-->line:54]:请求结果断言成功，用例【正确获取固件次版本号】测试成功
INFO 2025-03-25 10:03:01,154 [test_get_modified_version.py-->line:56]:》》》》》用例【正确获取固件次版本号】测试完成《《《《《
INFO 2025-03-25 10:03:01,155 [test_get_modified_version.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置任意关节超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:74]:test_speeds:30
INFO 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置任意关节超限】测试成功
INFO 2025-03-25 10:03:01,157 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置任意关节超限】测试完成《《《《《
INFO 2025-03-25 10:03:06,160 [test_set_gripper_angles.py-->line:71]:》》》》》用例【设置速度超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:06,160 [test_set_gripper_angles.py-->line:73]:test_api:set_gripper_angles
DEBUG 2025-03-25 10:03:06,160 [test_set_gripper_angles.py-->line:74]:test_speeds:101
INFO 2025-03-25 10:03:06,160 [test_set_gripper_angles.py-->line:86]:请求结果断言成功，用例【设置速度超限】测试成功
INFO 2025-03-25 10:03:06,160 [test_set_gripper_angles.py-->line:88]:》》》》》用例【设置速度超限】测试完成《《《《《
INFO 2025-03-25 10:03:11,166 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-25 10:03:11,166 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-25 10:03:11,166 [test_set_gripper_angles.py-->line:42]:test_angles:[10,10,10,10,10,10]
DEBUG 2025-03-25 10:03:11,166 [test_set_gripper_angles.py-->line:43]:test_speed:50
DEBUG 2025-03-25 10:03:14,482 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-25 10:03:14,482 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [9, 9, 9, 9, 11, 10] != [10, 10, 10, 10, 10, 10]

First differing element 0:
9
10

- [9, 9, 9, 9, 11, 10]
+ [10, 10, 10, 10, 10, 10]
DEBUG 2025-03-25 10:03:14,483 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-25 10:03:14,483 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-25 10:03:14,483 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-25 10:03:19,489 [test_set_gripper_angles.py-->line:39]:》》》》》用例【正确设置夹爪全角度】开始测试《《《《《
DEBUG 2025-03-25 10:03:19,490 [test_set_gripper_angles.py-->line:41]:test_api:set_gripper_angles
DEBUG 2025-03-25 10:03:19,490 [test_set_gripper_angles.py-->line:42]:test_angles:[40,40,40,50,50,50]
DEBUG 2025-03-25 10:03:19,490 [test_set_gripper_angles.py-->line:43]:test_speed:100
DEBUG 2025-03-25 10:03:24,294 [test_set_gripper_angles.py-->line:50]:请求类型断言成功
ERROR 2025-03-25 10:03:24,294 [test_set_gripper_angles.py-->line:59]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_angles.py", line 57, in test_set_gripper_angles
    self.assertEqual(get_res,eval(case["angles"]))
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1051, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 1033, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 675, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [39, 40, 40, 49, 48, 43] != [40, 40, 40, 50, 50, 50]

First differing element 0:
39
40

- [39, 40, 40, 49, 48, 43]
+ [40, 40, 40, 50, 50, 50]
DEBUG 2025-03-25 10:03:24,295 [test_set_gripper_angles.py-->line:60]:期望数据：1
DEBUG 2025-03-25 10:03:24,295 [test_set_gripper_angles.py-->line:61]:实际结果：1
INFO 2025-03-25 10:03:24,295 [test_set_gripper_angles.py-->line:66]:》》》》》用例【正确设置夹爪全角度】测试完成《《《《《
INFO 2025-03-25 10:03:29,799 [test_set_gripper_angles.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:77]:test_parameters:6
INFO 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-25 10:03:29,801 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:74]:》》》》》用例【设置波特率参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:76]:test_api:set_gripper_baud
DEBUG 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:77]:test_parameters:-1
INFO 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:89]:请求结果断言成功，用例【设置波特率参数超限】测试成功
INFO 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:91]:》》》》》用例【设置波特率参数超限】测试完成《《《《《
INFO 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:40]:》》》》》用例【正确设置固件波特率号】开始测试《《《《《
DEBUG 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:42]:test_api:set_gripper_baud
DEBUG 2025-03-25 10:03:29,802 [test_set_gripper_baud.py-->line:43]:test_parameters:1
DEBUG 2025-03-25 10:03:29,900 [test_set_gripper_baud.py-->line:53]:请求类型断言成功
INFO 2025-03-25 10:03:29,900 [test_set_gripper_baud.py-->line:67]:请求结果断言成功，用例【正确设置固件波特率号】测试成功
INFO 2025-03-25 10:03:29,900 [test_set_gripper_baud.py-->line:69]:》》》》》用例【正确设置固件波特率号】测试完成《《《《《
INFO 2025-03-25 10:03:29,947 [test_set_gripper_baud.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:31,007 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-25 10:03:38,258 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:03:38,258 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-25 10:03:38,258 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-25 10:03:38,258 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:03:38,258 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:38,259 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:46,773 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:03:54,949 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:04:00,987 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-25 10:04:06,712 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:04:06,712 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-25 10:04:06,712 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-25 10:04:06,712 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-25 10:04:06,713 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 10:04:06,713 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-25 10:04:12,382 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 10:04:12,382 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-25 10:04:12,382 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-25 10:04:12,383 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:61]:》》》》》用例【设置使能接口参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:63]:test_api:set_gripper_enable
DEBUG 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:64]:test_parameters:2
INFO 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:76]:请求结果断言成功，用例【设置使能接口参数超限】测试成功
INFO 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:78]:》》》》》用例【设置使能接口参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪上使能】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-25 10:04:12,386 [test_set_gripper_enabled.py-->line:36]:test_parameters:1
DEBUG 2025-03-25 10:04:12,429 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:04:12,429 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪上使能】测试成功
INFO 2025-03-25 10:04:12,429 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪上使能】测试完成《《《《《
INFO 2025-03-25 10:04:12,429 [test_set_gripper_enabled.py-->line:33]:》》》》》用例【设置夹爪下使能】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,429 [test_set_gripper_enabled.py-->line:35]:test_api:set_gripper_enable
DEBUG 2025-03-25 10:04:12,430 [test_set_gripper_enabled.py-->line:36]:test_parameters:0
DEBUG 2025-03-25 10:04:12,476 [test_set_gripper_enabled.py-->line:41]:请求类型断言成功
INFO 2025-03-25 10:04:12,476 [test_set_gripper_enabled.py-->line:54]:请求结果断言成功，用例【设置夹爪下使能】测试成功
INFO 2025-03-25 10:04:12,476 [test_set_gripper_enabled.py-->line:56]:》》》》》用例【设置夹爪下使能】测试完成《《《《《
INFO 2025-03-25 10:04:12,477 [test_set_gripper_enabled.py-->line:28]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:67]:test_parameters:256
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:64]:》》》》》用例【设置ID参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:66]:test_api:set_gripper_id
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:67]:test_parameters:-1
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:79]:请求结果断言成功，用例【设置ID参数超限】测试成功
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:81]:》》》》》用例【设置ID参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:34]:》》》》》用例【正确设置固件ID号】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:36]:test_api:set_gripper_id
DEBUG 2025-03-25 10:04:12,479 [test_set_gripper_id.py-->line:37]:test_parameters:10
DEBUG 2025-03-25 10:04:12,569 [test_set_gripper_id.py-->line:43]:请求类型断言成功
INFO 2025-03-25 10:04:12,569 [test_set_gripper_id.py-->line:57]:请求结果断言成功，用例【正确设置固件ID号】测试成功
INFO 2025-03-25 10:04:12,569 [test_set_gripper_id.py-->line:59]:》》》》》用例【正确设置固件ID号】测试完成《《《《《
INFO 2025-03-25 10:04:12,615 [test_set_gripper_id.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:12,618 [test_set_gripper_joint_angle.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:73]:test_joint:7
DEBUG 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:74]:test_angle:100
INFO 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-25 10:04:12,619 [test_set_gripper_joint_angle.py-->line:70]:》》》》》用例【设置角度超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:72]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:73]:test_joint:1
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:74]:test_angle:110
INFO 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:86]:请求结果断言成功，用例【设置角度超限】测试成功
INFO 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:88]:》》》》》用例【设置角度超限】测试完成《《《《《
INFO 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置1关节运动到20度】开始测试《《《《《
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:41]:test_joint:1
DEBUG 2025-03-25 10:04:12,620 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-25 10:04:14,715 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-25 10:04:14,715 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-25 10:04:14,717 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-25 10:04:14,717 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-25 10:04:14,717 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置1关节运动到20度】测试完成《《《《《
INFO 2025-03-25 10:04:14,718 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置2关节运动到10度】开始测试《《《《《
DEBUG 2025-03-25 10:04:14,718 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:14,718 [test_set_gripper_joint_angle.py-->line:41]:test_joint:2
DEBUG 2025-03-25 10:04:14,718 [test_set_gripper_joint_angle.py-->line:42]:test_angle:10
DEBUG 2025-03-25 10:04:16,811 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-25 10:04:16,811 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 9 != 10
DEBUG 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置2关节运动到10度】测试完成《《《《《
INFO 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置3关节运动到20度】开始测试《《《《《
DEBUG 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:41]:test_joint:3
DEBUG 2025-03-25 10:04:16,812 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
INFO 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:63]:请求结果断言成功，用例【设置3关节运动到20度】测试成功
INFO 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置3关节运动到20度】测试完成《《《《《
INFO 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置4关节运动到20度】开始测试《《《《《
DEBUG 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:18,910 [test_set_gripper_joint_angle.py-->line:41]:test_joint:4
DEBUG 2025-03-25 10:04:18,911 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-25 10:04:21,018 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-25 10:04:21,018 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 19 != 20
DEBUG 2025-03-25 10:04:21,018 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-25 10:04:21,019 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-25 10:04:21,019 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置4关节运动到20度】测试完成《《《《《
INFO 2025-03-25 10:04:21,019 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置5关节运动到20度】开始测试《《《《《
DEBUG 2025-03-25 10:04:21,019 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:21,020 [test_set_gripper_joint_angle.py-->line:41]:test_joint:5
DEBUG 2025-03-25 10:04:21,020 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-25 10:04:23,115 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-25 10:04:23,115 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 17 != 20
DEBUG 2025-03-25 10:04:23,115 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-25 10:04:23,115 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-25 10:04:23,115 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置5关节运动到20度】测试完成《《《《《
INFO 2025-03-25 10:04:23,117 [test_set_gripper_joint_angle.py-->line:38]:》》》》》用例【设置6关节运动到20度】开始测试《《《《《
DEBUG 2025-03-25 10:04:23,117 [test_set_gripper_joint_angle.py-->line:40]:test_api:set_gripper_joint_angle
DEBUG 2025-03-25 10:04:23,117 [test_set_gripper_joint_angle.py-->line:41]:test_joint:6
DEBUG 2025-03-25 10:04:23,117 [test_set_gripper_joint_angle.py-->line:42]:test_angle:20
DEBUG 2025-03-25 10:04:25,212 [test_set_gripper_joint_angle.py-->line:49]:请求类型断言成功
ERROR 2025-03-25 10:04:25,212 [test_set_gripper_joint_angle.py-->line:58]:请求结果断言失败
Traceback (most recent call last):
  File "C:\Users\Elephant\Desktop\elephant-test\test_my_hand\test_set_gripper_joint_angle.py", line 56, in test_set_gripper_joint_angle
    self.assertEqual(self.get_res,case["angle"])
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 845, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\Elephant\AppData\Local\Programs\Python\Python310\lib\unittest\case.py", line 838, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 15 != 20
DEBUG 2025-03-25 10:04:25,213 [test_set_gripper_joint_angle.py-->line:59]:期望数据：1
DEBUG 2025-03-25 10:04:25,213 [test_set_gripper_joint_angle.py-->line:60]:实际结果：1
INFO 2025-03-25 10:04:25,213 [test_set_gripper_joint_angle.py-->line:65]:》》》》》用例【设置6关节运动到20度】测试完成《《《《《
INFO 2025-03-25 10:04:37,540 [test_set_gripper_joint_angle.py-->line:33]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置7关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置7关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置7关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置0关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置0关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,544 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置0关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置1关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置1关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置1关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置2关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置2关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置2关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置3关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置3关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置3关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置4关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置4关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,546 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置4关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,556 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置5关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置5关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置5关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:65]:》》》》》用例【设置6关节cw值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:67]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:80]:请求结果断言成功，用例【设置6关节cw值（超限）】测试成功
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:82]:》》》》》用例【设置6关节cw值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置1关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:37,557 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置1关节cw值】测试成功
INFO 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置1关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置2关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:37,650 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置2关节cw值】测试成功
INFO 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置2关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置3关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:37,743 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置3关节cw值】测试成功
INFO 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置3关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置4关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:37,838 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:37,932 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:37,932 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置4关节cw值】测试成功
INFO 2025-03-25 10:04:37,932 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置4关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:37,932 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置5关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:37,933 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:37,933 [test_set_gripper_joint_cw.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:37,933 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,026 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,026 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置5关节cw值】测试成功
INFO 2025-03-25 10:04:38,026 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置5关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:38,026 [test_set_gripper_joint_cw.py-->line:34]:》》》》》用例【设置6关节cw值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,027 [test_set_gripper_joint_cw.py-->line:36]:test_api:set_gripper_joint_cw
DEBUG 2025-03-25 10:04:38,027 [test_set_gripper_joint_cw.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:38,027 [test_set_gripper_joint_cw.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,119 [test_set_gripper_joint_cw.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,119 [test_set_gripper_joint_cw.py-->line:58]:请求结果断言成功，用例【设置6关节cw值】测试成功
INFO 2025-03-25 10:04:38,119 [test_set_gripper_joint_cw.py-->line:60]:》》》》》用例【设置6关节cw值】测试完成《《《《《
INFO 2025-03-25 10:04:38,401 [test_set_gripper_joint_cw.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:38,402 [test_set_gripper_joint_cww.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:38,402 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置7关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,402 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,402 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置7关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置7关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置0关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置0关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置0关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置1关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置1关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置1关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置2关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置2关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置2关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置3关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:17
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置3关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,403 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置3关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置4关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置4关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置4关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,404 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置5关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,418 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,418 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:38,418 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置5关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,418 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置5关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:65]:》》》》》用例【设置6关节cww值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:67]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:80]:请求结果断言成功，用例【设置6关节cww值（超限）】测试成功
INFO 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:82]:》》》》》用例【设置6关节cww值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置1关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:38,419 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置1关节cww值】测试成功
INFO 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置1关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置2关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:38,508 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置2关节cww值】测试成功
INFO 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置2关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置3关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:38,602 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,694 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,694 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置3关节cww值】测试成功
INFO 2025-03-25 10:04:38,694 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置3关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:38,694 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置4关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,694 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,695 [test_set_gripper_joint_cww.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:38,695 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置4关节cww值】测试成功
INFO 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置4关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置5关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:38,786 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置5关节cww值】测试成功
INFO 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置5关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:34]:》》》》》用例【设置6关节cww值】开始测试《《《《《
DEBUG 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:36]:test_api:set_gripper_joint_cww
DEBUG 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:38,879 [test_set_gripper_joint_cww.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:38,973 [test_set_gripper_joint_cww.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:38,973 [test_set_gripper_joint_cww.py-->line:58]:请求结果断言成功，用例【设置6关节cww值】测试成功
INFO 2025-03-25 10:04:38,973 [test_set_gripper_joint_cww.py-->line:60]:》》》》》用例【设置6关节cww值】测试完成《《《《《
INFO 2025-03-25 10:04:39,254 [test_set_gripper_joint_cww.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置7关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置7关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置7关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置0关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,257 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置0关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置0关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置1关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置1关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置1关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,258 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置2关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置2关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置2关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置3关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置3关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置3关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置4关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,259 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:39,260 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置4关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,260 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置4关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,270 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置5关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,270 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,270 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:39,270 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置5关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,270 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置5关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:65]:》》》》》用例【设置6关节d值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:67]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:80]:请求结果断言成功，用例【设置6关节d值（超限）】测试成功
INFO 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:82]:》》》》》用例【设置6关节d值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置1关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:39,272 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置1关节d值】测试成功
INFO 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置1关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置2关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,364 [test_set_gripper_joint_d.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:39,365 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置2关节d值】测试成功
INFO 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置2关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置3关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:39,457 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置3关节d值】测试成功
INFO 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置3关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置4关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:39,552 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,647 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,647 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置4关节d值】测试成功
INFO 2025-03-25 10:04:39,647 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置4关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:39,647 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置5关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,647 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,648 [test_set_gripper_joint_d.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:39,648 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,741 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,741 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置5关节d值】测试成功
INFO 2025-03-25 10:04:39,741 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置5关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:39,742 [test_set_gripper_joint_d.py-->line:34]:》》》》》用例【设置6关节d值】开始测试《《《《《
DEBUG 2025-03-25 10:04:39,742 [test_set_gripper_joint_d.py-->line:36]:test_api:set_gripper_joint_d
DEBUG 2025-03-25 10:04:39,742 [test_set_gripper_joint_d.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:39,742 [test_set_gripper_joint_d.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:39,834 [test_set_gripper_joint_d.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:39,834 [test_set_gripper_joint_d.py-->line:58]:请求结果断言成功，用例【设置6关节d值】测试成功
INFO 2025-03-25 10:04:39,834 [test_set_gripper_joint_d.py-->line:60]:》》》》》用例【设置6关节d值】测试完成《《《《《
INFO 2025-03-25 10:04:40,115 [test_set_gripper_joint_d.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:40,117 [test_set_gripper_joint_i.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:40,117 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置7关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,117 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,117 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:40,117 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置7关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置7关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置0关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置0关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置0关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置1关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置1关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,118 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置1关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置2关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置2关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置2关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置3关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置3关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置3关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置4关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置4关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,119 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置4关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,130 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置5关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置5关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置5关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:65]:》》》》》用例【设置6关节i值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,131 [test_set_gripper_joint_i.py-->line:67]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:80]:请求结果断言成功，用例【设置6关节i值（超限）】测试成功
INFO 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:82]:》》》》》用例【设置6关节i值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置1关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:40,132 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,225 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,225 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置1关节i值】测试成功
INFO 2025-03-25 10:04:40,225 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置1关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,225 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置2关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,225 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,226 [test_set_gripper_joint_i.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:40,226 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置2关节i值】测试成功
INFO 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置2关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置3关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:40,318 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置3关节i值】测试成功
INFO 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置3关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置4关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,413 [test_set_gripper_joint_i.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:40,414 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置4关节i值】测试成功
INFO 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置4关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置5关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:40,505 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,598 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,598 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置5关节i值】测试成功
INFO 2025-03-25 10:04:40,598 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置5关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,598 [test_set_gripper_joint_i.py-->line:34]:》》》》》用例【设置6关节i值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,598 [test_set_gripper_joint_i.py-->line:36]:test_api:set_gripper_joint_i
DEBUG 2025-03-25 10:04:40,599 [test_set_gripper_joint_i.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:40,599 [test_set_gripper_joint_i.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:40,692 [test_set_gripper_joint_i.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:40,692 [test_set_gripper_joint_i.py-->line:58]:请求结果断言成功，用例【设置6关节i值】测试成功
INFO 2025-03-25 10:04:40,692 [test_set_gripper_joint_i.py-->line:60]:》》》》》用例【设置6关节i值】测试完成《《《《《
INFO 2025-03-25 10:04:40,974 [test_set_gripper_joint_i.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置7关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置7关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置7关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置0关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:68]:test_parameters:150
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置0关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,976 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置0关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置1关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置1关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置1关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置2关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置2关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置2关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置3关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:256
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置3关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置3关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置4关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置4关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,977 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置4关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,988 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置5关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,988 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置5关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置5关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:65]:》》》》》用例【设置6关节p值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:67]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:80]:请求结果断言成功，用例【设置6关节p值（超限）】测试成功
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:82]:》》》》》用例【设置6关节p值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:40,989 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置1关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:40,990 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:40,990 [test_set_gripper_joint_p.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:40,990 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置1关节p值】测试成功
INFO 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置1关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置2关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:41,083 [test_set_gripper_joint_p.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:41,084 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置2关节p值】测试成功
INFO 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置2关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置3关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:41,178 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置3关节p值】测试成功
INFO 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置3关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置4关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:41,270 [test_set_gripper_joint_p.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:41,271 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置4关节p值】测试成功
INFO 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置4关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置5关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:41,365 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置5关节p值】测试成功
INFO 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置5关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:34]:》》》》》用例【设置6关节p值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:36]:test_api:set_gripper_joint_p
DEBUG 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:41,458 [test_set_gripper_joint_p.py-->line:38]:test_parameter:150
DEBUG 2025-03-25 10:04:41,552 [test_set_gripper_joint_p.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,552 [test_set_gripper_joint_p.py-->line:58]:请求结果断言成功，用例【设置6关节p值】测试成功
INFO 2025-03-25 10:04:41,552 [test_set_gripper_joint_p.py-->line:60]:》》》》》用例【设置6关节p值】测试完成《《《《《
INFO 2025-03-25 10:04:41,830 [test_set_gripper_joint_p.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,833 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,834 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 10:04:41,835 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,846 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-25 10:04:41,847 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:41,848 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,848 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,848 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:41,848 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:41,939 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:41,939 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-25 10:04:41,939 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:41,939 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:41,940 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:41,940 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:41,940 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:42,033 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:42,124 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:42,217 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,311 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,311 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-25 10:04:42,311 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:42,312 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,312 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 10:04:42,312 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:42,312 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,404 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,404 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-25 10:04:42,404 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-25 10:04:42,736 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:42,738 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-25 10:04:42,739 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,740 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:42,741 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,753 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:42,754 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,850 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:42,851 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:42,951 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:42,952 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:43,045 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:43,046 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:43,139 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:43,232 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 10:04:43,324 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,324 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-25 10:04:43,324 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-25 10:04:43,624 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置7关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置7关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,626 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置7关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置0关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:3
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置0关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置0关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置1关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置1关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置1关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,627 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置2关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置2关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置2关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置3关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:255
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置3关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置3关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置4关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,628 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置4关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置4关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置5关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,637 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置5关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置5关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:65]:》》》》》用例【设置6关节mini_pressure值（超限）】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:67]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:68]:test_parameters:-1
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:80]:请求结果断言成功，用例【设置6关节mini_pressure值（超限）】测试成功
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:82]:》》》》》用例【设置6关节mini_pressure值（超限）】测试完成《《《《《
INFO 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置1关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:1
DEBUG 2025-03-25 10:04:43,638 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:43,733 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,733 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置1关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:43,733 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置1关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:43,733 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置2关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,734 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,734 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:2
DEBUG 2025-03-25 10:04:43,734 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置2关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置2关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置3关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:3
DEBUG 2025-03-25 10:04:43,827 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置3关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置3关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置4关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:4
DEBUG 2025-03-25 10:04:43,920 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置4关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置4关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置5关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:5
DEBUG 2025-03-25 10:04:44,013 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:44,106 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置5关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置5关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:34]:》》》》》用例【设置6关节mini_pressure值】开始测试《《《《《
DEBUG 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:36]:test_api:set_gripper_joint_mini_pressure
DEBUG 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:37]:test_joint:6
DEBUG 2025-03-25 10:04:44,107 [test_set_gripper_mini_pressure.py-->line:38]:test_parameter:3
DEBUG 2025-03-25 10:04:44,199 [test_set_gripper_mini_pressure.py-->line:44]:请求类型断言成功
INFO 2025-03-25 10:04:44,199 [test_set_gripper_mini_pressure.py-->line:58]:请求结果断言成功，用例【设置6关节mini_pressure值】测试成功
INFO 2025-03-25 10:04:44,199 [test_set_gripper_mini_pressure.py-->line:60]:》》》》》用例【设置6关节mini_pressure值】测试完成《《《《《
INFO 2025-03-25 10:04:44,479 [test_set_gripper_mini_pressure.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 10:04:44,481 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-25 10:04:44,481 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:44,481 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:04:44,482 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-25 10:04:44,482 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-25 10:04:44,482 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:49,485 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:49,485 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:04:49,485 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-25 10:04:49,485 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-25 10:04:49,485 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:54,494 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-25 10:04:54,494 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:04:54,494 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-25 10:04:54,494 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-25 10:04:54,494 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-25 10:04:59,500 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-25 10:04:59,500 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:04:59,500 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-25 10:04:59,500 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-25 10:04:59,548 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:04:59,548 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-25 10:04:59,548 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-25 10:05:04,559 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-25 10:05:04,559 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:05:04,559 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-25 10:05:04,559 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-25 10:05:04,607 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:05:04,607 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-25 10:05:04,607 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-25 10:05:09,622 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-25 10:05:09,622 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:05:09,622 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-25 10:05:09,622 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-25 10:05:09,670 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:05:09,670 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-25 10:05:09,670 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-25 10:05:14,681 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-25 10:05:14,681 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:05:14,681 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-25 10:05:14,681 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-25 10:05:14,728 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:05:14,728 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-25 10:05:14,728 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-25 10:05:19,737 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-25 10:05:19,737 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-25 10:05:19,737 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-25 10:05:19,737 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-25 10:05:19,784 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-25 10:05:19,784 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-25 10:05:19,784 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-25 10:05:27,807 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
INFO 2025-03-25 14:35:41,282 [test_set_gripper_calibrate.py-->line:25]:初始化完成，接口测试开始
INFO 2025-03-25 14:35:41,286 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-25 14:35:41,286 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:35:41,286 [test_set_gripper_calibrate.py-->line:69]:test_joints:7
INFO 2025-03-25 14:35:41,286 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-25 14:35:41,286 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-25 14:35:41,287 [test_set_gripper_calibrate.py-->line:66]:》》》》》用例【设置关节超限】开始测试《《《《《
DEBUG 2025-03-25 14:35:41,287 [test_set_gripper_calibrate.py-->line:68]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:35:41,287 [test_set_gripper_calibrate.py-->line:69]:test_joints:-1
INFO 2025-03-25 14:35:41,287 [test_set_gripper_calibrate.py-->line:81]:请求结果断言成功，用例【设置关节超限】测试成功
INFO 2025-03-25 14:35:41,287 [test_set_gripper_calibrate.py-->line:83]:》》》》》用例【设置关节超限】测试完成《《《《《
INFO 2025-03-25 14:35:41,288 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置1关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:35:41,288 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:35:41,288 [test_set_gripper_calibrate.py-->line:40]:test_joints:1
DEBUG 2025-03-25 14:35:48,001 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:35:48,001 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置1关节零位】测试成功
INFO 2025-03-25 14:35:48,002 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置1关节零位】测试完成《《《《《
INFO 2025-03-25 14:35:48,002 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置2关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:35:48,003 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:35:48,003 [test_set_gripper_calibrate.py-->line:40]:test_joints:2
DEBUG 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置2关节零位】测试成功
INFO 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置2关节零位】测试完成《《《《《
INFO 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置3关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:35:56,133 [test_set_gripper_calibrate.py-->line:40]:test_joints:3
DEBUG 2025-03-25 14:36:04,548 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:36:04,548 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置3关节零位】测试成功
INFO 2025-03-25 14:36:04,548 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置3关节零位】测试完成《《《《《
INFO 2025-03-25 14:36:04,549 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置4关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:36:04,549 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:36:04,549 [test_set_gripper_calibrate.py-->line:40]:test_joints:4
DEBUG 2025-03-25 14:36:10,551 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:36:10,551 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置4关节零位】测试成功
INFO 2025-03-25 14:36:10,551 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置4关节零位】测试完成《《《《《
INFO 2025-03-25 14:36:10,552 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置5关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:36:10,552 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:36:10,552 [test_set_gripper_calibrate.py-->line:40]:test_joints:5
DEBUG 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置5关节零位】测试成功
INFO 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置5关节零位】测试完成《《《《《
INFO 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:37]:》》》》》用例【设置6关节零位】开始测试《《《《《
DEBUG 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:39]:test_api:set_gripper_joint_calibration
DEBUG 2025-03-25 14:36:16,074 [test_set_gripper_calibrate.py-->line:40]:test_joints:6
DEBUG 2025-03-25 14:36:21,468 [test_set_gripper_calibrate.py-->line:46]:请求类型断言成功
INFO 2025-03-25 14:36:21,468 [test_set_gripper_calibrate.py-->line:59]:请求结果断言成功，用例【设置6关节零位】测试成功
INFO 2025-03-25 14:36:21,468 [test_set_gripper_calibrate.py-->line:61]:》》》》》用例【设置6关节零位】测试完成《《《《《
INFO 2025-03-25 14:36:21,469 [test_set_gripper_calibrate.py-->line:32]:环境清理完成，接口测试结束
INFO 2025-03-25 14:40:52,634 [test_set_gripper_joint_torque.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置7关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置7关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置7关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置0关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:50
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置0关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,635 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置0关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置1关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置1关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置1关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置2关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置2关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置2关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置3关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置3关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,636 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置3关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置4关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置4关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置4关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置5关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置5关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置5关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:65]:》》》》》用例【设置6关节torque值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:67]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:68]:test_parameters:-1
INFO 2025-03-25 14:40:52,637 [test_set_gripper_joint_torque.py-->line:80]:请求结果断言成功，用例【设置6关节torque值（超限）】测试成功
INFO 2025-03-25 14:40:52,638 [test_set_gripper_joint_torque.py-->line:82]:》》》》》用例【设置6关节torque值（超限）】测试完成《《《《《
INFO 2025-03-25 14:40:52,638 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置1关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,638 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,638 [test_set_gripper_joint_torque.py-->line:37]:test_joint:1
DEBUG 2025-03-25 14:40:52,638 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置1关节torque值】测试成功
INFO 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置1关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置2关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:37]:test_joint:2
DEBUG 2025-03-25 14:40:52,729 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:52,822 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:52,822 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置2关节torque值】测试成功
INFO 2025-03-25 14:40:52,822 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置2关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:52,823 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置3关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,823 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,823 [test_set_gripper_joint_torque.py-->line:37]:test_joint:3
DEBUG 2025-03-25 14:40:52,823 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:52,917 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:52,917 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置3关节torque值】测试成功
INFO 2025-03-25 14:40:52,917 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置3关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:52,917 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置4关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:52,918 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:52,918 [test_set_gripper_joint_torque.py-->line:37]:test_joint:4
DEBUG 2025-03-25 14:40:52,918 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置4关节torque值】测试成功
INFO 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置4关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置5关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:53,010 [test_set_gripper_joint_torque.py-->line:37]:test_joint:5
DEBUG 2025-03-25 14:40:53,011 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:53,104 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:53,104 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置5关节torque值】测试成功
INFO 2025-03-25 14:40:53,104 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置5关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:53,106 [test_set_gripper_joint_torque.py-->line:34]:》》》》》用例【设置6关节torque值】开始测试《《《《《
DEBUG 2025-03-25 14:40:53,106 [test_set_gripper_joint_torque.py-->line:36]:test_api:set_gripper_joint_torque
DEBUG 2025-03-25 14:40:53,106 [test_set_gripper_joint_torque.py-->line:37]:test_joint:6
DEBUG 2025-03-25 14:40:53,106 [test_set_gripper_joint_torque.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:40:53,198 [test_set_gripper_joint_torque.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:40:53,198 [test_set_gripper_joint_torque.py-->line:58]:请求结果断言成功，用例【设置6关节torque值】测试成功
INFO 2025-03-25 14:40:53,198 [test_set_gripper_joint_torque.py-->line:60]:》》》》》用例【设置6关节torque值】测试完成《《《《《
INFO 2025-03-25 14:40:53,510 [test_set_gripper_joint_torque.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-25 14:43:07,264 [test_set_gripper_joint_speed.py-->line:21]:初始化完成，接口测试开始
INFO 2025-03-25 14:43:07,265 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置7关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,265 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,265 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置7关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置7关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置0关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:50
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置0关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置0关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置1关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置1关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,266 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置1关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置2关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置2关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置2关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置3关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:101
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置3关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置3关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置4关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置4关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,267 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置4关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置5关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置5关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置5关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:65]:》》》》》用例【设置6关节speed值（超限）】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:67]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,270 [test_set_gripper_joint_speed.py-->line:68]:test_parameters:0
INFO 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:80]:请求结果断言成功，用例【设置6关节speed值（超限）】测试成功
INFO 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:82]:》》》》》用例【设置6关节speed值（超限）】测试完成《《《《《
INFO 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置1关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:37]:test_joint:1
DEBUG 2025-03-25 14:43:07,271 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置1关节speed值】测试成功
INFO 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置1关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置2关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:37]:test_joint:2
DEBUG 2025-03-25 14:43:07,360 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,453 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,453 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置2关节speed值】测试成功
INFO 2025-03-25 14:43:07,453 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置2关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:07,454 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置3关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,454 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,454 [test_set_gripper_joint_speed.py-->line:37]:test_joint:3
DEBUG 2025-03-25 14:43:07,454 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,548 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,548 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置3关节speed值】测试成功
INFO 2025-03-25 14:43:07,548 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置3关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:07,549 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置4关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,549 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,549 [test_set_gripper_joint_speed.py-->line:37]:test_joint:4
DEBUG 2025-03-25 14:43:07,549 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,673 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,673 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置4关节speed值】测试成功
INFO 2025-03-25 14:43:07,673 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置4关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:07,674 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置5关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,674 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,674 [test_set_gripper_joint_speed.py-->line:37]:test_joint:5
DEBUG 2025-03-25 14:43:07,674 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,765 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,765 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置5关节speed值】测试成功
INFO 2025-03-25 14:43:07,765 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置5关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:07,766 [test_set_gripper_joint_speed.py-->line:34]:》》》》》用例【设置6关节speed值】开始测试《《《《《
DEBUG 2025-03-25 14:43:07,766 [test_set_gripper_joint_speed.py-->line:36]:test_api:set_gripper_joint_speed
DEBUG 2025-03-25 14:43:07,766 [test_set_gripper_joint_speed.py-->line:37]:test_joint:6
DEBUG 2025-03-25 14:43:07,766 [test_set_gripper_joint_speed.py-->line:38]:test_parameter:50
DEBUG 2025-03-25 14:43:07,860 [test_set_gripper_joint_speed.py-->line:44]:请求类型断言成功
INFO 2025-03-25 14:43:07,860 [test_set_gripper_joint_speed.py-->line:58]:请求结果断言成功，用例【设置6关节speed值】测试成功
INFO 2025-03-25 14:43:07,860 [test_set_gripper_joint_speed.py-->line:60]:》》》》》用例【设置6关节speed值】测试完成《《《《《
INFO 2025-03-25 14:43:08,144 [test_set_gripper_joint_speed.py-->line:29]:环境清理完成，接口测试结束
INFO 2025-03-26 11:51:21,657 [test_set_gripper_pose.py-->line:23]:初始化完成，接口测试开始
INFO 2025-03-26 11:51:21,659 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置pose参数超限】开始测试《《《《《
DEBUG 2025-03-26 11:51:21,659 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:21,660 [test_set_gripper_pose.py-->line:71]:test_pose:5
INFO 2025-03-26 11:51:21,660 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置pose参数超限】测试成功
INFO 2025-03-26 11:51:21,660 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置pose参数超限】测试完成《《《《《
INFO 2025-03-26 11:51:26,670 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置rank参数超限】开始测试《《《《《
DEBUG 2025-03-26 11:51:26,670 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:26,670 [test_set_gripper_pose.py-->line:71]:test_pose:4
INFO 2025-03-26 11:51:26,670 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置rank参数超限】测试成功
INFO 2025-03-26 11:51:26,670 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置rank参数超限】测试完成《《《《《
INFO 2025-03-26 11:51:31,683 [test_set_gripper_pose.py-->line:68]:》》》》》用例【设置is_free参数超限】开始测试《《《《《
DEBUG 2025-03-26 11:51:31,683 [test_set_gripper_pose.py-->line:70]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:31,683 [test_set_gripper_pose.py-->line:71]:test_pose:0
INFO 2025-03-26 11:51:31,683 [test_set_gripper_pose.py-->line:83]:请求结果断言成功，用例【设置is_free参数超限】测试成功
INFO 2025-03-26 11:51:31,683 [test_set_gripper_pose.py-->line:85]:》》》》》用例【设置is_free参数超限】测试完成《《《《《
INFO 2025-03-26 11:51:36,685 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置全关节回零】开始测试《《《《《
DEBUG 2025-03-26 11:51:36,685 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:36,685 [test_set_gripper_pose.py-->line:42]:test_pose:0
DEBUG 2025-03-26 11:51:36,685 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-26 11:51:36,731 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-26 11:51:36,731 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置全关节回零】测试成功
INFO 2025-03-26 11:51:36,731 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置全关节回零】测试完成《《《《《
INFO 2025-03-26 11:51:41,742 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-26 11:51:41,742 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:41,742 [test_set_gripper_pose.py-->line:42]:test_pose:1
DEBUG 2025-03-26 11:51:41,742 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-26 11:51:41,789 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-26 11:51:41,789 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与拇指捏合】测试成功
INFO 2025-03-26 11:51:41,789 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与拇指捏合】测试完成《《《《《
INFO 2025-03-26 11:51:46,791 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置中指与拇指捏合】开始测试《《《《《
DEBUG 2025-03-26 11:51:46,792 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:46,792 [test_set_gripper_pose.py-->line:42]:test_pose:2
DEBUG 2025-03-26 11:51:46,792 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-26 11:51:46,838 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-26 11:51:46,838 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置中指与拇指捏合】测试成功
INFO 2025-03-26 11:51:46,838 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置中指与拇指捏合】测试完成《《《《《
INFO 2025-03-26 11:51:51,849 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置食指与中指捏合】开始测试《《《《《
DEBUG 2025-03-26 11:51:51,849 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:51,850 [test_set_gripper_pose.py-->line:42]:test_pose:3
DEBUG 2025-03-26 11:51:51,850 [test_set_gripper_pose.py-->line:43]:test_rank:5
DEBUG 2025-03-26 11:51:51,896 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-26 11:51:51,896 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置食指与中指捏合】测试成功
INFO 2025-03-26 11:51:51,896 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置食指与中指捏合】测试完成《《《《《
INFO 2025-03-26 11:51:56,912 [test_set_gripper_pose.py-->line:39]:》》》》》用例【设置三指合拢】开始测试《《《《《
DEBUG 2025-03-26 11:51:56,912 [test_set_gripper_pose.py-->line:41]:test_api:set_gripper_pose
DEBUG 2025-03-26 11:51:56,913 [test_set_gripper_pose.py-->line:42]:test_pose:4
DEBUG 2025-03-26 11:51:56,913 [test_set_gripper_pose.py-->line:43]:test_rank:15
DEBUG 2025-03-26 11:51:56,958 [test_set_gripper_pose.py-->line:48]:请求类型断言成功
INFO 2025-03-26 11:51:56,958 [test_set_gripper_pose.py-->line:61]:请求结果断言成功，用例【设置三指合拢】测试成功
INFO 2025-03-26 11:51:56,958 [test_set_gripper_pose.py-->line:63]:》》》》》用例【设置三指合拢】测试完成《《《《《
INFO 2025-03-26 11:52:05,011 [test_set_gripper_pose.py-->line:31]:环境清理完成，接口测试结束
